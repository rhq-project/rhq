<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.rhq</groupId>
        <artifactId>rhq-core-parent</artifactId>
        <version>4.11.0-SNAPSHOT</version>
    </parent>

    <groupId>org.rhq</groupId>
    <artifactId>rhq-core-dbutils</artifactId>
    <packaging>jar</packaging>
    <name>RHQ Database Utilities</name>
    <description>Database schema setup, upgrade and other utilities</description>

    <properties>
        <db.schema.version>2.146</db.schema.version>
        <rhq.ds.type-mapping>${rhq.test.ds.type-mapping}</rhq.ds.type-mapping>
        <rhq.ds.server-name>${rhq.test.ds.server-name}</rhq.ds.server-name>
        <rhq.ds.db-name>${rhq.test.ds.db-name}</rhq.ds.db-name>
        <rhq.ds.port>${rhq.test.ds.port}</rhq.ds.port>
        <rhq.ds.connection-url>${rhq.test.ds.connection-url}</rhq.ds.connection-url>
        <rhq.ds.user-name>${rhq.test.ds.user-name}</rhq.ds.user-name>
        <rhq.ds.password>${rhq.test.ds.password}</rhq.ds.password>
        <rhq.ds.driver-class>${rhq.test.ds.driver-class}</rhq.ds.driver-class>
    </properties>

    <dependencies>
        <dependency>
          <groupId>${project.groupId}</groupId>
          <artifactId>rhq-core-util</artifactId>
          <version>${project.version}</version>
        </dependency>

        <!-- 3rd Party Deps -->
        <dependency>
            <groupId>ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.6.5</version>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.1.1</version>
        </dependency>
        <dependency>
            <groupId>ant</groupId>
            <artifactId>ant-launcher</artifactId>
            <scope>test</scope>
            <version>1.6.5</version>
        </dependency>
        <dependency>
            <groupId>i18nlog</groupId>
            <artifactId>i18nlog</artifactId>
        </dependency>
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>net.sourceforge.jtds</groupId>
            <artifactId>jtds</artifactId>
            <!-- NOTE: The version is defined in the root POM's dependencyManagement section. -->
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${postgresql.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                        <version>1.1.1</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.rhq.core.db.reset.DBReset</mainClass>
                            <systemProperties>
                                <systemProperty>
                                    <key>rhq.ds.type-mapping</key>
                                    <value>${rhq.ds.type-mapping}</value>
                                </systemProperty>
                                <systemProperty>
                                    <key>rhq.ds.server-name</key>
                                    <value>${rhq.ds.server-name}</value>
                                </systemProperty>
                                <systemProperty>
                                    <key>rhq.ds.db-name</key>
                                    <value>${rhq.ds.db-name}</value>
                                </systemProperty>
                                <systemProperty>
                                    <key>rhq.ds.port</key>
                                    <value>${rhq.ds.port}</value>
                                </systemProperty>
                                <systemProperty>
                                    <key>rhq.ds.connection-url</key>
                                    <value>${rhq.ds.connection-url}</value>
                                </systemProperty>
                                <systemProperty>
                                    <key>rhq.db.admin.username</key>
                                    <value>${rhq.db.admin.username}</value>
                                </systemProperty>
                                <systemProperty>
                                    <key>rhq.db.admin.password</key>
                                    <value>${rhq.db.admin.password}</value>
                                </systemProperty>
                                <systemProperty>
                                    <key>rhq.ds.user-name</key>
                                    <value>${rhq.ds.user-name}</value>
                                </systemProperty>
                                <systemProperty>
                                    <key>rhq.ds.password</key>
                                    <value>${rhq.ds.password}</value>
                                </systemProperty>
                            </systemProperties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemProperties>
                        <property>
                            <name>DatabaseTest.nofail</name>
                            <value>${DatabaseTest.nofail}</value>
                        </property>
                        <property>
                            <name>AntDatabaseTest.test-resources</name>
                            <value>${basedir}/src/test/resources</value>
                        </property>
                    </systemProperties>
                    <!-- The below is required for tests to run against Oracle. -->
                    <additionalClasspathElements>
                        <additionalClasspathElement>${settings.localRepository}/com/oracle/ojdbc6/${ojdbc6.version}/ojdbc6-${ojdbc6.version}.jar</additionalClasspathElement>
                    </additionalClasspathElements>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>db.dev</id>
            <activation>
                <property>
                    <name>db</name>
                    <value>dev</value>
                </property>
            </activation>

            <!-- these are defined in the dev profile also - see below in that profile for why -->
            <properties>
                <rhq.ds.type-mapping>${rhq.dev.ds.type-mapping}</rhq.ds.type-mapping>
                <rhq.ds.server-name>${rhq.dev.ds.server-name}</rhq.ds.server-name>
                <rhq.ds.db-name>${rhq.dev.ds.db-name}</rhq.ds.db-name>
                <rhq.ds.port>${rhq.dev.ds.port}</rhq.ds.port>
                <rhq.ds.connection-url>${rhq.dev.ds.connection-url}</rhq.ds.connection-url>
                <rhq.ds.user-name>${rhq.dev.ds.user-name}</rhq.ds.user-name>
                <rhq.ds.password>${rhq.dev.ds.password}</rhq.ds.password>
                <rhq.ds.driver-class>${rhq.dev.ds.driver-class}</rhq.ds.driver-class>
            </properties>
        </profile>

        <profile>
            <id>latest</id>
            <activation>
                <property>
                    <name>!jon.release</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <dependencies>
                          <dependency>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>rhq-cassandra-schema</artifactId>
                            <version>${project.version}</version>
                          </dependency>
                          <dependency>
                            <groupId>org.codehaus.groovy</groupId>
                            <artifactId>groovy-all</artifactId>
                            <version>2.1.3</version>
                          </dependency>
                        </dependencies>
                        <executions>
                            <execution>
                                <id>i18n-generator</id>
                                <phase>process-classes</phase>
                                <configuration>
                                    <target>
                                        <!-- generate the I18N resource bundles -->
                                        <taskdef name="i18n" classpathref="maven.runtime.classpath" classname="mazz.i18n.ant.I18NAntTask" />
                                        <i18n outputdir="${project.build.outputDirectory}" defaultlocale="en" verbose="false" append="false" verify="true">
                                            <classpath refid="maven.runtime.classpath" />
                                            <classfileset dir="${project.build.outputDirectory}">
                                                <include name="**/*I18NResourceKeys.class" />
                                            </classfileset>
                                        </i18n>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <!-- Note that DBReset, if already run, automatically sets dbsetup  -->
                            <execution>
                                <id>dbsetup-server</id>
                                <phase>test</phase>
                                <configuration>
                                    <target>
                                        <echo> Performing server db setup</echo>
                                        <property name="settings.localRepository" location="${user.home}/.m2/repository" />
                                        <ant antfile="${basedir}/src/main/scripts/dbsetup-build.xml">
                                            <property name="settings.localRepository" value="${settings.localRepository}" />
                                            <property name="ojdbc6.version" value="${ojdbc6.version}" />
                                            <property name="postgresql.version" value="${postgresql.version}" />
                                            <property name="h2.version" value="${h2.version}" />
                                            <property name="jtds.version" value="${jtds.version}" />
                                            <property name="task.classpath.property" refid="maven.test.classpath" />
                                            <property name="rhq.ds.type-mapping" value="${rhq.ds.type-mapping}" />
                                            <property name="rhq.ds.db-name" value="${rhq.ds.db-name}" />
                                            <property name="rhq.ds.port" value="${rhq.ds.port}" />
                                            <property name="rhq.ds.connection-url" value="${rhq.ds.connection-url}" />
                                            <property name="rhq.ds.user-name" value="${rhq.ds.user-name}" />
                                            <property name="rhq.ds.password" value="${rhq.ds.password}" />
                                            <property name="project.version" value="${project.version}" />
                                            <property name="db.schema.version" value="${db.schema.version}" />
                                            <property name="dbsetup" value="${dbsetup}" />
                                            <property name="dbsetup-uninstall" value="${dbsetup-uninstall}" />
                                            <property name="dbsetup-upgrade" value="${dbsetup-upgrade}" />
                                            <property name="dbsetup-export" value="${dbsetup-export}" />
                                        </ant>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>dbsetup-storage</id>
                                <phase>test</phase>
                                <configuration>
                                    <target>
                                        <script language="groovy">
                                          import org.rhq.cassandra.schema.SchemaManager

                                          if (project.getProperty('dbsetup-upgrade') || project.getProperty('dbreset') || project.getProperty('dbsetup')) {
                                            if (project.getProperty('storage-schema')) {
                                                self.log('PERFORMING STORAGE NODE SETUP TO LATEST SCHEMA')
                                                username = project.getProperty('rhq.storage.username') ?: "rhqadmin"
                                                password = project.getProperty('rhq.storage.password') ?: "1eeb2f255e832171df8592078de921bc"

                                                nodes = project.getProperty('rhq.strorage.nodes') ?: "127.0.0.1"
                                                cqlPort = (project.getProperty('rhq.storage.cql-port') ?: "9142") as Integer

                                                schemaManager = new SchemaManager(username, password, nodes.split(","), cqlPort)

                                                if (project.getProperty('dbreset') == 'true') {
                                                  self.log('Dropping schema')
                                                  schemaManager.drop()
                                                }

                                                self.log('Install schema')
                                                schemaManager.install()
                                            }
                                          }
                                        </script>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>generate-dbsetup-dbupgrade-xml-files</id>
                                <phase>process-classes</phase>
                                <configuration>
                                    <target>
                                        <property name="settings.localRepository" location="${user.home}/.m2/repository" />
                                        <ant antfile="${basedir}/src/main/scripts/dbsetup-build.xml" target="dbsetup-combine">
                                            <property name="settings.localRepository" value="${settings.localRepository}" />
                                            <property name="ojdbc6.version" value="${ojdbc6.version}" />
                                            <property name="postgresql.version" value="${postgresql.version}" />
                                            <property name="h2.version" value="${h2.version}" />
                                            <property name="jtds.version" value="${jtds.version}" />
                                            <property name="task.classpath.property" refid="maven.test.classpath" />
                                            <property name="rhq.ds.type-mapping" value="${rhq.ds.type-mapping}" />
                                            <property name="rhq.ds.db-name" value="${rhq.ds.db-name}" />
                                            <property name="rhq.ds.port" value="${rhq.ds.port}" />
                                            <property name="rhq.ds.connection-url" value="${rhq.ds.connection-url}" />
                                            <property name="rhq.ds.user-name" value="${rhq.ds.user-name}" />
                                            <property name="rhq.ds.password" value="${rhq.ds.password}" />
                                            <property name="project.version" value="${project.version}" />
                                            <property name="db.schema.version" value="${db.schema.version}" />
                                        </ant>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <!-- This execution will abort the build if the database schema is not up to date. If you want the build to continue, regardless of your currently installed
                                    schema, then pass -Ddbsetup-do-not-check-schema to the mvn command line. -->
                                <id>test-db-schema-version</id>
                                <phase>test</phase>
                                <configuration>
                                    <target>
                                        <property name="settings.localRepository" location="${user.home}/.m2/repository" />
                                        <echo>settings.localRepository=${settings.localRepository}</echo>
                                        <!-- -Ddbreset implies -Ddbsetup-do-not-check-schema=true -->
                                        <condition property="dbsetup-do-not-check-schema" value="true">
                                          <and>
                                            <not>
                                              <isset property="dbsetup-do-not-check-schema"/>
                                            </not>
                                            <isset property="dbreset"/>
                                          </and>
                                        </condition>
                                        <ant antfile="${basedir}/src/main/scripts/dbsetup-build.xml" target="dbsetup-check-schema">
                                            <property name="settings.localRepository" value="${settings.localRepository}" />
                                            <property name="ojdbc6.version" value="${ojdbc6.version}" />
                                            <property name="postgresql.version" value="${postgresql.version}" />
                                            <property name="h2.version" value="${h2.version}" />
                                            <property name="jtds.version" value="${jtds.version}" />
                                            <property name="task.classpath.property" refid="maven.test.classpath" />
                                            <property name="rhq.ds.db-name" value="${rhq.ds.db-name}" />
                                            <property name="rhq.ds.port" value="${rhq.ds.port}" />
                                            <property name="rhq.ds.type-mapping" value="${rhq.ds.type-mapping}" />
                                            <property name="rhq.ds.connection-url" value="${rhq.ds.connection-url}" />
                                            <property name="rhq.ds.user-name" value="${rhq.ds.user-name}" />
                                            <property name="rhq.ds.password" value="${rhq.ds.password}" />
                                            <property name="project.version" value="${project.version}" />
                                            <property name="db.schema.version" value="${db.schema.version}" />
                                            <property name="rhq.ds.driver-class" value="${rhq.ds.driver-class}" />
                                            <property name="dbsetup-do-not-check-schema" value="${dbsetup-do-not-check-schema}" />
                                        </ant>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>jon.release</id>
            <activation>
                <property>
                    <name>jon.release</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>generate-schema</id>
                                <phase>test</phase>
                                <configuration>
                                    <target>
                                        <property name="settings.localRepository" location="${user.home}/.m2/repository" />
                                        <ant antfile="${basedir}/src/main/scripts/dbsetup-build.xml" target="create-release-schema">
                                            <property name="settings.localRepository" value="${settings.localRepository}" />
                                            <property name="ojdbc6.version" value="${ojdbc6.version}" />
                                            <property name="postgresql.version" value="${postgresql.version}" />
                                            <property name="h2.version" value="${h2.version}" />
                                            <property name="jtds.version" value="${jtds.version}" />
                                            <property name="task.classpath.property" refid="maven.test.classpath" />
                                            <property name="rhq.ds.type-mapping" value="${rhq.ds.type-mapping}" />
                                            <property name="rhq.ds.db-name" value="${rhq.ds.db-name}" />
                                            <property name="rhq.ds.port" value="${rhq.ds.port}" />
                                            <property name="rhq.ds.connection-url" value="${rhq.ds.connection-url}" />
                                            <property name="rhq.ds.user-name" value="${rhq.ds.user-name}" />
                                            <property name="rhq.ds.password" value="${rhq.ds.password}" />
                                            <property name="project.version" value="${project.version}" />
                                            <property name="db.schema.version" value="${db.schema.version}" />
                                            <property name="jon.release" value="${jon.release}" />
                                        </ant>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>dev</id>
            <properties>
                <rhq.rootDir>../../..</rhq.rootDir>
                <rhq.containerDir>${rhq.rootDir}/${rhq.devContainerServerPath}</rhq.containerDir>
                <rhq.deploymentDir>${rhq.containerDir}/${rhq.earLibDir}</rhq.deploymentDir>

                <!-- these are defined in the db.dev profile also - but if you just use -Pdev without -Ddb=dev or -Pdb.dev
                     then you won't be using the dev DB. These properties allow -Pdev -Ddbsetup to do what you'd expect
                     (that is, setup the dev DB)
                 -->
                <rhq.ds.type-mapping>${rhq.dev.ds.type-mapping}</rhq.ds.type-mapping>
                <rhq.ds.server-name>${rhq.dev.ds.server-name}</rhq.ds.server-name>
                <rhq.ds.db-name>${rhq.dev.ds.db-name}</rhq.ds.db-name>
                <rhq.ds.port>${rhq.dev.ds.port}</rhq.ds.port>
                <rhq.ds.connection-url>${rhq.dev.ds.connection-url}</rhq.ds.connection-url>
                <rhq.ds.user-name>${rhq.dev.ds.user-name}</rhq.ds.user-name>
                <rhq.ds.password>${rhq.dev.ds.password}</rhq.ds.password>
                <rhq.ds.driver-class>${rhq.dev.ds.driver-class}</rhq.ds.driver-class>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>deploy</id>
                                <phase>compile</phase>
                                <configuration>
                                    <target>
                                        <mkdir dir="${rhq.deploymentDir}" />
                                        <property name="deployment.file" location="${rhq.deploymentDir}/${project.build.finalName}.jar" />
                                        <echo>*** Updating ${deployment.file}...</echo>
                                        <jar destfile="${deployment.file}" basedir="${project.build.outputDirectory}" />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>undeploy</id>
                                <phase>clean</phase>
                                <configuration>
                                    <target>
                                        <property name="deployment.file" location="${rhq.deploymentDir}/${project.build.finalName}.jar" />
                                        <echo>*** Deleting ${deployment.file}...</echo>
                                        <delete file="${deployment.file}" />
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>add-test-users</id>
                                <phase>install</phase>
                                <configuration>
                                    <target>
                                        <echo>*** Adding Test Users To DB</echo>
                                        <sql driver="${rhq.ds.driver-class}"
                                             url="${rhq.ds.connection-url}"
                                             userid="${rhq.ds.user-name}"
                                             password="${rhq.ds.password}"
                                             onerror="continue"
                                             output="${basedir}/target/rhq-add-test-users.out"
                                             print="true"
                                             showheaders="false">
                                            <classpath>
                                                <pathelement location="${settings.localRepository}/com/oracle/ojdbc6/${ojdbc6.version}/ojdbc6-${ojdbc6.version}.jar"/>
                                                <pathelement location="${settings.localRepository}/postgresql/postgresql/${postgresql.version}/postgresql-${postgresql.version}.jar"/>
                                                <pathelement location="${settings.localRepository}/com/h2database/h2/${h2.version}/h2-${h2.version}.jar"/>
                                                <pathelement location="${settings.localRepository}/net/sourceforge/jtds/jtds/${jtds.version}/jtds-${jtds.version}.jar"/>
                                            </classpath>
                                            <transaction>
                                                insert into RHQ_SUBJECT (ID, NAME, FIRST_NAME, LAST_NAME, EMAIL_ADDRESS) values (10, 'anon', 'Anonymous', 'User', 'anon@localhost');
                                                insert into RHQ_PRINCIPAL (ID, PRINCIPAL, PASSWORD) values (10, 'anon', 'KuZvkLd4iriVDo+BuCnJRw==');
                                            </transaction>
                                            <transaction>
                                                insert into RHQ_SUBJECT (ID, NAME, FIRST_NAME, LAST_NAME, EMAIL_ADDRESS) values (11, 'dev', 'Developer', 'Manager', 'dev@localhost');
                                                insert into RHQ_PRINCIPAL (ID, PRINCIPAL, PASSWORD) values (11, 'dev', '53mJ7SF1jngzGyDkd/xVgg==');
                                                insert into RHQ_SUBJECT_ROLE_MAP (SUBJECT_ID, ROLE_ID) values (11, 2);
                                            </transaction>
                                        </sql>
                                    </target>
                                </configuration>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>ojdbc-driver</id>
            <dependencies>
                <!--  The provided scope in the root pom is not sufficient, we need this
                      dependency for dbreset, if it is used. -->
                <dependency>
                    <groupId>com.oracle</groupId>
                    <artifactId>ojdbc6</artifactId>
                    <version>${ojdbc6.version}</version>
                    <scope>compile</scope>
                </dependency>
            </dependencies>

            <!-- TODO: defer to root pom version when we can agree on a version -->
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <pluginRepositories>
        <pluginRepository>
            <id>codehaus-snapshots</id>
            <name>codehaus snapshots</name>
            <url>http://snapshots.repository.codehaus.org</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

</project>
