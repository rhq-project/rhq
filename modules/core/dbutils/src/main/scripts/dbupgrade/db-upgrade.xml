<project name="db-upgrade" default="upgrade" basedir=".">

    <!--
    This target upgrades a database schema. The parameters that it accepts are: jdbc.url = the jdbc url of the database
    to upgrade jdbc.user = the user to connect to the database as jdbc.password = the database user's password
    target.schema.version = the schema version to upgrade to. If this is omitted then the schema is upgraded to the
    latest version. This target assumes that the taskdefs for the dbupgrade ant task have already been defined.
    -->

    <target name="upgrade">

        <echo>
            DB Upgrade:
            JDBC URL: ${jdbc.url}
            JDBC User: ${jdbc.user}
            Update Version: ${target.schema.version}
        </echo>

        <dbupgrade jdbcUrl="${jdbc.url}"
                   jdbcUser="${jdbc.user}"
                   jdbcPassword="${jdbc.password}"
                   valueColumn="PROPERTY_VALUE"
                   table="RHQ_SYSTEM_CONFIG"
                   keyColumn="PROPERTY_KEY"
                   keyMatch="DB_SCHEMA_VERSION"
                   targetSchemaVersion="${target.schema.version}">

            <schemaSpec version="2.0">
                <!-- Empty initial schema to avoid install failure on default latest schema version -->
            </schemaSpec>

            <!-- 2.1 through 2.69 removed, no longer needed as these versions are not in use -->

            <schemaSpec version="2.70">
                <schema-addColumn table="RHQ_ALERT" column="ACK_TIME" columnType="LONG" />
                <schema-addColumn table="RHQ_ALERT" column="ACK_SUBJECT" precision="100" columnType="VARCHAR2" />
            </schemaSpec>
            <schemaSpec version="2.70.1">
                <schema-addColumn table="RHQ_ALERT_NOTIFICATION" column="SENDER_NAME" precision="100" columnType="VARCHAR2" />
                <schema-addColumn table="RHQ_ALERT_NOTIFICATION" column="SENDER_CONFIG_ID" columnType="INTEGER" />
                <schema-addColumn table="RHQ_ALERT_NOTIFICATION" column="EXTRA_CONFIG_ID" columnType="INTEGER" />
                <schema-directSQL>
                    <statement>
                        ALTER TABLE RHQ_ALERT_NOTIFICATION
                        ADD CONSTRAINT RHQ_AN_SENDER_CONFIG_ID_FK
                        FOREIGN KEY (SENDER_CONFIG_ID)
                        REFERENCES RHQ_CONFIG (ID)
                    </statement>
                </schema-directSQL>
                <schema-directSQL>
                    <statement>
                        ALTER TABLE RHQ_ALERT_NOTIFICATION
                        ADD CONSTRAINT RHQ_AN_EXTRA_CONFIG_ID_FK
                        FOREIGN KEY (EXTRA_CONFIG_ID)
                        REFERENCES RHQ_CONFIG (ID)
                    </statement>
                </schema-directSQL>
            </schemaSpec>
            <schemaSpec version="2.70.2">
                <schema-addColumn table="RHQ_ALERT_NOTIF_LOG" column="SENDER" columnType="VARCHAR2" precision="100" />
                <schema-addColumn table="RHQ_ALERT_NOTIF_LOG" column="RESULT_STATE" columnType="VARCHAR2" precision="20" />
                <schema-addColumn table="RHQ_ALERT_NOTIF_LOG" column="MESSAGE" columnType="VARCHAR2" precision="4000" />
            </schemaSpec>
            <schemaSpec version="2.70.3">
                <schema-directSQL ignoreError="true">
                    <statement desc="Dropping unique index RHQ_ALERT_IDX_ALERT">
                        DROP INDEX RHQ_ALERT_IDX_ALERT
                    </statement>
                </schema-directSQL>
            </schemaSpec>
            <schemaSpec version="2.70.4">
                <!-- turn first-class notification data into configuration objects for custom alert senders -->
                <schema-alterColumn table="RHQ_ALERT_NOTIFICATION" column="NOTIFICATION_TYPE" nullable="TRUE" />
                <schema-javaTask className="CustomAlertSenderUpgradeTask" />
                <!-- the old alert notification rows won't have SENDER_NAME set, remove them -->
                <schema-directSQL>
                    <statement desc="Removing obsolete alert notifications">
                        DELETE FROM RHQ_ALERT_NOTIFICATION WHERE SENDER_NAME IS NULL
                    </statement>
                </schema-directSQL>
                <!-- the old alert notification log rows won't have SENDER set, remove them -->
                <schema-directSQL>
                    <statement desc="Removing obsolete alert notification logs">
                        DELETE FROM RHQ_ALERT_NOTIF_LOG WHERE SENDER IS NULL
                    </statement>
                </schema-directSQL>
                <schema-deleteColumn table="RHQ_ALERT_NOTIFICATION" column="NOTIFICATION_TYPE" />
            </schemaSpec>
            <schemaSpec version="2.70.5">
                <!-- remove first-class alert notification structures from definition side of the model-->
                <schema-deleteColumn table="RHQ_ALERT_NOTIFICATION" column="snmp_host" />
                <schema-deleteColumn table="RHQ_ALERT_NOTIFICATION" column="snmp_port" />
                <schema-deleteColumn table="RHQ_ALERT_NOTIFICATION" column="snmp_oid" />
                <schema-deleteColumn table="RHQ_ALERT_NOTIFICATION" column="email_address" />
                <schema-deleteColumn table="RHQ_ALERT_NOTIFICATION" column="role_id" />
                <schema-deleteColumn table="RHQ_ALERT_NOTIFICATION" column="subject_id" />
                <schema-deleteColumn table="RHQ_ALERT_DEFINITION"   column="operation_def_id" />
            </schemaSpec>
            <schemaSpec version="2.70.6">
                <schema-deleteColumn table="RHQ_ALERT_NOTIF_LOG" column="roles" />
                <schema-deleteColumn table="RHQ_ALERT_NOTIF_LOG" column="subjects" />
                <schema-deleteColumn table="RHQ_ALERT_NOTIF_LOG" column="emails" />
                <schema-deleteColumn table="RHQ_ALERT"           column="triggered_operation" />
            </schemaSpec>
            <schemaSpec version="2.70.7">
                <schema-directSQL ignoreError="true">
                    <statement desc="Recreating RHQ_ALERT_IDX_ALERT as non-unique index">
                        CREATE INDEX RHQ_ALERT_IDX_ALERT ON RHQ_ALERT_NOTIF_LOG (alert_id)
                    </statement>
                </schema-directSQL>
            </schemaSpec>
            <schemaSpec version="2.70.8">
                <!-- only set the sender columns to NON-NULL after the CustomAlertSenderUpgradeTask completes -->
                <schema-alterColumn table="RHQ_ALERT_NOTIFICATION" column="SENDER_NAME" nullable="FALSE" />
                <schema-alterColumn table="RHQ_ALERT_NOTIF_LOG" column="SENDER" nullable="FALSE" />
            </schemaSpec>

            <!-- RHQ Advisory Representation -->
            <schemaSpec version="2.71">
                <schema-createSequence name="RHQ_ADVISORY_ID_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement desc="Creating table RHQ_ADVISORY">
                        CREATE TABLE RHQ_ADVISORY ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>

                <schema-alterColumn table="RHQ_ADVISORY" column="ID" nullable="false" columnType="INTEGER" />
                <schema-addColumn   table="RHQ_ADVISORY" column="ADVISORY" precision="64" columnType="VARCHAR2" />
                <schema-alterColumn table="RHQ_ADVISORY" column="ADVISORY" nullable="false" />
                <schema-addColumn   table="RHQ_ADVISORY" column="ADVISORY_TYPE" precision="64" columnType="VARCHAR2" />
                <schema-alterColumn table="RHQ_ADVISORY" column="ADVISORY_TYPE" nullable="false" />
                <schema-addColumn   table="RHQ_ADVISORY" column="ADVISORY_REL" precision="64" columnType="VARCHAR2" />
                <schema-addColumn   table="RHQ_ADVISORY" column="ADVISORY_NAME" precision="64" columnType="VARCHAR2" />
                <schema-addColumn   table="RHQ_ADVISORY" column="DESCRIPTION" precision="4000" columnType="VARCHAR2" />
                <schema-addColumn   table="RHQ_ADVISORY" column="SYNOPSIS" precision="4000" columnType="VARCHAR2" />
                <schema-alterColumn table="RHQ_ADVISORY" column="SYNOPSIS" nullable="false" />
                <schema-addColumn   table="RHQ_ADVISORY" column="TOPIC" precision="4000" columnType="VARCHAR2" />
                <schema-addColumn   table="RHQ_ADVISORY" column="SOLUTION" precision="4000" columnType="VARCHAR2" />
                <schema-addColumn   table="RHQ_ADVISORY" column="SEVERITY" precision="64" columnType="VARCHAR2" />
                <schema-addColumn   table="RHQ_ADVISORY" column="ISSUE_DATE" columnType="LONG" />
                <schema-addColumn   table="RHQ_ADVISORY" column="UPDATE_DATE" columnType="LONG" />
                <schema-addColumn   table="RHQ_ADVISORY" column="CTIME" columnType="LONG" />
                <schema-alterColumn table="RHQ_ADVISORY" column="CTIME" nullable="false" />
                <schema-addColumn   table="RHQ_ADVISORY" column="LAST_MODIFIED" columnType="LONG" />
                <schema-alterColumn table="RHQ_ADVISORY" column="LAST_MODIFIED" nullable="false" />

                <schema-directSQL ignoreError="true">
                    <statement>
                        CREATE UNIQUE INDEX RHQ_ADVISORY_NAME_UQ ON RHQ_ADVISORY ( ADVISORY_NAME )
                    </statement>
                </schema-directSQL>
                <schema-directSQL ignoreError="true">
                    <statement>
                        CREATE UNIQUE INDEX RHQ_ADVISORY_UQ ON RHQ_ADVISORY ( ADVISORY )
                    </statement>
                </schema-directSQL>
                <schema-directSQL ignoreError="true">
                    <statement>
                        CREATE INDEX RHQ_ADVISORY_UDATE_IDX ON RHQ_ADVISORY (UPDATE_DATE )
                    </statement>
                </schema-directSQL>

                <schema-createSequence name="RHQ_ADVISORY_PACKAGE_ID_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement>
                        CREATE TABLE RHQ_ADVISORY_PACKAGE ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_ADVISORY_PACKAGE" column="ID" nullable="false" />
                <schema-addColumn   table="RHQ_ADVISORY_PACKAGE" column="ADVISORY_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_ADVISORY_PACKAGE" column="ADVISORY_ID" nullable="false" />
                <schema-addColumn   table="RHQ_ADVISORY_PACKAGE" column="PACKAGE_VERSION_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_ADVISORY_PACKAGE" column="PACKAGE_VERSION_ID" nullable="false" />
                <schema-addColumn   table="RHQ_ADVISORY_PACKAGE" column="LAST_MODIFIED" columnType="LONG" />
                <schema-alterColumn table="RHQ_ADVISORY_PACKAGE" column="LAST_MODIFIED" nullable="false" />
                <schema-directSQL ignoreError="true">
                    <statement>
                        CREATE UNIQUE INDEX RHQ_ADVISORY_PACKAGE_IDX ON RHQ_ADVISORY_PACKAGE ( ADVISORY_ID, PACKAGE_VERSION_ID )
                    </statement>
                    <statement>
                       ALTER TABLE RHQ_ADVISORY_PACKAGE
                       ADD CONSTRAINT RHQ_AP_ADVISORY_ID_FKEY
                       FOREIGN KEY ( ADVISORY_ID )
                       REFERENCES RHQ_ADVISORY ( ID )
                   </statement>
                    <statement>
                        ALTER TABLE RHQ_ADVISORY_PACKAGE
                        ADD CONSTRAINT RHQ_AP_PACKAGE_VERSION_ID_FK
                        FOREIGN KEY ( PACKAGE_VERSION_ID )
                        REFERENCES RHQ_PACKAGE_VERSION ( ID )
                    </statement>
                </schema-directSQL>

                <schema-createSequence name="RHQ_CVE_ID_SEQ" initial="101" />
                <schema-directSQL>
                    <statement>
                        CREATE TABLE RHQ_CVE ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_CVE" column="ID" nullable="false" />
                <schema-addColumn   table="RHQ_CVE" column="NAME" precision="64" columnType="VARCHAR2" />
                <schema-alterColumn table="RHQ_CVE" column="NAME" nullable="false" />

                <schema-createSequence name="RHQ_ADVISORY_CVE_ID_SEQ" initial="10001"/>
                <schema-directSQL>
                    <statement>
                        CREATE TABLE RHQ_ADVISORY_CVE ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_ADVISORY_CVE" column="ID" nullable="false" />
                <schema-addColumn   table="RHQ_ADVISORY_CVE" column="ADVISORY_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_ADVISORY_CVE" column="ADVISORY_ID" nullable="false" />
                <schema-addColumn   table="RHQ_ADVISORY_CVE" column="CVE_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_ADVISORY_CVE" column="CVE_ID" nullable="false" />
                <schema-addColumn   table="RHQ_ADVISORY_CVE" column="LAST_MODIFIED" columnType="LONG" />
                <schema-alterColumn table="RHQ_ADVISORY_CVE" column="LAST_MODIFIED" nullable="false" />
                <schema-directSQL ignoreError="true">
                    <statement>
                        CREATE UNIQUE INDEX RHQ_ADVISORY_CVE_IDX ON RHQ_ADVISORY_CVE ( ADVISORY_ID, CVE_ID )
                    </statement>
                    <statement>
                        ALTER TABLE RHQ_ADVISORY_CVE
                        ADD CONSTRAINT RHQ_ACVE_ADVISORY_ID_FK
                        FOREIGN KEY ( ADVISORY_ID )
                        REFERENCES RHQ_ADVISORY ( ID )
                    </statement>
                    <statement>
                       ALTER TABLE RHQ_ADVISORY_CVE
                       ADD CONSTRAINT RHQ_ACVE_CVE_ID_FK
                       FOREIGN KEY ( CVE_ID )
                       REFERENCES RHQ_CVE ( ID )
                   </statement>
                </schema-directSQL>

                <schema-createSequence name="RHQ_ADVISORY_BUGLIST_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement>
                        CREATE TABLE RHQ_ADVISORY_BUGLIST ( ID INTEGER PRIMARY KEY)
                    </statement>
                </schema-directSQL>

                <schema-alterColumn table="RHQ_ADVISORY_BUGLIST" column="ID" nullable="false" />
                <schema-addColumn   table="RHQ_ADVISORY_BUGLIST" column="ADVISORY_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_ADVISORY_BUGLIST" column="ADVISORY_ID" nullable="false" />
                <schema-addColumn   table="RHQ_ADVISORY_BUGLIST" column="BUG_ID" PRECISION="256" columnType="VARCHAR2" />
                <schema-alterColumn table="RHQ_ADVISORY_BUGLIST" column="BUG_ID" nullable="false" />
                <schema-addColumn   table="RHQ_ADVISORY_BUGLIST" column="LAST_MODIFIED" columnType="LONG" />
                <schema-alterColumn table="RHQ_ADVISORY_BUGLIST" column="LAST_MODIFIED" nullable="false" />
                <schema-directSQL ignoreError="true">
                    <statement>
                       CREATE UNIQUE INDEX RHQ_ADVISORY_BUG_IDX ON RHQ_ADVISORY_BUGLIST ( ADVISORY_ID, BUG_ID )
                   </statement>
                    <statement>
                       ALTER TABLE RHQ_ADVISORY_BUGLIST
                       ADD CONSTRAINT RHQ_AB_ADVISORY_ID_FK
                       FOREIGN KEY ( ADVISORY_ID )
                       REFERENCES RHQ_ADVISORY ( ID )
                   </statement>
                </schema-directSQL>

                <schema-directSQL>
                    <statement>
                        CREATE TABLE RHQ_REPO_ADVISORY ( REPO_ID INTEGER )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_REPO_ADVISORY" column="REPO_ID" nullable="false" />
                <schema-addColumn   table="RHQ_REPO_ADVISORY" column="ADVISORY_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_REPO_ADVISORY" column="ADVISORY_ID" nullable="false" />
                <schema-addColumn   table="RHQ_REPO_ADVISORY" column="LAST_MODIFIED" columnType="LONG" />
                <schema-alterColumn table="RHQ_REPO_ADVISORY" column="LAST_MODIFIED" nullable="false" />
                <schema-directSQL>
                    <statement>
                        ALTER TABLE RHQ_REPO_ADVISORY
                        ADD CONSTRAINT RHQ_REPO_ADV_MAP_KEY
                        PRIMARY KEY ( REPO_ID, ADVISORY_ID )
                    </statement>
                    <statement>
                        ALTER TABLE RHQ_REPO_ADVISORY
                        ADD CONSTRAINT RHQ_RA_REPO_ID_FK
                        FOREIGN KEY ( REPO_ID )
                        REFERENCES RHQ_REPO ( ID )
                    </statement>
                    <statement>
                        ALTER TABLE RHQ_REPO_ADVISORY
                        ADD CONSTRAINT RHQ_RA_ADVISORY_ID_FK
                        FOREIGN KEY ( ADVISORY_ID )
                        REFERENCES RHQ_ADVISORY ( ID )
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <!-- Adding repo_sync support -->
            <schemaSpec version="2.72">
                <schema-createSequence name="RHQ_REPO_SYNC_ID_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement>
                        CREATE TABLE RHQ_REPO_SYNC ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_REPO_SYNC" column="ID" nullable="false" />
                <schema-addColumn table="RHQ_REPO_SYNC" column="STATUS" precision="16" columnType="VARCHAR2" />
                <schema-alterColumn table="RHQ_REPO_SYNC" column="STATUS" nullable="false" />
                <schema-addColumn table="RHQ_REPO_SYNC" column="START_TIME" columnType="LONG" />
                <schema-alterColumn table="RHQ_REPO_SYNC" column="START_TIME" nullable="false" />
                <schema-addColumn table="RHQ_REPO_SYNC" column="END_TIME" columnType="LONG" />
                <schema-addColumn table="RHQ_REPO_SYNC" column="RESULTS" columnType="LONGVARCHAR" />
                <schema-addColumn table="RHQ_REPO_SYNC" column="PERCENT_COMPLETE" columnType="LONG" />
                <schema-addColumn table="RHQ_REPO_SYNC" column="REPO_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_REPO_SYNC" column="REPO_ID" nullable="false" />
                <schema-directSQL>
                    <statement desc="Creating RHQ_REPO_SYNC foreign key relation to RHQ_REPO for scheduled jobs">
                        ALTER TABLE RHQ_REPO_SYNC
                        ADD CONSTRAINT RHQ_REPO_SYNC_REPO_ID_FKEY
                        FOREIGN KEY (REPO_ID)
                        REFERENCES RHQ_REPO (ID)
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.75">
                <schema-addColumn table="RHQ_REPO" column="SYNC_SCHEDULE" columnType="VARCHAR2" precision="64" />
            </schemaSpec>

            <schemaSpec version="2.76">
                <schema-addColumn table="RHQ_CONFIG_PROP_DEF" column="DYNAMIC_TYPE" columnType="VARCHAR2" precision="20" />
                <schema-addColumn table="RHQ_CONFIG_PROP_DEF" column="DYNAMIC_KEY" columnType="VARCHAR2" precision="128" />
            </schemaSpec>

            <schemaSpec version="2.78">
                <!-- RHQ_BUNDLE_TYPE -->
                <schema-createSequence name="RHQ_BUNDLE_TYPE_ID_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement desc="Creating table RHQ_BUNDLE_TYPE">
                        CREATE TABLE RHQ_BUNDLE_TYPE ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_BUNDLE_TYPE" column="ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_TYPE" column="NAME" columnType="VARCHAR2" precision="200" />
                <schema-alterColumn table="RHQ_BUNDLE_TYPE" column="NAME" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_TYPE" column="RESOURCE_TYPE_ID" columnType="INTEGER" />
                <schema-directSQL>
                    <statement desc="Creating RHQ_BUNDLE_TYPE foreign key relation to RHQ_RESOURCE_TYPE">
                        ALTER TABLE RHQ_BUNDLE_TYPE
                        ADD CONSTRAINT RHQ_BT_RESOURCE_TYPE_ID_FK
                        FOREIGN KEY (RESOURCE_TYPE_ID)
                        REFERENCES RHQ_RESOURCE_TYPE (ID)
                    </statement>
                </schema-directSQL>
                <schema-directSQL ignoreError="true">
                    <statement desc="Creating RHQ_BUNDLE_TYPE unique constraint">
                        CREATE UNIQUE INDEX RHQ_BUNDLE_TYPE_UNIQUE ON RHQ_BUNDLE_TYPE (name)
                    </statement>
                </schema-directSQL>

                <!-- RHQ_BUNDLE -->
                <schema-createSequence name="RHQ_BUNDLE_ID_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement desc="Creating table RHQ_BUNDLE">
                        CREATE TABLE RHQ_BUNDLE ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_BUNDLE" column="ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE" column="NAME" columnType="VARCHAR2" precision="200" />
                <schema-alterColumn table="RHQ_BUNDLE" column="NAME" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE" column="DESCRIPTION" columnType="VARCHAR2" precision="500" />
                <schema-addColumn   table="RHQ_BUNDLE" column="BUNDLE_TYPE_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_BUNDLE" column="BUNDLE_TYPE_ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE" column="PACKAGE_TYPE_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_BUNDLE" column="PACKAGE_TYPE_ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE" column="REPO_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_BUNDLE" column="REPO_ID" nullable="FALSE" />
                <schema-directSQL>
                   <statement desc="Creating RHQ_BUNDLE foreign key relation to RHQ_BUNDLE_TYPE">
                        ALTER TABLE RHQ_BUNDLE
                        ADD CONSTRAINT RHQ_B_BUNDLE_TYPE_ID_FK
                        FOREIGN KEY (BUNDLE_TYPE_ID)
                        REFERENCES RHQ_BUNDLE_TYPE (ID)
                    </statement>
                    <statement desc="Creating RHQ_BUNDLE foreign key relation to RHQ_REPO">
                        ALTER TABLE RHQ_BUNDLE
                        ADD CONSTRAINT RHQ_B_REPO_ID_FK
                        FOREIGN KEY (REPO_ID)
                        REFERENCES RHQ_REPO (ID)
                    </statement>
                    <statement desc="Creating RHQ_BUNDLE foreign key relation to RHQ_PACKAGE_TYPE">
                        ALTER TABLE RHQ_BUNDLE
                        ADD CONSTRAINT RHQ_B_PACKAGE_TYPE_ID_FK
                        FOREIGN KEY (PACKAGE_TYPE_ID)
                        REFERENCES RHQ_PACKAGE_TYPE (ID)
                    </statement>
                </schema-directSQL>
                <schema-directSQL ignoreError="true">
                    <statement desc="Creating RHQ_BUNDLE unique constraint">
                        CREATE UNIQUE INDEX RHQ_BUNDLE_UNIQUE ON RHQ_BUNDLE (bundle_type_id, name)
                    </statement>
                </schema-directSQL>

                <!-- RHQ_BUNDLE_VERSION -->
                <schema-createSequence name="RHQ_BUNDLE_VERSION_ID_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement desc="Creating table RHQ_BUNDLE_VERSION">
                        CREATE TABLE RHQ_BUNDLE_VERSION ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_BUNDLE_VERSION" column="ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_VERSION" column="NAME" columnType="VARCHAR2" precision="200" />
                <schema-alterColumn table="RHQ_BUNDLE_VERSION" column="NAME" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_VERSION" column="DESCRIPTION" columnType="VARCHAR2" precision="500" />
                <schema-addColumn   table="RHQ_BUNDLE_VERSION" column="VERSION" columnType="VARCHAR2" precision="500" />
                <schema-alterColumn table="RHQ_BUNDLE_VERSION" column="VERSION" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_VERSION" column="VERSION_ORDER" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_BUNDLE_VERSION" column="VERSION_ORDER" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_VERSION" column="ACTION" columnType="CLOB" />
                <schema-alterColumn table="RHQ_BUNDLE_VERSION" column="ACTION" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_VERSION" column="CONFIG_DEF_ID" columnType="INTEGER" />
                <schema-addColumn   table="RHQ_BUNDLE_VERSION" column="BUNDLE_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_BUNDLE_VERSION" column="BUNDLE_ID" nullable="FALSE" />
                <schema-directSQL>
                    <statement desc="Creating RHQ_BUNDLE_VERSION foreign key relation to RHQ_BUNDLE">
                        ALTER TABLE RHQ_BUNDLE_VERSION
                        ADD CONSTRAINT RHQ_BV_BUNDLE_ID_FK
                        FOREIGN KEY (BUNDLE_ID)
                        REFERENCES RHQ_BUNDLE (ID)
                    </statement>
                    <statement desc="Creating RHQ_BUNDLE_VERSION foreign key relation to RHQ_CONFIG_DEF">
                        ALTER TABLE RHQ_BUNDLE_VERSION
                        ADD CONSTRAINT RHQ_BV_CONFIG_DEF_ID_FK
                        FOREIGN KEY (CONFIG_DEF_ID)
                        REFERENCES RHQ_CONFIG_DEF (ID)
                    </statement>
                </schema-directSQL>
                <schema-directSQL ignoreError="true">
                    <statement desc="Creating RHQ_BUNDLE_VERSION unique constraint">
                        CREATE UNIQUE INDEX RHQ_BUNDLE_VERSION_UNIQUE ON RHQ_BUNDLE_VERSION (bundle_id, name, version)
                    </statement>
                </schema-directSQL>

                <!-- RHQ_BUNDLE_VERSION_REPO -->
                <schema-directSQL>
                    <statement desc="Creating table RHQ_BUNDLE_VERSION_REPO">
                         CREATE TABLE RHQ_BUNDLE_VERSION_REPO ( BUNDLE_VERSION_ID INTEGER )
                     </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_BUNDLE_VERSION_REPO" column="BUNDLE_VERSION_ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_VERSION_REPO" column="REPO_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_BUNDLE_VERSION_REPO" column="REPO_ID" nullable="FALSE" />
                <schema-directSQL>
                    <statement desc="Creating primary key for RHQ_BUNDLE_VERSION_REPO">
                        ALTER TABLE RHQ_BUNDLE_VERSION_REPO ADD PRIMARY KEY ( BUNDLE_VERSION_ID, REPO_ID )
                    </statement>
                    <statement desc="Creating RHQ_BUNDLE_VERSION_REPO foreign key relation to RHQ_BUNDLE_VERSION">
                        ALTER TABLE RHQ_BUNDLE_VERSION_REPO
                        ADD CONSTRAINT RHQ_BVR_BUNDLE_VERSION_ID_FK
                        FOREIGN KEY (BUNDLE_VERSION_ID)
                        REFERENCES RHQ_BUNDLE_VERSION (ID)
                    </statement>
                    <statement desc="Creating RHQ_BUNDLE_VERSION_REPO foreign key relation to RHQ_REPO">
                        ALTER TABLE RHQ_BUNDLE_VERSION_REPO
                        ADD CONSTRAINT RHQ_BVR_REPO_ID_FK
                        FOREIGN KEY (REPO_ID)
                        REFERENCES RHQ_REPO (ID)
                    </statement>
                </schema-directSQL>

                <!-- RHQ_BUNDLE_FILE -->
                <schema-createSequence name="RHQ_BUNDLE_FILE_ID_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement desc="Creating table RHQ_BUNDLE_FILE">
                        CREATE TABLE RHQ_BUNDLE_FILE ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_BUNDLE_FILE" column="ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_FILE" column="BUNDLE_VERSION_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_BUNDLE_FILE" column="BUNDLE_VERSION_ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_FILE" column="PACKAGE_VERSION_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_BUNDLE_FILE" column="PACKAGE_VERSION_ID" nullable="FALSE" />

                <schema-directSQL>
                    <statement desc="Creating RHQ_BUNDLE_FILE foreign key relation to RHQ_BUNDLE_VERSION">
                        ALTER TABLE RHQ_BUNDLE_FILE
                        ADD CONSTRAINT RHQ_BF_BUNDLE_VERSION_ID_FK
                        FOREIGN KEY (BUNDLE_VERSION_ID)
                        REFERENCES RHQ_BUNDLE_VERSION (ID)
                    </statement>
                    <statement desc="Creating RHQ_BUNDLE_FILE foreign key relation to RHQ_PACKAGE_VERSION">
                        ALTER TABLE RHQ_BUNDLE_FILE
                        ADD CONSTRAINT RHQ_BF_PACKAGE_VERSION_ID_FK
                        FOREIGN KEY (PACKAGE_VERSION_ID)
                        REFERENCES RHQ_PACKAGE_VERSION (ID)
                    </statement>
                </schema-directSQL>

                <!-- RHQ_BUNDLE_DESTINATION -->
                <schema-createSequence name="RHQ_BUNDLE_DESTINATION_ID_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement desc="Creating table RHQ_BUNDLE_DESTINATION">
                       CREATE TABLE RHQ_BUNDLE_DESTINATION ( ID INTEGER PRIMARY KEY )
                   </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_BUNDLE_DESTINATION" column="ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_DESTINATION" column="NAME" columnType="VARCHAR2" precision="200" />
                <schema-alterColumn table="RHQ_BUNDLE_DESTINATION" column="NAME" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_DESTINATION" column="DESCRIPTION" columnType="VARCHAR2" precision="500" />
                <schema-addColumn   table="RHQ_BUNDLE_DESTINATION" column="CTIME" columnType="LONG" />
                <schema-alterColumn table="RHQ_BUNDLE_DESTINATION" column="CTIME" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_DESTINATION" column="MTIME" columnType="LONG" />
                <schema-alterColumn table="RHQ_BUNDLE_DESTINATION" column="MTIME" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_DESTINATION" column="BUNDLE_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_BUNDLE_DESTINATION" column="BUNDLE_ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_DESTINATION" column="GROUP_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_BUNDLE_DESTINATION" column="GROUP_ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_DESTINATION" column="DEPLOY_DIR" columnType="VARCHAR2" precision="256" />
                <schema-alterColumn table="RHQ_BUNDLE_DESTINATION" column="DEPLOY_DIR" nullable="FALSE" />

                <schema-directSQL>
                    <statement desc="Creating RHQ_BUNDLE_DESTINATION foreign key relation to RHQ_BUNDLE">
                        ALTER TABLE RHQ_BUNDLE_DESTINATION
                        ADD CONSTRAINT RHQ_BD_BUNDLE_ID_FK
                        FOREIGN KEY (BUNDLE_ID)
                        REFERENCES RHQ_BUNDLE (ID)
                    </statement>
                    <statement desc="Creating RHQ_BUNDLE_DESTINATION foreign key relation to RHQ_RESOURCE_GROUP">
                        ALTER TABLE RHQ_BUNDLE_DESTINATION
                        ADD CONSTRAINT RHQ_BD_GROUP_ID_FK
                        FOREIGN KEY (GROUP_ID)
                        REFERENCES RHQ_RESOURCE_GROUP (ID)
                    </statement>
                </schema-directSQL>
                <schema-directSQL ignoreError="true">
                    <statement desc="Creating RHQ_BUNDLE_DESTINATION unique constraint">
                        CREATE UNIQUE INDEX RHQ_BUNDLE_DESTINATION_UNIQUE
                        ON RHQ_BUNDLE_DESTINATION (bundle_id, group_id, deploy_dir)
                    </statement>
                </schema-directSQL>

                <!-- RHQ_BUNDLE_DEPLOYMENT -->
                <schema-createSequence name="RHQ_BUNDLE_DEPLOYMENT_ID_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement desc="Creating table RHQ_BUNDLE_DEPLOYMENT">
                       CREATE TABLE RHQ_BUNDLE_DEPLOYMENT ( ID INTEGER PRIMARY KEY )
                   </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_BUNDLE_DEPLOYMENT" column="ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_DEPLOYMENT" column="NAME" columnType="VARCHAR2" precision="200" />
                <schema-alterColumn table="RHQ_BUNDLE_DEPLOYMENT" column="NAME" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_DEPLOYMENT" column="DESCRIPTION" columnType="VARCHAR2" precision="500" />
                <schema-addColumn   table="RHQ_BUNDLE_DEPLOYMENT" column="CTIME" columnType="LONG" />
                <schema-alterColumn table="RHQ_BUNDLE_DEPLOYMENT" column="CTIME" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_DEPLOYMENT" column="MTIME" columnType="LONG" />
                <schema-alterColumn table="RHQ_BUNDLE_DEPLOYMENT" column="MTIME" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_DEPLOYMENT" column="BUNDLE_VERSION_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_BUNDLE_DEPLOYMENT" column="BUNDLE_VERSION_ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_DEPLOYMENT" column="BUNDLE_DESTINATION_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_BUNDLE_DEPLOYMENT" column="BUNDLE_DESTINATION_ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_DEPLOYMENT" column="CONFIG_ID" columnType="INTEGER" />
                <schema-addColumn   table="RHQ_BUNDLE_DEPLOYMENT" column="STATUS" columnType="VARCHAR2" precision="16" />
                <schema-alterColumn table="RHQ_BUNDLE_DEPLOYMENT" column="STATUS" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_DEPLOYMENT" column="ERROR_MESSAGE" columnType="LONGVARCHAR" />
                <schema-addColumn   table="RHQ_BUNDLE_DEPLOYMENT" column="SUBJECT_NAME" columnType="VARCHAR2" precision="255" />
                <schema-addColumn   table="RHQ_BUNDLE_DEPLOYMENT" column="IS_LIVE" columnType="BOOLEAN" />
                <schema-alterColumn table="RHQ_BUNDLE_DEPLOYMENT" column="IS_LIVE" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_DEPLOYMENT" column="REPLACED_BUNDLE_DEPLOYMENT_ID" columnType="INTEGER" />

                <schema-directSQL>
                    <statement desc="Creating RHQ_BUNDLE_DEPLOYMENT foreign key relation to RHQ_BUNDLE_VERSION">
                        ALTER TABLE RHQ_BUNDLE_DEPLOYMENT
                        ADD CONSTRAINT RHQ_BD_BUNDLE_VERSION_ID_FK
                        FOREIGN KEY (BUNDLE_VERSION_ID)
                        REFERENCES RHQ_BUNDLE_VERSION (ID)
                    </statement>
                    <statement desc="Creating RHQ_BUNDLE_DEPLOYMENT foreign key relation to RHQ_BUNDLE_DESTINATION">
                        ALTER TABLE RHQ_BUNDLE_DEPLOYMENT
                        ADD CONSTRAINT RHQ_BD_B_DESTINATION_ID_FK
                        FOREIGN KEY (BUNDLE_DESTINATION_ID)
                        REFERENCES RHQ_BUNDLE_DESTINATION (ID)
                    </statement>
                    <statement desc="Creating RHQ_BUNDLE_DEPLOYMENT foreign key relation to RHQ_CONFIG">
                        ALTER TABLE RHQ_BUNDLE_DEPLOYMENT
                        ADD CONSTRAINT RHQ_BD_CONFIG_ID_FK
                        FOREIGN KEY (CONFIG_ID)
                        REFERENCES RHQ_CONFIG (ID)
                    </statement>
                    <statement desc="Creating RHQ_BUNDLE_DEPLOYMENT foreign key relation to RHQ_BUNDLE_DEPLOYMENT">
                        ALTER TABLE RHQ_BUNDLE_DEPLOYMENT
                        ADD CONSTRAINT RHQ_BD_B_DEPLOYMENT_ID_FK
                        FOREIGN KEY (REPLACED_BUNDLE_DEPLOYMENT_ID)
                        REFERENCES RHQ_BUNDLE_DEPLOYMENT (ID)
                    </statement>
                </schema-directSQL>

                <!-- RHQ_BUNDLE_RES_DEPLOY -->
                <schema-createSequence name="RHQ_BUNDLE_RES_DEPLOY_ID_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement desc="Creating table RHQ_BUNDLE_RES_DEPLOY">
                       CREATE TABLE RHQ_BUNDLE_RES_DEPLOY ( ID INTEGER PRIMARY KEY )
                   </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_BUNDLE_RES_DEPLOY" column="ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_RES_DEPLOY" column="BUNDLE_DEPLOYMENT_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_BUNDLE_RES_DEPLOY" column="BUNDLE_DEPLOYMENT_ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_RES_DEPLOY" column="RESOURCE_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_BUNDLE_RES_DEPLOY" column="RESOURCE_ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_RES_DEPLOY" column="STATUS" columnType="VARCHAR2" precision="16" />
                <schema-alterColumn table="RHQ_BUNDLE_RES_DEPLOY" column="STATUS" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_RES_DEPLOY" column="CTIME" columnType="LONG" />
                <schema-alterColumn table="RHQ_BUNDLE_RES_DEPLOY" column="CTIME" nullable="FALSE" />

                <schema-directSQL>
                    <statement desc="Creating RHQ_BUNDLE_RES_DEPLOY foreign key relation to BUNDLE_DEPLOYMENT">
                        ALTER TABLE RHQ_BUNDLE_RES_DEPLOY
                        ADD CONSTRAINT RHQ_BRD_B_DEPLOYMENT_ID_FK
                        FOREIGN KEY (BUNDLE_DEPLOYMENT_ID)
                        REFERENCES RHQ_BUNDLE_DEPLOYMENT (ID)
                    </statement>
                    <statement desc="Creating RHQ_BUNDLE_RES_DEPLOY foreign key relation to RESOURCE">
                        ALTER TABLE RHQ_BUNDLE_RES_DEPLOY
                        ADD CONSTRAINT RHQ_BRD_RESOURCE_ID_FK
                        FOREIGN KEY (RESOURCE_ID)
                        REFERENCES RHQ_RESOURCE (ID)
                    </statement>
                </schema-directSQL>
                <schema-directSQL ignoreError="true">
                    <statement desc="Creating RHQ_BUNDLE_RES_DEPLOY unique constraint on dep-resource mapping">
                        CREATE UNIQUE INDEX RHQ_BUNDLE_RES_DEPLOY_IDX
                        ON RHQ_BUNDLE_RES_DEPLOY (BUNDLE_DEPLOYMENT_ID, RESOURCE_ID)
                    </statement>
                </schema-directSQL>

                <!-- RHQ_BUNDLE_RES_DEP_HIST -->
                <schema-createSequence name="RHQ_BUNDLE_RES_DEP_HIST_ID_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement desc="Creating table RHQ_BUNDLE_RES_DEP_HIST">
                        CREATE TABLE RHQ_BUNDLE_RES_DEP_HIST ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_BUNDLE_RES_DEP_HIST" column="ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_RES_DEP_HIST" column="BUNDLE_RES_DEPLOY_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_BUNDLE_RES_DEP_HIST" column="BUNDLE_RES_DEPLOY_ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_RES_DEP_HIST" column="SUBJECT_NAME" columnType="VARCHAR2" precision="255" />
                <schema-addColumn   table="RHQ_BUNDLE_RES_DEP_HIST" column="AUDIT_TIME" columnType="LONG" />
                <schema-alterColumn table="RHQ_BUNDLE_RES_DEP_HIST" column="AUDIT_TIME" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_RES_DEP_HIST" column="ACTION" columnType="VARCHAR2" precision="128" />
                <schema-alterColumn table="RHQ_BUNDLE_RES_DEP_HIST" column="ACTION" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_RES_DEP_HIST" column="INFO" columnType="VARCHAR2" precision="512" />
                <schema-alterColumn table="RHQ_BUNDLE_RES_DEP_HIST" column="INFO" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_RES_DEP_HIST" column="CATEGORY" columnType="VARCHAR2" precision="32" />
                <schema-addColumn   table="RHQ_BUNDLE_RES_DEP_HIST" column="STATUS" columnType="VARCHAR2" precision="16" />
                <schema-alterColumn table="RHQ_BUNDLE_RES_DEP_HIST" column="STATUS" nullable="FALSE" />
                <schema-addColumn   table="RHQ_BUNDLE_RES_DEP_HIST" column="MESSAGE" columnType="LONGVARCHAR" />
                <schema-addColumn   table="RHQ_BUNDLE_RES_DEP_HIST" column="ATTACHMENT" columnType="LONGVARCHAR" />
                <schema-directSQL>
                    <statement desc="Creating RHQ_BUNDLE_RES_DEP_HIST foreign key relation to BUNDLE_DEPLOY">
                        ALTER TABLE RHQ_BUNDLE_RES_DEP_HIST
                        ADD CONSTRAINT RHQ_BRDH_B_RES_DEPLOY_ID_FK
                        FOREIGN KEY (BUNDLE_RES_DEPLOY_ID)
                        REFERENCES RHQ_BUNDLE_RES_DEPLOY (ID)
                    </statement>
                </schema-directSQL>
           </schemaSpec>

            <schemaSpec version="2.79">
                <schema-directSQL>
                    <statement desc="Normalizing resource group descriptions">
                        UPDATE RHQ_RESOURCE_GROUP SET DESCRIPTION = NULL WHERE DESCRIPTION = ''
                     </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.81">
                <!-- fix for postgres not properly streaming blobs to JDBC clients -->
                <schema-directSQL targetDBVendor="postgresql">
                    <statement desc="Change bytea column to oid in postgres.">
                        ALTER TABLE RHQ_PACKAGE_BITS ADD COLUMN NEWOID OID
                    </statement>
                    <statement desc="Change bytea column to oid in postgres.">
                        UPDATE RHQ_PACKAGE_BITS t SET NEWOID = (
                        SELECT oid FROM (
                          SELECT oid, lowrite(lo_open(oid, 131072), t.bits)
                          FROM lo_create(0) o(oid)) x)
                    </statement>
                    <statement desc="Change bytea column to oid in postgres.">
                        ALTER TABLE RHQ_PACKAGE_BITS DROP COLUMN BITS
                    </statement>
                    <statement desc="Change bytea column to oid in postgres.">
                        ALTER TABLE RHQ_PACKAGE_BITS RENAME COLUMN NEWOID TO BITS
                     </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.82">
                <schema-directSQL>
                    <statement desc="Creating table RHQ_SAVED_SEARCH">
                        CREATE TABLE RHQ_SAVED_SEARCH ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_SAVED_SEARCH" column="ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_SAVED_SEARCH" column="CONTEXT" columnType="VARCHAR2" precision="25" />
                <schema-alterColumn table="RHQ_SAVED_SEARCH" column="CONTEXT" nullable="FALSE" />
                <schema-addColumn   table="RHQ_SAVED_SEARCH" column="NAME" columnType="VARCHAR2" precision="200" />
                <schema-addColumn   table="RHQ_SAVED_SEARCH" column="DESCRIPTION" columnType="VARCHAR2" precision="500" />
                <schema-addColumn   table="RHQ_SAVED_SEARCH" column="PATTERN" columnType="VARCHAR2" precision="1000" />
                <schema-alterColumn table="RHQ_SAVED_SEARCH" column="PATTERN" nullable="FALSE" />
                <schema-addColumn   table="RHQ_SAVED_SEARCH" column="JPQL_TRANSLATION" columnType="VARCHAR2" precision="4000" />
                <schema-addColumn   table="RHQ_SAVED_SEARCH" column="LAST_COMPUTE_TIME" columnType="LONG" />
                <schema-alterColumn table="RHQ_SAVED_SEARCH" column="LAST_COMPUTE_TIME" nullable="FALSE" />
                <schema-addColumn   table="RHQ_SAVED_SEARCH" column="RESULT_COUNT" columnType="LONG" />
                <schema-addColumn   table="RHQ_SAVED_SEARCH" column="SUBJECT_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_SAVED_SEARCH" column="SUBJECT_ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_SAVED_SEARCH" column="GLOBAL" columnType="BOOLEAN" />
                <schema-alterColumn table="RHQ_SAVED_SEARCH" column="GLOBAL" nullable="FALSE" />

                <schema-createSequence name="RHQ_SAVED_SEARCH_ID_SEQ" initial="10001" />

                <schema-directSQL>
                    <statement targetDBVendor="postgresql" desc="Inserting global default saved search 'Downed Platforms'">
                        INSERT INTO rhq_saved_search (id, context, name, description, pattern, last_compute_time, subject_id, global)
                        VALUES (1, 'RESOURCE', 'Downed Platforms', 'All downed machines across the entire enterprise', 'down platform', 0, 1, true)
                    </statement>
                    <statement targetDBVendor="oracle" desc="Inserting global default saved search 'Downed Platforms'">
                        INSERT INTO rhq_saved_search (id, context, name, description, pattern, last_compute_time, subject_id, global)
                        VALUES (1, 'RESOURCE', 'Downed Platforms', 'All downed machines across the entire enterprise', 'down platform', 0, 1, 1)
                    </statement>
                </schema-directSQL>
                <schema-directSQL>
                    <statement targetDBVendor="postgresql" desc="Inserting global default saved search 'Downed Servers'">
                        INSERT INTO rhq_saved_search (id, context, name, description, pattern, last_compute_time, subject_id, global)
                        VALUES (2, 'RESOURCE', 'Downed Servers', 'All downed servers across the entire enterprise', 'down server', 0, 1, true)
                    </statement>
                    <statement targetDBVendor="oracle" desc="Inserting global default saved search 'Downed Servers'">
                        INSERT INTO rhq_saved_search (id, context, name, description, pattern, last_compute_time, subject_id, global)
                        VALUES (2, 'RESOURCE', 'Downed Servers', 'All downed servers across the entire enterprise', 'down server', 0, 1, 1)
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.83">
                <schema-directSQL>
                    <statement desc="Creating table RHQ_SUBJECT_ROLE_LDAP_MAP">
                        CREATE TABLE RHQ_SUBJECT_ROLE_LDAP_MAP ( SUBJECT_ID INTEGER, ROLE_ID INTEGER )
                    </statement>
                    <statement desc="Creating composite PK for RHQ_SUBJECT_ROLE_LDAP_MAP">
                        ALTER TABLE RHQ_SUBJECT_ROLE_LDAP_MAP
                        ADD CONSTRAINT RHQ_SUBJECT_ROLE_LDAP_MAP_PK
                        PRIMARY KEY ( SUBJECT_ID, ROLE_ID )
                    </statement>
                    <statement desc="Creating FK relation to RHQ_SUBJECT table for SUBJECT_ID column">
                        ALTER TABLE RHQ_SUBJECT_ROLE_LDAP_MAP
                        ADD CONSTRAINT RHQ_SRLM_SUBJECT_ID_FK
                        FOREIGN KEY (SUBJECT_ID)
                        REFERENCES RHQ_SUBJECT (ID)
                    </statement>
                    <statement desc="Creating FK relation to RHQ_ROLE table for ROLE_ID column">
                        ALTER TABLE RHQ_SUBJECT_ROLE_LDAP_MAP
                        ADD CONSTRAINT RHQ_SRLM_ROLE_ID_FK
                        FOREIGN KEY (ROLE_ID)
                        REFERENCES RHQ_ROLE (ID)
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_SUBJECT_ROLE_LDAP_MAP" column="SUBJECT_ID" nullable="FALSE" />
                <schema-alterColumn table="RHQ_SUBJECT_ROLE_LDAP_MAP" column="ROLE_ID"  nullable="FALSE" />

                <!-- Fixing ldap group authz by adding remaining mapping elements left out(RHQ_ROLE_LDAP_GROUP)  -->
                <!-- RHQ_ROLE_LDAP_GROUP -->
                <schema-createSequence name="RHQ_ROLE_LDAP_GROUP_ID_SEQ" initial="10001" />
                <schema-directSQL>
                   <statement desc="Creating table RHQ_ROLE_LDAP_GROUP">
                    CREATE TABLE RHQ_ROLE_LDAP_GROUP ( ID INTEGER PRIMARY KEY, ROLE_ID INTEGER )
                   </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_ROLE_LDAP_GROUP" column="ID" nullable="FALSE" />
                <schema-alterColumn table="RHQ_ROLE_LDAP_GROUP" column="ROLE_ID" nullable="FALSE" />
                <schema-addColumn table="RHQ_ROLE_LDAP_GROUP" column="LDAP_GROUP_NAME" columnType="VARCHAR2" precision="128" />

                <schema-directSQL>
                    <statement>
                        ALTER TABLE RHQ_ROLE_LDAP_GROUP
                        ADD CONSTRAINT RHQ_RLM_ROLE_ID_FK
                        FOREIGN KEY ( ROLE_ID )
                        REFERENCES RHQ_ROLE (ID)
                    </statement>
                </schema-directSQL>
                <schema-directSQL ignoreError="true">
                    <statement>
                        CREATE UNIQUE INDEX RHQ_ROLE_LDAP_GROUP_IDX
                        ON RHQ_ROLE_LDAP_GROUP ( ROLE_ID, LDAP_GROUP_NAME )
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <!-- Remove the old tagging system -->
            <schemaSpec version="2.84">
                <schema-dropTable table="RHQ_REPO_TAG_MAP"/>
                <schema-dropTable table="RHQ_TAG"/>
            </schemaSpec>

            <!-- The new tagging system -->
            <schemaSpec version="2.85">
                <schema-createSequence name="RHQ_TAGGING_ID_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement desc="Creating table RHQ_TAGGING">
                        CREATE TABLE RHQ_TAGGING ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_TAGGING" column="ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_TAGGING" column="NAMESPACE" columnType="VARCHAR2" precision="20" />
                <schema-addColumn   table="RHQ_TAGGING" column="SEMANTIC" columnType="VARCHAR2" precision="50" />
                <schema-addColumn   table="RHQ_TAGGING" column="NAME" columnType="VARCHAR2" precision="100" />
                <schema-alterColumn table="RHQ_TAGGING" column="NAME" nullable="FALSE" />

                <schema-directSQL>
                    <statement>
                        CREATE TABLE RHQ_TAGGING_RESOURCE_MAP ( RESOURCE_ID INTEGER )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_TAGGING_RESOURCE_MAP" column="RESOURCE_ID" nullable="false" />
                <schema-addColumn   table="RHQ_TAGGING_RESOURCE_MAP" column="TAG_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_TAGGING_RESOURCE_MAP" column="TAG_ID" nullable="false" />
                <schema-directSQL>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_RESOURCE_MAP
                        ADD CONSTRAINT RHQ_TAGGING_RESOURCE_MAP_KEY
                        PRIMARY KEY ( RESOURCE_ID, TAG_ID )
                    </statement>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_RESOURCE_MAP
                        ADD CONSTRAINT RHQ_TRM_RESOURCE_ID_FK
                        FOREIGN KEY ( RESOURCE_ID )
                        REFERENCES RHQ_RESOURCE ( ID )
                    </statement>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_RESOURCE_MAP
                        ADD CONSTRAINT RHQ_TRM_TAG_ID_FK
                        FOREIGN KEY ( TAG_ID )
                        REFERENCES RHQ_TAGGING ( ID )
                    </statement>
                </schema-directSQL>

                <schema-directSQL>
                    <statement>
                        CREATE TABLE RHQ_TAGGING_RES_GROUP_MAP ( RESOURCE_GROUP_ID INTEGER )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_TAGGING_RES_GROUP_MAP" column="RESOURCE_GROUP_ID" nullable="false" />
                <schema-addColumn   table="RHQ_TAGGING_RES_GROUP_MAP" column="TAG_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_TAGGING_RES_GROUP_MAP" column="TAG_ID" nullable="false" />
                <schema-directSQL>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_RES_GROUP_MAP
                        ADD CONSTRAINT RHQ_TAGGING_RES_GROUP_MAP_KEY
                        PRIMARY KEY ( RESOURCE_GROUP_ID, TAG_ID )
                    </statement>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_RES_GROUP_MAP
                        ADD CONSTRAINT RHQ_TRGM_RESOURCE_GROUP_ID_FK
                        FOREIGN KEY ( RESOURCE_GROUP_ID )
                        REFERENCES RHQ_RESOURCE_GROUP ( ID )
                    </statement>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_RES_GROUP_MAP
                        ADD CONSTRAINT RHQ_TRGM_TAG_ID_FK
                        FOREIGN KEY ( TAG_ID )
                        REFERENCES RHQ_TAGGING ( ID )
                    </statement>
                </schema-directSQL>

                <schema-directSQL>
                    <statement>
                        CREATE TABLE RHQ_TAGGING_BUNDLE_MAP ( BUNDLE_ID INTEGER )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_TAGGING_BUNDLE_MAP" column="BUNDLE_ID" nullable="false" />
                <schema-addColumn   table="RHQ_TAGGING_BUNDLE_MAP" column="TAG_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_TAGGING_BUNDLE_MAP" column="TAG_ID" nullable="false" />
                <schema-directSQL>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_BUNDLE_MAP
                        ADD CONSTRAINT RHQ_TAGGING_BUNDLE_MAP_KEY
                        PRIMARY KEY ( BUNDLE_ID, TAG_ID )
                    </statement>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_BUNDLE_MAP
                        ADD CONSTRAINT RHQ_TBM_BUNDLE_ID_FK
                        FOREIGN KEY ( BUNDLE_ID )
                        REFERENCES RHQ_BUNDLE ( ID )
                    </statement>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_BUNDLE_MAP
                        ADD CONSTRAINT RHQ_TBM_TAG_ID_FK
                        FOREIGN KEY ( TAG_ID )
                        REFERENCES RHQ_TAGGING ( ID )
                    </statement>
                </schema-directSQL>

                <schema-directSQL>
                    <statement>
                        CREATE TABLE RHQ_TAGGING_BUNDLE_VERSION_MAP ( BUNDLE_VERSION_ID INTEGER )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_TAGGING_BUNDLE_VERSION_MAP" column="BUNDLE_VERSION_ID" nullable="false" />
                <schema-addColumn   table="RHQ_TAGGING_BUNDLE_VERSION_MAP" column="TAG_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_TAGGING_BUNDLE_VERSION_MAP" column="TAG_ID" nullable="false" />
                <schema-directSQL>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_BUNDLE_VERSION_MAP
                        ADD CONSTRAINT RHQ_TAGGING_BUNDLE_VER_MAP_KEY
                        PRIMARY KEY ( BUNDLE_VERSION_ID, TAG_ID )
                    </statement>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_BUNDLE_VERSION_MAP
                        ADD CONSTRAINT RHQ_TBVM_BUNDLE_VERSION_ID_FK
                        FOREIGN KEY ( BUNDLE_VERSION_ID )
                        REFERENCES RHQ_BUNDLE_VERSION ( ID )
                    </statement>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_BUNDLE_VERSION_MAP
                        ADD CONSTRAINT RHQ_TBVM_TAG_ID_FK
                        FOREIGN KEY ( TAG_ID )
                        REFERENCES RHQ_TAGGING ( ID )
                    </statement>
                </schema-directSQL>

                <schema-directSQL>
                    <statement>
                        CREATE TABLE RHQ_TAGGING_BUNDLE_DEPLOY_MAP ( BUNDLE_DEPLOYMENT_ID INTEGER )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_TAGGING_BUNDLE_DEPLOY_MAP" column="BUNDLE_DEPLOYMENT_ID" nullable="false" />
                <schema-addColumn   table="RHQ_TAGGING_BUNDLE_DEPLOY_MAP" column="TAG_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_TAGGING_BUNDLE_DEPLOY_MAP" column="TAG_ID" nullable="false" />
                <schema-directSQL>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_BUNDLE_DEPLOY_MAP
                        ADD CONSTRAINT RHQ_TAGGING_BUNDLE_DEP_MAP_KEY
                        PRIMARY KEY ( BUNDLE_DEPLOYMENT_ID, TAG_ID )
                    </statement>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_BUNDLE_DEPLOY_MAP
                        ADD CONSTRAINT RHQ_TBDM_B_DEPLOYMENT_ID_FK
                        FOREIGN KEY ( BUNDLE_DEPLOYMENT_ID )
                        REFERENCES RHQ_BUNDLE_DEPLOYMENT ( ID )
                    </statement>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_BUNDLE_DEPLOY_MAP
                        ADD CONSTRAINT RHQ_TBDM_TAG_ID_FK
                        FOREIGN KEY ( TAG_ID )
                        REFERENCES RHQ_TAGGING ( ID )
                    </statement>
                </schema-directSQL>

                <schema-directSQL>
                    <statement>
                        CREATE TABLE RHQ_TAGGING_BUNDLE_DEST_MAP ( BUNDLE_DESTINATION_ID INTEGER )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_TAGGING_BUNDLE_DEST_MAP" column="BUNDLE_DESTINATION_ID" nullable="false" />
                <schema-addColumn   table="RHQ_TAGGING_BUNDLE_DEST_MAP" column="TAG_ID" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_TAGGING_BUNDLE_DEST_MAP" column="TAG_ID" nullable="false" />
                <schema-directSQL>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_BUNDLE_DEST_MAP
                        ADD CONSTRAINT RHQ_TAGGING_BUNDLE_DES_MAP_KEY
                        PRIMARY KEY ( BUNDLE_DESTINATION_ID, TAG_ID )
                    </statement>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_BUNDLE_DEST_MAP
                        ADD CONSTRAINT RHQ_TBDM_B_DESTINATION_ID_FK
                        FOREIGN KEY ( BUNDLE_DESTINATION_ID )
                        REFERENCES RHQ_BUNDLE_DESTINATION ( ID )
                    </statement>
                    <statement>
                        ALTER TABLE RHQ_TAGGING_BUNDLE_DEST_MAP
                        ADD CONSTRAINT RHQ_TBDESTM_TAG_ID_FK
                        FOREIGN KEY ( TAG_ID )
                        REFERENCES RHQ_TAGGING ( ID )
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.86">
                <schema-directSQL>
                    <statement desc="Adding MANAGE_BUNDLE permission to overlord">
                        INSERT INTO RHQ_PERMISSION VALUES(1, 12)
                    </statement>
                    <statement desc="Adding MANAGE_BUNDLE permission to superuser">
                        INSERT INTO RHQ_PERMISSION VALUES(2, 12)
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.87">
                <schema-directSQL ignoreError="true">
                    <statement desc="Drop non-unique RHQ_RES_TYPE_IDX_PLG_NAME index">
                        DROP INDEX RHQ_RES_TYPE_IDX_PLG_NAME
                    </statement>
                </schema-directSQL>
                <schema-directSQL ignoreError="true">
                    <statement desc="Recreate RHQ_RES_TYPE_IDX_PLG_NAME index as unique">
                        CREATE UNIQUE INDEX RHQ_RES_TYPE_IDX_PLG_NAME ON RHQ_RESOURCE_TYPE (name, plugin)
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.88">
                <schema-directSQL ignoreError="true">
                    <statement desc="Add end time index on call time data to speed up purges">
                        CREATE INDEX RHQ_CT_DA_VA_END_TIM_IDX ON RHQ_CALLTIME_DATA_VALUE (end_time)
                    </statement>
                </schema-directSQL>
                <schema-directSQL ignoreError="true">
                    <statement desc="Add index on measurement definition numeric type">
                        CREATE INDEX RHQ_METRIC_DEF_NT_IDX ON RHQ_MEASUREMENT_DEF (numeric_type)
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <!-- rhq 3.0.0.final release at this point. -->

            <!-- 2.89 corrects problems in 3.0.0.final *new* installs. The problems it
                 fixes are not present in an upgraded db. As such, ignore any errors.
            -->
            <schemaSpec version="2.89">
                <schema-deleteColumn ignoreError="true" table="RHQ_ALERT" column="TRIGGERED_OPERATION" />
                <schema-deleteColumn ignoreError="true" table="RHQ_ALERT_DEFINITION" column="operation_def_id" />

                <schema-alterColumn  ignoreError="true" table="RHQ_ADVISORY_CVE" column="LAST_MODIFIED" nullable="false" />

                <schema-alterColumn  ignoreError="true" table="RHQ_TAGGING_BUNDLE_MAP" column="BUNDLE_ID" nullable="false" />
                <schema-alterColumn  ignoreError="true" table="RHQ_TAGGING_BUNDLE_MAP" column="TAG_ID" nullable="false" />
                <schema-alterColumn  ignoreError="true" table="RHQ_TAGGING_BUNDLE_VERSION_MAP" column="BUNDLE_VERSION_ID" nullable="false" />
                <schema-alterColumn  ignoreError="true" table="RHQ_TAGGING_BUNDLE_VERSION_MAP" column="TAG_ID" nullable="false" />
                <schema-alterColumn  ignoreError="true" table="RHQ_TAGGING_BUNDLE_DEPLOY_MAP" column="BUNDLE_DEPLOYMENT_ID" nullable="false" />
                <schema-alterColumn  ignoreError="true" table="RHQ_TAGGING_BUNDLE_DEPLOY_MAP" column="TAG_ID" nullable="false" />
                <schema-alterColumn  ignoreError="true" table="RHQ_TAGGING_BUNDLE_DEST_MAP" column="BUNDLE_DESTINATION_ID" nullable="false" />
                <schema-alterColumn  ignoreError="true" table="RHQ_TAGGING_BUNDLE_DEST_MAP" column="TAG_ID" nullable="false" />
                <schema-alterColumn  ignoreError="true" table="RHQ_TAGGING_RESOURCE_MAP" column="RESOURCE_ID" nullable="false" />
                <schema-alterColumn  ignoreError="true" table="RHQ_TAGGING_RESOURCE_MAP" column="TAG_ID" nullable="false" />
                <schema-alterColumn  ignoreError="true" table="RHQ_TAGGING_RES_GROUP_MAP" column="RESOURCE_GROUP_ID" nullable="false" />
                <schema-alterColumn  ignoreError="true" table="RHQ_TAGGING_RES_GROUP_MAP" column="TAG_ID" nullable="false" />
            </schemaSpec>

            <!-- 2.90 corrects problems in 3.0.0.final upgrade installs.  The problems it
                 fixes are not present in a new db. As such, ignore any errors.
            -->
            <schemaSpec version="2.90">
                <schema-dropSequence   ignoreError="true" name="rhq_tag_id_seq" />
                <schema-dropSequence   ignoreError="true" name="rhq_advisory_buglist_seq" />

                <schema-createSequence ignoreError="true" name="RHQ_ADVISORY_BUGLIST_ID_SEQ" initial="10001" />

                <schema-alterColumn    ignoreError="true" table="RHQ_ALERT_NOTIF_LOG" column="SENDER" nullable="TRUE" />

                <schema-alterColumn    ignoreError="true" table="RHQ_BUNDLE_TYPE" column="RESOURCE_TYPE_ID" nullable="FALSE" />

                <schema-alterColumn    ignoreError="true" table="RHQ_ROLE_LDAP_GROUP" column="LDAP_GROUP_NAME" nullable="FALSE" />

                <schema-deleteColumn   ignoreError="true" table="RHQ_SAVED_SEARCH" column="JPQL_TRANSLATION" />
                <schema-alterColumn    ignoreError="true" table="RHQ_SAVED_SEARCH" column="NAME" nullable="FALSE" />

                <schema-directSQL      ignoreError="true">
                    <statement desc="Creating RHQ_SAVED_SEARCH foreign key relation to RHQ_SUBJECT">
                        ALTER TABLE RHQ_SAVED_SEARCH
                        ADD CONSTRAINT RHQ_SAVED_SEARCH_SUBJECT_ID_FK
                        FOREIGN KEY (SUBJECT_ID)
                        REFERENCES RHQ_SUBJECT (ID)
                    </statement>
                </schema-directSQL>

            </schemaSpec>

            <schemaSpec version="2.91">
                <!-- if some role previously had CONFIGURE perm (now called CONFIGURE_WRITE), give it the implied perm
                     CONFIGURE_READ so users don't experience an unexpected permission restriction after upgrade -->
                <schema-directSQL>
                    <statement desc="Upgrading configuration permissions">
                        INSERT INTO RHQ_PERMISSION (ROLE_ID, OPERATION)
                        SELECT PERM.ROLE_ID, 13
                        FROM RHQ_PERMISSION PERM
                        WHERE PERM.OPERATION = 11
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <!-- BZ 622491 - 2.92.x - modifiedBy should only be username, not a subject ID and should be size 100 -->
            <schemaSpec version="2.92.1">
                <!-- first do the RHQ_RESOURCE_GROUP table -->
                <schema-addColumn table="RHQ_RESOURCE_GROUP" column="MODIFIED_BY_VARCHAR" columnType="VARCHAR2" precision="100"/>
                <schema-directSQL>
                    <statement desc="RESOURCE_GROUP: Populate the tmp modifiedBy column with existing user names or null if user does not exist">
                        UPDATE RHQ_RESOURCE_GROUP g SET MODIFIED_BY_VARCHAR = (SELECT NAME FROM RHQ_SUBJECT WHERE ID = g.MODIFIED_BY)
                    </statement>
                    <statement desc="RESOURCE_GROUP: Make unknown usernames as rhqadmin in tmp modifiedBy column">
                        UPDATE RHQ_RESOURCE_GROUP SET MODIFIED_BY_VARCHAR = 'rhqadmin' WHERE MODIFIED_BY_VARCHAR IS NULL
                    </statement>
                </schema-directSQL>
                <schema-deleteColumn table="RHQ_RESOURCE_GROUP" column="MODIFIED_BY" />
                <schema-directSQL>
                    <statement desc="RESOURCE_GROUP: Renaming new varchar MODIFIED_BY column">
                        ALTER TABLE RHQ_RESOURCE_GROUP
                        RENAME COLUMN MODIFIED_BY_VARCHAR TO MODIFIED_BY
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.92.2">
                <!-- second do the RHQ_RESOURCE table -->
                <schema-addColumn table="RHQ_RESOURCE" column="MODIFIED_BY_VARCHAR" columnType="VARCHAR2" precision="100"/>
                <schema-directSQL>
                    <statement desc="RESOURCE: Populate the tmp modifiedBy column with existing user names or null if user does not exist">
                        UPDATE RHQ_RESOURCE r SET MODIFIED_BY_VARCHAR = (SELECT NAME FROM RHQ_SUBJECT WHERE ID = r.MODIFIED_BY)
                    </statement>
                    <statement desc="RESOURCE: Make unknown usernames as rhqadmin in tmp modifiedBy column">
                        UPDATE RHQ_RESOURCE SET MODIFIED_BY_VARCHAR = 'rhqadmin' WHERE MODIFIED_BY_VARCHAR IS NULL
                    </statement>
                </schema-directSQL>
                <schema-deleteColumn table="RHQ_RESOURCE" column="MODIFIED_BY" />
                <schema-directSQL>
                    <statement desc="RESOURCE: Renaming new varchar MODIFIED_BY column">
                        ALTER TABLE RHQ_RESOURCE
                        RENAME COLUMN MODIFIED_BY_VARCHAR TO MODIFIED_BY
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.92.3">
                <!-- third, maintain consistency across data model - everywhere else, SUBJECT_NAME is of size 100, make this one 100 too -->
                <schema-alterColumn table="RHQ_PARTITION_EVENT" column="SUBJECT_NAME" columnType="VARCHAR2" precision="100" />
            </schemaSpec>

            <schemaSpec version="2.92.4">
                <schema-directSQL ignoreError="true">
                    <statement desc="Add index on measurement data 1d table timestamp">
                        CREATE INDEX RHQ_MEAS_DATA_1D_TIME_IDX ON RHQ_MEASUREMENT_DATA_NUM_1D (time_stamp)
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.93">
                <!-- the customizable dashboard storage system -->

                <schema-createSequence name="RHQ_DASHBOARD_ID_SEQ" initial="10001"/>
                <schema-directSQL>
                    <statement desc="Creating table RHQ_DASHBOARD">
                        CREATE TABLE RHQ_DASHBOARD ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_DASHBOARD" column="ID" nullable="FALSE"/>
                <schema-addColumn   table="RHQ_DASHBOARD" column="NAME" columnType="VARCHAR2" precision="200"/>
                <schema-alterColumn table="RHQ_DASHBOARD" column="NAME" nullable="FALSE"/>
                <schema-addColumn   table="RHQ_DASHBOARD" column="SUBJECT_ID" columnType="INTEGER"/>
                <schema-addColumn   table="RHQ_DASHBOARD" column="SHARED" columnType="BOOLEAN"/>
                <schema-alterColumn table="RHQ_DASHBOARD" column="SHARED" nullable="FALSE"/>
                <schema-addColumn   table="RHQ_DASHBOARD" column="CONFIGURATION_ID" columnType="INTEGER"/>
                <schema-directSQL>
                    <statement>
                        ALTER TABLE RHQ_DASHBOARD
                        ADD CONSTRAINT RHQ_DASHBOARD_CONFIG_ID_FK
                        FOREIGN KEY ( CONFIGURATION_ID )
                        REFERENCES RHQ_CONFIG ( ID )
                    </statement>
                </schema-directSQL>

                <schema-createSequence name="RHQ_DASHBOARD_PORTLET_ID_SEQ" initial="10001"/>
                <schema-directSQL>
                    <statement desc="Creating table RHQ_DASHBOARD_PORTLET">
                        CREATE TABLE RHQ_DASHBOARD_PORTLET ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_DASHBOARD_PORTLET" column="ID" nullable="FALSE"/>

                <schema-addColumn   table="RHQ_DASHBOARD_PORTLET" column="NAME" columnType="VARCHAR2" precision="200"/>
                <schema-alterColumn table="RHQ_DASHBOARD_PORTLET" column="NAME" nullable="FALSE"/>
                <schema-addColumn   table="RHQ_DASHBOARD_PORTLET" column="PORTLET_KEY" columnType="VARCHAR2"
                                                                  precision="200"/>
                <schema-alterColumn table="RHQ_DASHBOARD_PORTLET" column="PORTLET_KEY" nullable="FALSE"/>
                <schema-addColumn   table="RHQ_DASHBOARD_PORTLET" column="COL" columnType="INTEGER"/>
                <schema-addColumn   table="RHQ_DASHBOARD_PORTLET" column="COL_INDEX" columnType="INTEGER"/>
                <schema-addColumn   table="RHQ_DASHBOARD_PORTLET" column="HEIGHT" columnType="INTEGER"/>
                <schema-addColumn   table="RHQ_DASHBOARD_PORTLET" column="CONFIGURATION_ID" columnType="INTEGER"/>
                <schema-addColumn   table="RHQ_DASHBOARD_PORTLET" column="DASHBOARD_ID" columnType="INTEGER"/>
                <schema-alterColumn table="RHQ_DASHBOARD_PORTLET" column="DASHBOARD_ID" nullable="FALSE"/>
                <schema-directSQL>
                    <statement>
                        ALTER TABLE RHQ_DASHBOARD_PORTLET
                        ADD CONSTRAINT RHQ_DP_CONFIGURATION_ID_FK
                        FOREIGN KEY ( CONFIGURATION_ID )
                        REFERENCES RHQ_CONFIG ( ID )
                    </statement>
                </schema-directSQL>
                <schema-directSQL>
                    <statement>
                        ALTER TABLE RHQ_DASHBOARD_PORTLET
                        ADD CONSTRAINT RHQ_DP_DASHBOARD_ID_FK
                        FOREIGN KEY ( DASHBOARD_ID )
                        REFERENCES RHQ_DASHBOARD ( ID )
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.94">
                <!-- give the 'SUPER USER' and 'ALL RESOURCES' roles permission to delete/purge events (this permission
                     previously did not exist, and event deletion/purging could be performed by any user with authz to
                     view the resource/group in question).

                     a user with MANAGE_SECURITY must explicitly grant this permission to other roles after upgrade-->
                <schema-directSQL>
                    <statement desc="Inserting MANAGE_EVENTS permission for 'Super User' role">
                        INSERT INTO RHQ_PERMISSION (ROLE_ID, OPERATION)
                        VALUES (1, 14)
                    </statement>
                    <statement desc="Inserting MANAGE_EVENTS permission for 'All Resources' role">
                        INSERT INTO RHQ_PERMISSION (ROLE_ID, OPERATION)
                        VALUES (2, 14)
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.95">
                <!-- Increase the max length of a Resource's version from 50 to 100. -->
                <schema-alterColumn table="RHQ_RESOURCE" column="VERSION" columnType="VARCHAR2" precision="100" />
            </schemaSpec>

            <schemaSpec version="2.96">
                <!-- Support autogroup backing groups -->
                <schema-addColumn table="RHQ_RESOURCE_GROUP" column="AUTO_GROUP_PARENT_RESOURCE_ID" columnType="INTEGER" />
                <schema-directSQL>
                    <statement desc="Creating RHQ_RESOURCE_GROUP foreign key relation to RHQ_RESOURCE for autogroup backing groups">
                        ALTER TABLE RHQ_RESOURCE_GROUP
                        ADD CONSTRAINT RHQ_RG_AG_PARENT_ID_FK
                        FOREIGN KEY (AUTO_GROUP_PARENT_RESOURCE_ID)
                        REFERENCES RHQ_RESOURCE (ID)
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.97">
                <!-- Support subject-owned groups (e.g. autogroups) -->
                <schema-addColumn table="RHQ_RESOURCE_GROUP" column="SUBJECT_ID" columnType="INTEGER" />
                <schema-directSQL>
                    <statement desc="Creating RHQ_RESOURCE_GROUP foreign key relation to RHQ_SUBJECT for owned groups">
                        ALTER TABLE RHQ_RESOURCE_GROUP
                        ADD CONSTRAINT RHQ_RG_SUBJECT_ID_FK
                        FOREIGN KEY (SUBJECT_ID)
                        REFERENCES RHQ_SUBJECT (ID)
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.98">
                <!-- Remove is_default field from simple prop def enums -->
                <schema-deleteColumn ignoreError="true" table="RHQ_CONF_PROP_DEF_ENUM" column="IS_DEFAULT" />
            </schemaSpec>

            <schemaSpec version="2.99">
                <schema-alterColumn table="RHQ_ALERT_CONDITION_LOG" column="VALUE" nullable="FALSE" />
            </schemaSpec>

            <schemaSpec version="2.100">
                <!-- location was only exposed in the struts-based UI, so it hasn't been seen in years anyway -->
                <schema-deleteColumn table="RHQ_RESOURCE_GROUP" column="LOCATION" />
            </schemaSpec>

            <schemaSpec version="2.101">
                <schema-addColumn table="RHQ_RESOURCE_TYPE" column="DELETED" columnType="BOOLEAN"/>
                <schema-directSQL>
                    <statement targetDBVendor="postgresql" desc="Set deleted flag for existing resources types to false">
                        UPDATE RHQ_RESOURCE_TYPE
                        SET DELETED = false
                    </statement>
                    <statement targetDBVendor="oracle" desc="Set deleted flag for existing resources types to false">
                        UPDATE RHQ_RESOURCE_TYPE
                        SET DELETED = 0
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_RESOURCE_TYPE" column="DELETED" nullable="FALSE" />
            </schemaSpec>

            <schemaSpec version="2.102">
                <!-- Create the ID column nullable. -->
                <schema-addColumn table="RHQ_OPERATION_SCHEDULE" column="ID" columnType="INTEGER" />
                <!-- Set values for ID column on all existing rows. -->
                <schema-javaTask className="OperationScheduleIdSetterUpgradeTask" />
                <!-- Now that all existing rows have IDs, switch the column to non-nullable. -->
                <schema-alterColumn table="RHQ_OPERATION_SCHEDULE" column="ID" nullable="FALSE"  />
                <!-- Finally, make ID the primary key, rather than (JOB_NAME, JOB_GROUP), and make
                     (JOB_NAME, JOB_GROUP) a unique index instead. -->
                <schema-directSQL>
                    <statement desc="Changing primary key of RHQ_OPERATION_SCHEDULE to ID. Step1/3...">
                        ALTER TABLE RHQ_OPERATION_SCHEDULE DROP CONSTRAINT RHQ_OPERATION_SCHEDULE_KEY
                    </statement>
                    <statement desc="Changing primary key of RHQ_OPERATION_SCHEDULE to ID. Step2/3...">
                        ALTER TABLE RHQ_OPERATION_SCHEDULE ADD PRIMARY KEY (ID)
                    </statement>
                </schema-directSQL>
                <schema-directSQL ignoreError="true">
                    <statement desc="Changing primary key of RHQ_OPERATION_SCHEDULE to ID. Step3/3...">
                        CREATE UNIQUE INDEX RHQ_OPERATION_SCHEDULE_KEY_IDX ON RHQ_OPERATION_SCHEDULE (JOB_NAME, JOB_GROUP)
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.103">
                <!-- add FK for owning Subject -->
                <schema-directSQL>
                    <statement desc="Creating RHQ_DASHBOARD foreign key relation to RHQ_SUBJECT for resource dashboards">
                        ALTER TABLE RHQ_DASHBOARD
                        ADD CONSTRAINT RHQ_DB_SUBJECT_ID_FK
                        FOREIGN KEY (SUBJECT_ID)
                        REFERENCES RHQ_SUBJECT (ID)
                    </statement>
                </schema-directSQL>

                <!-- Support resource specific dashboards -->
                <schema-addColumn table="RHQ_DASHBOARD" column="RESOURCE_ID" columnType="INTEGER" />
                <schema-directSQL>
                    <statement desc="Creating RHQ_DASHBOARD foreign key relation to RHQ_RESOURCE for resource dashboards">
                        ALTER TABLE RHQ_DASHBOARD
                        ADD CONSTRAINT RHQ_DB_RESOURCE_ID_FK
                        FOREIGN KEY (RESOURCE_ID)
                        REFERENCES RHQ_RESOURCE (ID)
                    </statement>
                </schema-directSQL>

                <!-- Support group specific dashboards -->
                <schema-addColumn table="RHQ_DASHBOARD" column="GROUP_ID" columnType="INTEGER" />
                <schema-directSQL>
                    <statement desc="Creating RHQ_DASHBOARD foreign key relation to RHQ_RESOURCE_GROUP for group dashboards">
                        ALTER TABLE RHQ_DASHBOARD
                        ADD CONSTRAINT RHQ_DB_RG_ID_FK
                        FOREIGN KEY (GROUP_ID)
                        REFERENCES RHQ_RESOURCE_GROUP (ID)
                    </statement>
                </schema-directSQL>

                <!-- Add category for distinguishing what kind of dashboard this is -->
                <schema-addColumn table="RHQ_DASHBOARD" column="CATEGORY" columnType="VARCHAR2" precision="20"/>
                <schema-directSQL>
                    <statement desc="Set dashboard category for existing dashboards to INVENTORY">
                        UPDATE RHQ_DASHBOARD
                        SET CATEGORY = 'INVENTORY'
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_DASHBOARD" column="CATEGORY" nullable="FALSE" />
            </schemaSpec>

            <schemaSpec version="2.104">
                <!-- package types no longer require to be coupled with a resource type. They can exist on their own. -->
                <schema-alterColumn table="RHQ_PACKAGE_TYPE" column="RESOURCE_TYPE_ID" nullable="true"/>
            </schemaSpec>

            <schemaSpec version="2.105">
                <schema-addColumn table="RHQ_REPO" column="OWNER_ID" columnType="INTEGER" />
                <schema-addColumn table="RHQ_REPO" column="IS_PRIVATE" columnType="BOOLEAN" />
                <schema-directSQL>
                    <statement targetDBVendor="postgresql" desc="Set is_private flag for existing repos to false">
                        UPDATE RHQ_REPO SET IS_PRIVATE = false
                    </statement>
                    <statement targetDBVendor="oracle" desc="Set is_private flag for existing repos to false">
                        UPDATE RHQ_REPO SET IS_PRIVATE = 0
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_REPO" column="IS_PRIVATE" nullable="FALSE"/>
                <schema-directSQL>
                    <statement desc="Creating OWNER_ID foreign key relation on RHQ_REPO">
                        ALTER TABLE RHQ_REPO
                        ADD CONSTRAINT RHQ_REPO_OWNER_ID_FK
                        FOREIGN KEY (OWNER_ID)
                        REFERENCES RHQ_SUBJECT (ID)
                    </statement>
                </schema-directSQL>

                <!-- Now modify the permissions to give all the roles with MANAGE_INVENTORY, except for
                all-resources-role, the new  MANAGE_REPOSITORIES privilege so that privs remain unchanged. -->
                <schema-directSQL>
                    <statement>
                        INSERT INTO RHQ_PERMISSION (role_id, operation)
                            SELECT role_id, 15 FROM RHQ_PERMISSION WHERE operation = 1 AND NOT role_id = 2
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.106">
                <!-- add pre-computed disambiguated name for Resource -->
                <schema-addColumn table="RHQ_RESOURCE" column="ANCESTRY" columnType="VARCHAR2" precision="4000" />
                <schema-javaTask className="ResourceAncestryUpgradeTask" />
            </schemaSpec>

            <schemaSpec version="2.107">
                <schema-createSequence name="RHQ_OPERATION_SCHEDULE_ID_SEQ" initial="10001"/>
            </schemaSpec>

            <!-- BZ 644328 -->
            <schemaSpec version="2.108">
                <schema-addColumn table="RHQ_RESOURCE_TYPE" column="BUNDLE_CONFIG_ID" columnType="INTEGER" />
                <schema-directSQL>
                    <statement desc="Creating RHQ_RESOURCE_TYPE foreign key relation to RHQ_CONFIG for bundle config">
                        ALTER TABLE RHQ_RESOURCE_TYPE
                        ADD CONSTRAINT RHQ_RT_BUNDLE_CONFIG_ID_FK
                        FOREIGN KEY (BUNDLE_CONFIG_ID)
                        REFERENCES RHQ_CONFIG (ID)
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <!-- BZ 644328 -->
            <schemaSpec version="2.109">
                <schema-addColumn table="RHQ_BUNDLE_DESTINATION" column="DEST_BASE_DIR_NAME" columnType="VARCHAR2" precision="200" />
                <schema-directSQL>
                    <statement desc="Pointing all bundle destinations to the platform type's Root File System dest base dir">
                        UPDATE RHQ_BUNDLE_DESTINATION SET DEST_BASE_DIR_NAME = 'Root File System'
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_BUNDLE_DESTINATION" column="DEST_BASE_DIR_NAME" nullable="FALSE"/>
            </schemaSpec>

            <schemaSpec version="2.110">
                <schema-directSQL>
                    <statement desc="Creating table RHQ_CONFIG_PD_OSRC">
                        CREATE TABLE RHQ_CONFIG_PD_OSRC ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>
                <schema-addColumn table="RHQ_CONFIG_PD_OSRC" column="LINK_TO_TARGET" columnType="BOOLEAN"/>

                <schema-addColumn table="RHQ_CONFIG_PD_OSRC" column="FILTER" columnType="VARCHAR2" precision="40"/>

                <schema-addColumn table="RHQ_CONFIG_PD_OSRC" column="EXPRESSION" columnType="VARCHAR2" precision="400"/>
                <schema-alterColumn table="RHQ_CONFIG_PD_OSRC" column="EXPRESSION" nullable="FALSE"/>

                <schema-addColumn table="RHQ_CONFIG_PD_OSRC" column="TARGET_TYPE" columnType="VARCHAR2" precision="20"/>
                <schema-alterColumn table="RHQ_CONFIG_PD_OSRC" column="TARGET_TYPE" nullable="FALSE"/>

                <schema-addColumn table="RHQ_CONFIG_PD_OSRC" column="PROPERTY_DEF_ID" columnType="INTEGER"/>
                <schema-directSQL>
                    <statement desc="Adding a foreign key constraint to RHQ_CONFIG_PD_OSRC">
                        ALTER TABLE RHQ_CONFIG_PD_OSRC
                        ADD CONSTRAINT RHQ_CONFIG_PD_OSRC_ID_FK
                        FOREIGN KEY (PROPERTY_DEF_ID)
                        REFERENCES RHQ_CONFIG_PROP_DEF (ID)
                    </statement>
                </schema-directSQL>
                <schema-createSequence name="rhq_config_pd_osrc_id_seq" initial="10001" />
            </schemaSpec>

            <schemaSpec version="2.111">
                 <!-- RHQ_DRIFT_FILE -->
                 <schema-directSQL>
                     <statement targetDBVendor="postgresql" desc="Creating table RHQ_DRIFT_FILE">
                         CREATE TABLE RHQ_DRIFT_FILE (HASH_ID character varying(64) PRIMARY KEY)
                     </statement>
                     <statement targetDBVendor="oracle" desc="Creating table RHQ_DRIFT_FILE">
                         CREATE TABLE RHQ_DRIFT_FILE (HASH_ID VARCHAR2(64) PRIMARY KEY)
                     </statement>
                 </schema-directSQL>
                 <schema-addColumn   table="RHQ_DRIFT_FILE" column="CTIME" columnType="LONG" />
                 <schema-alterColumn table="RHQ_DRIFT_FILE" column="CTIME" nullable="FALSE" />
                 <schema-addColumn   table="RHQ_DRIFT_FILE" column="DATA" columnType="LARGEOBJECT" />
                 <schema-addColumn   table="RHQ_DRIFT_FILE" column="DATA_SIZE" columnType="LONG" />
                 <schema-addColumn   table="RHQ_DRIFT_FILE" column="STATUS" columnType="VARCHAR2" precision="20" />
                 <schema-alterColumn table="RHQ_DRIFT_FILE" column="STATUS" nullable="FALSE" />

                 <!-- RHQ_DRIFT_CONFIG -->
                 <schema-createSequence name="RHQ_DRIFT_CONFIG_ID_SEQ" initial="10001" />
                 <schema-directSQL>
                     <statement desc="Creating table RHQ_DRIFT_CONFIG">
                         CREATE TABLE RHQ_DRIFT_CONFIG (ID INTEGER PRIMARY KEY)
                     </statement>
                 </schema-directSQL>
                 <schema-addColumn   table="RHQ_DRIFT_CONFIG" column="CTIME" columnType="LONG" />
                 <schema-alterColumn table="RHQ_DRIFT_CONFIG" column="CTIME" nullable="FALSE" />
                 <schema-addColumn   table="RHQ_DRIFT_CONFIG" column="NAME" columnType="VARCHAR2" precision="512" />
                 <schema-alterColumn table="RHQ_DRIFT_CONFIG" column="NAME" nullable="FALSE" />
                 <schema-addColumn   table="RHQ_DRIFT_CONFIG" column="INTERVAL" columnType="LONG" />
                 <schema-alterColumn table="RHQ_DRIFT_CONFIG" column="INTERVAL" nullable="FALSE" />
                 <schema-addColumn   table="RHQ_DRIFT_CONFIG" column="IS_ENABLED" columnType="BOOLEAN" />
                 <schema-alterColumn table="RHQ_DRIFT_CONFIG" column="IS_ENABLED" nullable="FALSE" />
                 <schema-addColumn   table="RHQ_DRIFT_CONFIG" column="CONFIG_ID" columnType="INTEGER" />
                 <schema-alterColumn table="RHQ_DRIFT_CONFIG" column="CONFIG_ID" nullable="FALSE" />
                 <schema-directSQL>
                     <statement desc="Creating RHQ_DRIFT_CONFIG foreign key relation to RHQ_CONFIG">
                         ALTER TABLE RHQ_DRIFT_CONFIG
                         ADD CONSTRAINT RHQ_DC_CONFIG_ID_FK
                         FOREIGN KEY (CONFIG_ID)
                         REFERENCES RHQ_CONFIG (ID)
                     </statement>
                 </schema-directSQL>
                 <schema-addColumn   table="RHQ_DRIFT_CONFIG" column="RESOURCE_ID" columnType="INTEGER" />
                 <schema-directSQL>
                     <statement desc="Creating RHQ_DRIFT_CONFIG foreign key relation to RHQ_RESOURCE">
                         ALTER TABLE RHQ_DRIFT_CONFIG
                         ADD CONSTRAINT RHQ_DC_RESOURCE_ID_FK
                         FOREIGN KEY (RESOURCE_ID)
                         REFERENCES RHQ_RESOURCE (ID)
                     </statement>
                 </schema-directSQL>


                 <!-- RHQ_DRIFT_CHANGE_SET -->
                 <schema-createSequence name="RHQ_DRIFT_CHANGE_SET_ID_SEQ" initial="10001" />
                 <schema-directSQL>
                     <statement desc="Creating table RHQ_DRIFT_CHANGE_SET">
                         CREATE TABLE RHQ_DRIFT_CHANGE_SET (ID INTEGER PRIMARY KEY)
                     </statement>
                 </schema-directSQL>
                 <schema-addColumn   table="RHQ_DRIFT_CHANGE_SET" column="CTIME" columnType="LONG" />
                 <schema-alterColumn table="RHQ_DRIFT_CHANGE_SET" column="CTIME" nullable="FALSE" />
                 <schema-addColumn   table="RHQ_DRIFT_CHANGE_SET" column="VERSION" columnType="INTEGER" />
                 <schema-alterColumn table="RHQ_DRIFT_CHANGE_SET" column="VERSION" nullable="FALSE" />
                 <schema-addColumn   table="RHQ_DRIFT_CHANGE_SET" column="CATEGORY" columnType="VARCHAR2" precision="20" />
                 <schema-alterColumn table="RHQ_DRIFT_CHANGE_SET" column="CATEGORY" nullable="FALSE" />
                 <schema-addColumn   table="RHQ_DRIFT_CHANGE_SET" column="RESOURCE_ID" columnType="INTEGER" />
                 <schema-alterColumn table="RHQ_DRIFT_CHANGE_SET" column="RESOURCE_ID" nullable="FALSE" />
                 <schema-directSQL>
                     <statement desc="Creating RHQ_DRIFT_CHANGE_SET foreign key relation to RHQ_RESOURCE">
                         ALTER TABLE RHQ_DRIFT_CHANGE_SET
                         ADD CONSTRAINT RHQ_DCS_RESOURCE_ID_FK
                         FOREIGN KEY (RESOURCE_ID)
                         REFERENCES RHQ_RESOURCE (ID)
                     </statement>
                 </schema-directSQL>
                 <schema-addColumn   table="RHQ_DRIFT_CHANGE_SET" column="DRIFT_CONFIG_ID" columnType="INTEGER" />
                 <schema-alterColumn table="RHQ_DRIFT_CHANGE_SET" column="DRIFT_CONFIG_ID" nullable="FALSE" />
                 <schema-directSQL>
                     <statement desc="Creating RHQ_DRIFT_CHANGE_SET foreign key relation to RHQ_DRIFT_CONFIG">
                         ALTER TABLE RHQ_DRIFT_CHANGE_SET
                         ADD CONSTRAINT RHQ_DCS_DRIFT_CONFIG_ID_FK
                         FOREIGN KEY (DRIFT_CONFIG_ID)
                         REFERENCES RHQ_DRIFT_CONFIG (ID)
                     </statement>
                 </schema-directSQL>

                 <!-- RHQ_DRIFT -->
                 <schema-createSequence name="RHQ_DRIFT_ID_SEQ" initial="10001" />
                 <schema-directSQL>
                     <statement desc="Creating table RHQ_DRIFT">
                         CREATE TABLE RHQ_DRIFT (ID INTEGER PRIMARY KEY)
                     </statement>
                 </schema-directSQL>
                 <schema-addColumn   table="RHQ_DRIFT" column="CTIME" columnType="LONG" />
                 <schema-alterColumn table="RHQ_DRIFT" column="CTIME" nullable="FALSE" />
                 <schema-addColumn   table="RHQ_DRIFT" column="CATEGORY" columnType="VARCHAR2" precision="20" />
                 <schema-alterColumn table="RHQ_DRIFT" column="CATEGORY" nullable="FALSE" />
                 <schema-addColumn   table="RHQ_DRIFT" column="PATH" columnType="VARCHAR2" precision="1024" />
                 <schema-alterColumn table="RHQ_DRIFT" column="PATH" nullable="FALSE" />
                 <schema-addColumn   table="RHQ_DRIFT" column="DRIFT_CHANGE_SET_ID" columnType="INTEGER" />
                 <schema-directSQL>
                     <statement desc="Creating RHQ_DRIFT foreign key relation to RHQ_DRIFT_CHANGE_SET">
                         ALTER TABLE RHQ_DRIFT
                         ADD CONSTRAINT RHQ_DRIFT_CHANGE_SET_ID_FK
                         FOREIGN KEY (DRIFT_CHANGE_SET_ID)
                         REFERENCES RHQ_DRIFT_CHANGE_SET (ID)
                     </statement>
                 </schema-directSQL>
                 <schema-alterColumn table="RHQ_DRIFT" column="DRIFT_CHANGE_SET_ID" nullable="FALSE" />
                 <schema-addColumn   table="RHQ_DRIFT" column="OLD_DRIFT_FILE" columnType="VARCHAR2" precision="64" />
                 <schema-directSQL>
                     <statement desc="Creating RHQ_DRIFT foreign key relation to RHQ_DRIFT_FILE (old drift file)">
                         ALTER TABLE RHQ_DRIFT
                         ADD CONSTRAINT RHQ_DRIFT_FILE_OLD_FK
                         FOREIGN KEY (OLD_DRIFT_FILE)
                         REFERENCES RHQ_DRIFT_FILE (HASH_ID)
                     </statement>
                 </schema-directSQL>
                 <schema-addColumn   table="RHQ_DRIFT" column="NEW_DRIFT_FILE" columnType="VARCHAR2" precision="64" />
                 <schema-directSQL>
                     <statement desc="Creating RHQ_DRIFT foreign key relation to RHQ_DRIFT_FILE (new drift file)">
                         ALTER TABLE RHQ_DRIFT
                         ADD CONSTRAINT RHQ_DRIFT_FILE_NEW_FK
                         FOREIGN KEY (NEW_DRIFT_FILE)
                         REFERENCES RHQ_DRIFT_FILE (HASH_ID)
                     </statement>
                 </schema-directSQL>

                 <!-- RHQ_DRIFT_TEMPLATE_MAP -->
                 <schema-directSQL>
                     <statement desc="Creating table RHQ_DRIFT_TEMPLATE_MAP">
                         CREATE TABLE RHQ_DRIFT_TEMPLATE_MAP (
                             RESOURCE_TYPE_ID INTEGER,
                             CONFIG_TEMPLATE_ID INTEGER)
                     </statement>
                 </schema-directSQL>
                 <schema-alterColumn table="RHQ_DRIFT_TEMPLATE_MAP" column="RESOURCE_TYPE_ID" nullable="FALSE"/>
                 <schema-alterColumn table="RHQ_DRIFT_TEMPLATE_MAP" column="CONFIG_TEMPLATE_ID" nullable="FALSE"/>
                 <schema-directSQL>
                     <statement desc="Creating RHQ_DRIFT_TEMPLATE_MAP foreign key to RHQ_RESOURCE_TYPE">
                         ALTER TABLE RHQ_DRIFT_TEMPLATE_MAP
                         ADD CONSTRAINT RHQ_DTM_RESOURCE_TYPE_ID_FK
                         FOREIGN KEY (RESOURCE_TYPE_ID)
                         REFERENCES RHQ_RESOURCE_TYPE (ID)
                     </statement>
                     <statement desc="Creating RHQ_DRIFT_TEMPLATE_MAP foreign key to RHQ_CONFIG_TEMPLATE">
                         ALTER TABLE RHQ_DRIFT_TEMPLATE_MAP
                         ADD CONSTRAINT RHQ_DTM_CONFIG_TEMPLATE_ID_FK
                         FOREIGN KEY (CONFIG_TEMPLATE_ID)
                         REFERENCES RHQ_CONFIG_TEMPLATE (ID)
                     </statement>
                 </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.112">
                <schema-directSQL>
                    <statement desc="Adding drift server plugin active plugin system configuration property">
                        INSERT INTO rhq_system_config (id, property_key, property_value, default_property_value)
                        VALUES (57, 'ACTIVE_DRIFT_PLUGIN', 'drift-jpa', 'drift-jpa')
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.113">
                <schema-directSQL ignoreError="true">
                    <statement desc="Creating RHQ_ALERT_CONDITION_LOG index on CONDITION_ID">
                        CREATE INDEX RHQ_ALERT_COND_LOG_COND_IDX ON RHQ_ALERT_CONDITION_LOG (CONDITION_ID)
                    </statement>
                </schema-directSQL>
                <schema-directSQL ignoreError="true">
                    <statement desc="Creating RHQ_MEASUREMENT_SCHED index on RESOURCE_ID">
                        CREATE INDEX RHQ_MEAS_SCHED_RESID_IDX ON RHQ_MEASUREMENT_SCHED (RESOURCE_ID)
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.114">
                <schema-directSQL>
                    <statement desc="Adding drift file purge system setting">
                        INSERT INTO rhq_system_config (id, property_key, property_value, default_property_value)
                        VALUES (58, 'DRIFT_FILE_PURGE', '2678400000', '2678400000')
                    </statement>
                </schema-directSQL>
            </schemaSpec>

<!-- RHQ 4.1 RELEASE uses DB Schema 2.114 -->

<!-- RHQ 4.2 RELEASE uses DB Schema 2.114
     Note, the 4.1 to 4.2 upgrade is broken because a 4.2 dbsetup actually creates a 2.115 schema. So,
     for 4.2 dbs to upgrade to 4.3 the schema version must first be corrected and set the schema
     version to 2.115.
-->

            <schemaSpec version="2.115">
                <!-- RHQ_DRIFT_DEF_TEMPLATE -->
                <schema-createSequence name="RHQ_DRIFT_DEF_TEMPLATE_ID_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement desc="Creating table RHQ_DRIFT_DEF_TEMPLATE">
                        CREATE TABLE RHQ_DRIFT_DEF_TEMPLATE (
                            ID INTEGER PRIMARY KEY,
                            RESOURCE_TYPE_ID INTEGER,
                            CONFIG_ID INTEGER)
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_DRIFT_DEF_TEMPLATE" column="RESOURCE_TYPE_ID" nullable="FALSE"/>
                <schema-alterColumn table="RHQ_DRIFT_DEF_TEMPLATE" column="CONFIG_ID" nullable="FALSE"/>
                <schema-addColumn   table="RHQ_DRIFT_DEF_TEMPLATE" column="NAME" columnType="VARCHAR2" precision="128"/>
                <schema-alterColumn table="RHQ_DRIFT_DEF_TEMPLATE" column="NAME" nullable="FALSE"/>
                <schema-addColumn   table="RHQ_DRIFT_DEF_TEMPLATE" column="DESCRIPTION" columnType="VARCHAR2" precision="512"/>
                <schema-addColumn   table="RHQ_DRIFT_DEF_TEMPLATE" column="DRIFT_CHANGE_SET_ID" columnType="VARCHAR2" precision="64"/>
                <schema-addColumn   table="RHQ_DRIFT_DEF_TEMPLATE" column="CTIME" columnType="LONG" />
                <schema-alterColumn table="RHQ_DRIFT_DEF_TEMPLATE" column="CTIME" nullable="FALSE" />
                <schema-addColumn   table="RHQ_DRIFT_DEF_TEMPLATE" column="IS_USER_DEFINED" columnType="BOOLEAN" />
                <schema-alterColumn table="RHQ_DRIFT_DEF_TEMPLATE" column="IS_USER_DEFINED" nullable="FALSE" />
                <schema-directSQL>
                    <statement desc="Creating RHQ_DRIFT_DEF_TEMPLATE foreign key to RHQ_RESOURCE_TYPE">
                        ALTER TABLE RHQ_DRIFT_DEF_TEMPLATE
                        ADD CONSTRAINT RHQ_DDT_RESOURCE_TYPE_ID_FK
                        FOREIGN KEY (RESOURCE_TYPE_ID)
                        REFERENCES RHQ_RESOURCE_TYPE (ID)
                    </statement>
                    <statement desc="Creating RHQ_DRIFT_DEF_TEMPLATE foreign key to RHQ_CONFIG">
                        ALTER TABLE RHQ_DRIFT_DEF_TEMPLATE
                        ADD CONSTRAINT RHQ_DDT_CONFIG_ID_FK
                        FOREIGN KEY (CONFIG_ID)
                        REFERENCES RHQ_CONFIG (ID)
                    </statement>
                </schema-directSQL>
                <schema-directSQL ignoreError="true">
                    <statement desc="Creating unique index on RESOURCE_TYPE_ID and NAME columns">
                        CREATE UNIQUE INDEX RHQ_TYPE_DEF_NAME ON RHQ_DRIFT_DEF_TEMPLATE ( RESOURCE_TYPE_ID, NAME )
                    </statement>
                </schema-directSQL>

                <!-- RHQ_DRIFT_CONFIG => RHQ_DRIFT_DEFINITION -->
                <schema-directSQL>
                     <statement>
                          ALTER TABLE RHQ_DRIFT_CONFIG RENAME TO RHQ_DRIFT_DEFINITION
                     </statement>
                     <statement targetDBVendor="postgresql">
                          ALTER TABLE RHQ_DRIFT_CONFIG_ID_SEQ RENAME TO RHQ_DRIFT_DEFINITION_ID_SEQ
                     </statement>
                     <statement targetDBVendor="oracle">
                          RENAME RHQ_DRIFT_CONFIG_ID_SEQ TO RHQ_DRIFT_DEFINITION_ID_SEQ
                     </statement>
                </schema-directSQL>

                <!--  add new columns -->
                <schema-addColumn   table="RHQ_DRIFT_DEFINITION" column="DESCRIPTION" columnType="VARCHAR2" precision="512" />
                <schema-addColumn   table="RHQ_DRIFT_DEFINITION" column="DRIFT_HANDLING_MODE" columnType="VARCHAR2" precision="20" />
                <schema-addColumn   table="RHQ_DRIFT_DEFINITION" column="IS_PINNED" columnType="BOOLEAN"/>
                <schema-addColumn   table="RHQ_DRIFT_DEFINITION" column="IS_ATTACHED" columnType="BOOLEAN"/>
                <schema-addColumn   table="RHQ_DRIFT_DEFINITION" column="DRIFT_DEF_TEMPLATE_ID" columnType="INTEGER"/>

                <!--  initialize new required columns -->
                <schema-directSQL>
                    <statement targetDBVendor="postgresql" desc="RHQ_DRIFT_DEFINITION: set is_pinned column (false)">
                        UPDATE RHQ_DRIFT_DEFINITION SET IS_PINNED = FALSE
                    </statement>
                    <statement targetDBVendor="oracle" desc="RHQ_DRIFT_DEFINITION: set is_pinned column (false)">
                        UPDATE RHQ_DRIFT_DEFINITION SET IS_PINNED = 0
                    </statement>
                    <statement targetDBVendor="postgresql" desc="RHQ_DRIFT_DEFINITION: set is_attached column (false)">
                        UPDATE RHQ_DRIFT_DEFINITION SET IS_ATTACHED = FALSE
                    </statement>
                    <statement targetDBVendor="oracle" desc="RHQ_DRIFT_DEFINITION: set is_attached column (false)">
                        UPDATE RHQ_DRIFT_DEFINITION SET IS_ATTACHED = 0
                    </statement>
                    <statement desc="RHQ_DRIFT_DEFINITION: set drift_handling_mode column (normal)">
                        UPDATE RHQ_DRIFT_DEFINITION SET DRIFT_HANDLING_MODE = 'normal'
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_DRIFT_DEFINITION" column="IS_PINNED" nullable="FALSE"/>
                <schema-alterColumn table="RHQ_DRIFT_DEFINITION" column="IS_ATTACHED" nullable="FALSE"/>
                <schema-alterColumn table="RHQ_DRIFT_DEFINITION" column="DRIFT_HANDLING_MODE" nullable="FALSE" />

                <!--  add new FK -->
                <schema-directSQL>
                    <statement desc="Create RHQ_DRIFT_DEFINITION foreign key to RHQ_DRIFT_DEF_TEMPLATE">
                        ALTER TABLE RHQ_DRIFT_DEFINITION
                        ADD CONSTRAINT RHQ_DC_TEMPLATE_ID_FK
                        FOREIGN KEY (DRIFT_DEF_TEMPLATE_ID)
                        REFERENCES RHQ_DRIFT_DEF_TEMPLATE (ID)
                    </statement>
                </schema-directSQL>


                <!-- RHQ_DRIFT_SET -->
                <schema-createSequence name="RHQ_DRIFT_SET_ID_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement desc="Creating table RHQ_DRIFT_SET">
                        CREATE TABLE RHQ_DRIFT_SET (ID INTEGER PRIMARY KEY)
                    </statement>
                </schema-directSQL>


                <!-- RHQ_DRIFT_CHANGE_SET -->
                <!-- Resource column is now nullable -->
                <schema-alterColumn table="RHQ_DRIFT_CHANGE_SET" column="RESOURCE_ID" nullable="TRUE" />

                <!--  Add new drift_set column with FK -->
                <schema-addColumn   table="RHQ_DRIFT_CHANGE_SET" column="DRIFT_SET_ID" columnType="INTEGER"/>
                <schema-directSQL>
                    <statement desc="Creating RHQ_DRIFT_CHANGE_SET foreign key relation to RHQ_DRIFT_SET">
                        ALTER TABLE RHQ_DRIFT_CHANGE_SET
                        ADD CONSTRAINT RHQ_DCS_SET_ID_FK
                        FOREIGN KEY (DRIFT_SET_ID)
                        REFERENCES RHQ_DRIFT_SET (ID)
                    </statement>
                </schema-directSQL>


                <!--  Rename column DRIFT_CONFIG_ID to DRIFT_DEFINITION_ID -->
                <schema-directSQL>
                    <statement desc="Renaming RHQ_DRIFT_CHANGE_SET.DRIFT_CONFIG_ID column to DRIFT_DEFINITION_ID">
                        ALTER TABLE RHQ_DRIFT_CHANGE_SET
                        RENAME COLUMN DRIFT_CONFIG_ID
                        TO DRIFT_DEFINITION_ID
                    </statement>
                </schema-directSQL>

                <!--  Add new drift_handling_mode column -->
                <schema-addColumn   table="RHQ_DRIFT_CHANGE_SET" column="DRIFT_HANDLING_MODE" columnType="VARCHAR2" precision="20" />
                <schema-directSQL>
                    <statement desc="RHQ_DRIFT_CHANGE_SET: set drift_handling_mode column (normal)">
                        UPDATE RHQ_DRIFT_CHANGE_SET SET DRIFT_HANDLING_MODE = 'normal'
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_DRIFT_CHANGE_SET" column="DRIFT_HANDLING_MODE" nullable="FALSE" />


                <!-- RHQ_DRIFT -->
                <!--  Add new path_directory column -->
                <schema-addColumn   table="RHQ_DRIFT" column="PATH_DIRECTORY" columnType="VARCHAR2" precision="1024" />

                <!-- Set the new path_directory column using the current path column values -->
                <schema-javaTask className="DriftPathDirectoryDatabaseUpgradeTask" />

                <!-- Now it is safe to set the new path_directory column not null -->
                <schema-alterColumn table="RHQ_DRIFT" column="PATH_DIRECTORY" nullable="FALSE" />

                <!--  add new drift_set_id column and FK -->
                <schema-addColumn   table="RHQ_DRIFT" column="DRIFT_SET_ID" columnType="INTEGER"/>
                <schema-directSQL>
                    <statement desc="Creating RHQ_DRIFT foreign key relation to RHQ_DRIFT_SET">
                        ALTER TABLE RHQ_DRIFT
                        ADD CONSTRAINT RHQ_DRIFT_SET_ID_FK
                        FOREIGN KEY (DRIFT_SET_ID)
                        REFERENCES RHQ_DRIFT_SET (ID)
                    </statement>
                </schema-directSQL>

                <!-- Morph rhq_drift_template_map rows into rhq_drift_def_template rows. The rhq_drift_template_map
                     table is obsolete. -->
                <schema-javaTask className="DriftTemplateMapDatabaseUpgradeTask" />

            </schemaSpec>

<!-- RHQ 4.2 RELEASE uses DB Schema 2.114, which is incorrect, it should have been 2.115. So, for the
     upgrade to work for an RHQ 4.2 install the schema version must be set to 2.115 prior to the upgrade.

     The 4.2 upgrade should start with 2.116.
-->
            <schemaSpec version="2.116">
                <!-- RHQ_DRIFT_DEFINITION changes -->
                <schema-addColumn   table="RHQ_DRIFT_DEFINITION" column="COMPLIANCE_STATUS" columnType="INTEGER"/>
                <schema-directSQL>
                    <statement desc="RHQ_DRIFT_DEFINITION: set compliance_status column (in compliance)">
                        UPDATE RHQ_DRIFT_DEFINITION SET COMPLIANCE_STATUS = 0
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_DRIFT_DEFINITION" column="COMPLIANCE_STATUS" nullable="FALSE"/>

                <schema-alterColumn table="RHQ_DRIFT_DEFINITION" column="NAME" columnType="VARCHAR2" precision="512" />


                <!-- RHQ_PRD_VER changes -->
                <!-- Increase the max length of a product version from 50 to 100. -->
                <schema-alterColumn table="RHQ_PRD_VER" column="VERSION" columnType="VARCHAR2" precision="100" />
            </schemaSpec>

<!-- JON 3.0 RELEASE uses DB Schema 2.116 -->

            <schemaSpec version="2.117">
                <!-- Remove an obsolete drift table that may be hanging around -->
                <schema-dropTable table="RHQ_DRIFT_TEMPLATE_MAP" ignoreError="true" />

                <!-- Remove an unwanted null constraint -->
                <schema-alterColumn table="RHQ_DRIFT_CHANGE_SET" column="DRIFT_DEFINITION_ID" nullable="TRUE" />
            </schemaSpec>

            <schemaSpec version="2.118">
                <!-- Correct an earlier upgrade issue where 'All Resources Role' was granted MANAGE_REPOSITORIES. -->
                <schema-directSQL>
                    <statement>
                        DELETE FROM RHQ_PERMISSION WHERE role_id = 2 AND operation = 15
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.119">
                <schema-directSQL>
                    <statement desc="Adding VIEW_USERS global permission to all existing roles">
                        INSERT INTO RHQ_PERMISSION (ROLE_ID, OPERATION)
                        SELECT r.ID, 17 FROM RHQ_ROLE r
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.120">
                <!-- RHQ_AGENT changes -->
                <schema-addColumn   table="RHQ_AGENT" column="LAST_AVAILABILITY_PING" columnType="LONG"/>
                <schema-directSQL>
                    <statement desc="RHQ_AGENT: init last_availability_ping to last_availability_report">
                        UPDATE RHQ_AGENT SET LAST_AVAILABILITY_PING = LAST_AVAILABILITY_REPORT
                    </statement>
                </schema-directSQL>

                <!-- Drop agent quiet time (i.e. suspect agent time) from 15 to 5 minutes -->
                <schema-directSQL>
                    <statement desc="Changing AGENT_MAX_QUIET_TIME_ALLOWED to 5 minutes from 15 minutes">
                        UPDATE RHQ_SYSTEM_CONFIG
                           SET PROPERTY_VALUE = '300000', DEFAULT_PROPERTY_VALUE = '300000'
                         WHERE PROPERTY_KEY = 'AGENT_MAX_QUIET_TIME_ALLOWED'
                    </statement>
                </schema-directSQL>

                <!-- set null availabilities to UNKNOWN -->
                <schema-directSQL>
                    <statement desc="Changing NULL RHQ_AVAILABILITY.AVAILABILITY_TYPE to UNKNOWN">
                        UPDATE RHQ_AVAILABILITY
                           SET AVAILABILITY_TYPE = 2
                         WHERE AVAILABILITY_TYPE IS NULL
                    </statement>
                    <statement desc="Changing NULL RHQ_RESOURCE_AVAIL.AVAILABILITY_TYPE to UNKNOWN">
                        UPDATE RHQ_RESOURCE_AVAIL
                           SET AVAILABILITY_TYPE = 2
                         WHERE AVAILABILITY_TYPE IS NULL
                    </statement>
                </schema-directSQL>

                <schema-alterColumn table="RHQ_AVAILABILITY"   column="AVAILABILITY_TYPE" nullable="FALSE"/>
                <schema-alterColumn table="RHQ_RESOURCE_AVAIL" column="AVAILABILITY_TYPE" nullable="FALSE"/>

            </schemaSpec>

            <schemaSpec version="2.121">
              <schema-javaTask className="ContentSourceConfigurationObfuscationUpgradeTask" />
            </schemaSpec>

<!-- RHQ 4.4, JON 3.1.0 RELEASE uses DB Schema 2.121 -->

            <schemaSpec version="2.122">
                <schema-directSQL>
                   <statement desc="Updating DOWN Alert Conditions to new format">
                      UPDATE RHQ_ALERT_CONDITION
                         SET NAME = 'AVAIL_GOES_DOWN', OPTION_STATUS = NULL
                       WHERE TYPE = 'AVAILABILITY'
                         AND NAME IS NULL
                         AND OPTION_STATUS = 'DOWN'
                   </statement>
                   <statement desc="Updating UP Alert Conditions to new format">
                      UPDATE RHQ_ALERT_CONDITION
                         SET NAME = 'AVAIL_GOES_UP', OPTION_STATUS = NULL
                       WHERE TYPE = 'AVAILABILITY'
                         AND NAME IS NULL
                         AND OPTION_STATUS = 'UP'
                   </statement>
                </schema-directSQL>
            </schemaSpec>

<!-- JON 3.1.1 RELEASE uses DB Schema 2.122 -->

            <schemaSpec version="2.123">

               <schema-addColumn   table="RHQ_CONFIG_PROP_DEF" column="MIN_ENTRIES" columnType="INTEGER"/>
               <schema-addColumn   table="RHQ_CONFIG_PROP_DEF" column="MAX_ENTRIES" columnType="INTEGER"/>

            </schemaSpec>

<!-- RHQ 4.5.0 uses DB Schema 2.123 -->

            <schemaSpec version="2.124">

                <schema-directSQL>
                    <statement desc="Update the NULL to 0 for MIN_ENTRIES">
                        UPDATE RHQ_CONFIG_PROP_DEF
                        SET MIN_ENTRIES = 0
                        WHERE MIN_ENTRIES IS NULL
                          AND DTYPE = 'list'
                    </statement>
                    <statement desc="Update the NULL to 32767 for MAX_ENTRIES">
                        UPDATE RHQ_CONFIG_PROP_DEF
                        SET MAX_ENTRIES = 32767
                        WHERE MAX_ENTRIES IS NULL
                          AND DTYPE = 'list'
                    </statement>
                </schema-directSQL>

            </schemaSpec>

            <schemaSpec version="2.125">
                <!-- Note, JON 3.1.2 includes this already but it is safe to re-execute -->
                <!-- We were using a buggy version of password obfuscation from JBoss AS. This task sets the affected
                     passwords to NULL. Fortunately, this currently affects only CSP content sources, so the damage
                     is not huge from the user perspective. -->
                <schema-javaTask className="org.rhq.core.db.upgrade.ConfigurationObfuscationCorrectionUpgradeTask" />
            </schemaSpec>

            <!-- BZ 865167 -->
            <schemaSpec version="2.126">
                <!-- Note, JON 3.1.2 includes this already but it is safe to re-execute -->
                <schema-directSQL>
                    <statement targetDBVendor="postgresql">
                        INSERT INTO RHQ_RESOURCE_AVAIL ( ID, RESOURCE_ID, AVAILABILITY_TYPE )
                            SELECT nextval('RHQ_RESOURCE_AVAIL_ID_SEQ'::text), res.ID, 2
                              FROM RHQ_RESOURCE res
                                   LEFT JOIN RHQ_RESOURCE_AVAIL avail ON res.ID = avail.RESOURCE_ID
                             WHERE avail.ID IS NULL
                    </statement>
                    <statement targetDBVendor="oracle">
                        INSERT INTO RHQ_RESOURCE_AVAIL ( ID, RESOURCE_ID, AVAILABILITY_TYPE )
                            SELECT RHQ_RESOURCE_AVAIL_ID_SEQ.nextval, res.ID, 2
                              FROM RHQ_RESOURCE res
                                   LEFT JOIN RHQ_RESOURCE_AVAIL avail ON res.ID = avail.RESOURCE_ID
                             WHERE avail.ID IS NULL
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <!-- Remove unnecessary tables for RHQ on AS7 -->
            <schemaSpec version="2.127">
                <schema-dropTable table="JMS_MESSAGES" ignoreError="true" />
                <schema-dropTable table="JMS_TRANSACTIONS" ignoreError="true" />
                <schema-dropTable table="JMS_USERS" ignoreError="true" />
                <schema-dropTable table="JMS_ROLES" ignoreError="true" />
                <schema-dropTable table="JMS_SUBSCRIPTIONS" ignoreError="true" />
            </schemaSpec>

            <!-- The perspective server plugin type has been removed - delete perspective plugin from DB -->
            <schemaSpec version="2.128">
                <schema-directSQL>
                    <statement>
                        DELETE FROM RHQ_PLUGIN WHERE NAME = 'CorePerspective'
                    </statement>
                </schema-directSQL>
            </schemaSpec>

<!-- RHQ 4.6.0 uses DB Schema 2.128 -->

            <!-- BZ 881848 -->
            <schemaSpec version="2.129">
                <schema-directSQL>
                    <statement targetDBVendor="postgresql">
                        INSERT INTO RHQ_AVAILABILITY ( ID, RESOURCE_ID, START_TIME, END_TIME, AVAILABILITY_TYPE )
                             SELECT nextval('RHQ_AVAILABILITY_ID_SEQ'::text), res.ID, 0, NULL, 2
                               FROM RHQ_RESOURCE res
                              WHERE NOT EXISTS ( SELECT * FROM RHQ_AVAILABILITY WHERE RESOURCE_ID = res.ID )
                    </statement>
                    <statement targetDBVendor="oracle">
                        INSERT INTO RHQ_AVAILABILITY ( ID, RESOURCE_ID, START_TIME, END_TIME, AVAILABILITY_TYPE )
                             SELECT RHQ_AVAILABILITY_ID_SEQ.nextval, res.ID, 0, NULL, 2
                               FROM RHQ_RESOURCE res
                              WHERE NOT EXISTS ( SELECT * FROM RHQ_AVAILABILITY WHERE RESOURCE_ID = res.ID )
                    </statement>
                </schema-directSQL>
            </schemaSpec>

            <!-- BZ 916380 -->
            <schemaSpec version="2.130">
                <schema-javaTask className="BundleVersionOrderUpgradeTask" />
            </schemaSpec>

            <schemaSpec version="2.131">
                <schema-addColumn table="RHQ_RESOURCE_TYPE" column="IGNORED" columnType="BOOLEAN"/>
                <schema-directSQL>
                    <statement targetDBVendor="postgresql" desc="Set ignored flag for existing resources types to false">
                        UPDATE RHQ_RESOURCE_TYPE SET IGNORED = false
                    </statement>
                    <statement targetDBVendor="oracle" desc="Set ignored flag for existing resources types to false">
                        UPDATE RHQ_RESOURCE_TYPE SET IGNORED = 0
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_RESOURCE_TYPE" column="IGNORED" nullable="false" />
            </schemaSpec>

            <schemaSpec version="2.132">
                <schema-directSQL>
                    <statement desc="Adding session timeout system setting">
                        INSERT INTO rhq_system_config (id, property_key, property_value, default_property_value)
                        VALUES (59, 'RHQ_SESSION_TIMEOUT', '3600000', '3600000')
                    </statement>
                </schema-directSQL>
            </schemaSpec>

<!-- RHQ 4.7.0 uses DB Schema 2.132 -->

            <schemaSpec version="2.133">
                <!-- RHQ_STORAGE_NODE -->
                <schema-createSequence name="RHQ_STORAGE_NODE_ID_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement desc="Creating table RHQ_STORAGE_NODE">
                        CREATE TABLE RHQ_STORAGE_NODE (
                            ID INTEGER PRIMARY KEY)
                    </statement>
                </schema-directSQL>
                <schema-addColumn   table="RHQ_STORAGE_NODE" column="ADDRESS" columnType="VARCHAR2" precision="255" />
                <schema-alterColumn table="RHQ_STORAGE_NODE" column="ADDRESS" nullable="FALSE" />
                <schema-addColumn   table="RHQ_STORAGE_NODE" column="JMX_PORT" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_STORAGE_NODE" column="JMX_PORT" nullable="FALSE" />
                <schema-addColumn   table="RHQ_STORAGE_NODE" column="CQL_PORT" columnType="INTEGER" />
                <schema-alterColumn table="RHQ_STORAGE_NODE" column="CQL_PORT" nullable="FALSE" />
                <schema-addColumn   table="RHQ_STORAGE_NODE" column="OPERATION_MODE" columnType="VARCHAR2" precision="32"/>
                <schema-alterColumn table="RHQ_STORAGE_NODE" column="OPERATION_MODE" nullable="FALSE" />
                <schema-addColumn   table="RHQ_STORAGE_NODE" column="CTIME" columnType="LONG" />
                <schema-alterColumn table="RHQ_STORAGE_NODE" column="CTIME" nullable="FALSE" />
                <schema-addColumn   table="RHQ_STORAGE_NODE" column="MTIME" columnType="LONG" />
                <schema-alterColumn table="RHQ_STORAGE_NODE" column="MTIME" nullable="FALSE" />
                <schema-addColumn   table="RHQ_STORAGE_NODE" column="RESOURCE_ID" columnType="INTEGER" />
                <schema-directSQL>
                    <statement desc="Creating RHQ_STORAGE_NODE foreign key to RHQ_RESOURCE">
                        ALTER TABLE RHQ_STORAGE_NODE
                        ADD CONSTRAINT RHQ_SN_RESOURCE_ID_FK
                        FOREIGN KEY (RESOURCE_ID)
                        REFERENCES RHQ_RESOURCE (ID)
                    </statement>
                </schema-directSQL>
                <schema-directSQL ignoreError="true">
                    <statement desc="Creating unique index on ADDRESS column">
                        CREATE UNIQUE INDEX RHQ_ADDRESS ON RHQ_STORAGE_NODE ( ADDRESS )
                    </statement>
                </schema-directSQL>
            </schemaSpec>

<!-- RHQ 4.7.0 uses DB Schema 2.133 -->

            <schemaSpec version="2.134">
              <!-- Make sure existing storage nodes are storing IP addresses and not hostnames -->
              <schema-javaTask className="StorageNodeAddressUpgradeTask" />
            </schemaSpec>

            <schemaSpec version="2.135">
              <!-- Fine Grained Bundle Permissions -->

              <!-- Add new perms to superuser/all-resources roles -->
              <schema-directSQL>
                <statement desc="Inserting MANAGE_BUNDLE_GROUPS permission for all MANAGE_BUNDLE (12) roles">
                    INSERT INTO rhq_permission (role_id, operation) SELECT role_id, 18 FROM rhq_permission p where p.operation = 12
                </statement>
                <statement desc="Inserting CREATE_BUNDLES permission for all MANAGE_BUNDLE (12) roles">
                    INSERT INTO rhq_permission (role_id, operation) SELECT role_id, 19 FROM rhq_permission p where p.operation = 12
                </statement>
                <statement desc="Inserting DELETE_BUNDLES permission for all MANAGE_BUNDLE roles">
                    INSERT INTO rhq_permission (role_id, operation) SELECT role_id, 20 FROM rhq_permission p where p.operation = 12
                </statement>
                <statement desc="Inserting DEPLOY_BUNDLES permission for all MANAGE_BUNDLE roles">
                    INSERT INTO rhq_permission (role_id, operation) SELECT role_id, 21 FROM rhq_permission p where p.operation = 12
                </statement>
                <statement desc="Inserting VIEW_BUNDLES permission for all MANAGE_BUNDLE roles">
                    INSERT INTO rhq_permission (role_id, operation) SELECT role_id, 22 FROM rhq_permission p where p.operation = 12
                </statement>
              </schema-directSQL>

              <!-- RHQ_BUNDLE_GROUP -->
              <schema-createSequence name="RHQ_BUNDLE_GROUP_ID_SEQ" initial="10001" />
              <schema-directSQL>
                <statement desc="Creating table RHQ_BUNDLE_GROUP">
                    CREATE TABLE RHQ_BUNDLE_GROUP (
                        ID INTEGER PRIMARY KEY)
                </statement>
              </schema-directSQL>
              <schema-addColumn   table="RHQ_BUNDLE_GROUP" column="NAME" columnType="VARCHAR2" precision="4000" />
              <schema-alterColumn table="RHQ_BUNDLE_GROUP" column="NAME" nullable="FALSE" />
              <schema-addColumn   table="RHQ_BUNDLE_GROUP" column="DESCRIPTION" columnType="VARCHAR2" precision="512" />
              <schema-alterColumn table="RHQ_BUNDLE_GROUP" column="DESCRIPTION" nullable="TRUE" />
              <schema-addColumn   table="RHQ_BUNDLE_GROUP" column="CTIME" columnType="LONG" />
              <schema-alterColumn table="RHQ_BUNDLE_GROUP" column="CTIME" nullable="FALSE" />
              <schema-addColumn   table="RHQ_BUNDLE_GROUP" column="MTIME" columnType="LONG" />
              <schema-alterColumn table="RHQ_BUNDLE_GROUP" column="MTIME" nullable="FALSE" />

              <!-- RHQ_ROLE_BUNDLE_GROUP_MAP -->
              <schema-directSQL>
                <statement desc="Creating table RHQ_ROLE_BUNDLE_GROUP_MAP">
                    CREATE TABLE RHQ_ROLE_BUNDLE_GROUP_MAP (
                        ROLE_ID INTEGER,
                        BUNDLE_GROUP_ID INTEGER)
                </statement>
              </schema-directSQL>
              <schema-alterColumn table="RHQ_ROLE_BUNDLE_GROUP_MAP" column="ROLE_ID" nullable="FALSE"/>
              <schema-alterColumn table="RHQ_ROLE_BUNDLE_GROUP_MAP" column="BUNDLE_GROUP_ID" nullable="FALSE"/>
              <schema-directSQL>
                <statement>
                    ALTER TABLE RHQ_ROLE_BUNDLE_GROUP_MAP
                    ADD CONSTRAINT RHQ_ROLE_BUN_GROUP_MAP_KEY
                    PRIMARY KEY ( ROLE_ID, BUNDLE_GROUP_ID )
                </statement>
                <statement desc="Creating RHQ_ROLE_BUNDLE_GROUP_MAP foreign key to RHQ_ROLE">
                    ALTER TABLE RHQ_ROLE_BUNDLE_GROUP_MAP
                    ADD CONSTRAINT RHQ_RBG_ROLE_ID_FK
                    FOREIGN KEY (ROLE_ID)
                    REFERENCES RHQ_ROLE (ID)
                </statement>
                <statement desc="Creating RHQ_ROLE_BUNDLE_GROUP_MAP foreign key to RHQ_BUNDLE_GROUP">
                    ALTER TABLE RHQ_ROLE_BUNDLE_GROUP_MAP
                    ADD CONSTRAINT RHQ_RBG_BUNDLE_GROUP_ID_FK
                    FOREIGN KEY (BUNDLE_GROUP_ID)
                    REFERENCES RHQ_BUNDLE_GROUP (ID)
                </statement>
              </schema-directSQL>

              <!-- RHQ_BUNDLE_GROUP_BUNDLE_MAP -->
              <schema-directSQL>
                <statement desc="Creating table RHQ_BUNDLE_GROUP_BUNDLE_MAP">
                    CREATE TABLE RHQ_BUNDLE_GROUP_BUNDLE_MAP (
                        BUNDLE_ID INTEGER,
                        BUNDLE_GROUP_ID INTEGER)
                </statement>
              </schema-directSQL>
              <schema-alterColumn table="RHQ_BUNDLE_GROUP_BUNDLE_MAP" column="BUNDLE_ID" nullable="FALSE"/>
              <schema-alterColumn table="RHQ_BUNDLE_GROUP_BUNDLE_MAP" column="BUNDLE_GROUP_ID" nullable="FALSE"/>
              <schema-directSQL>
                <statement>
                    ALTER TABLE RHQ_BUNDLE_GROUP_BUNDLE_MAP
                    ADD CONSTRAINT RHQ_BUNDLE_GROUP_BUN_MAP_KEY
                    PRIMARY KEY ( BUNDLE_ID, BUNDLE_GROUP_ID )
                </statement>
                <statement desc="Creating RHQ_BUNDLE_GROUP_BUNDLE_MAP foreign key to RHQ_BUNDLE">
                    ALTER TABLE RHQ_BUNDLE_GROUP_BUNDLE_MAP
                    ADD CONSTRAINT RHQ_BGB_BUNDLE_ID_FK
                    FOREIGN KEY (BUNDLE_ID)
                    REFERENCES RHQ_BUNDLE (ID)
                </statement>
                <statement desc="Creating RHQ_BUNDLE_GROUP_BUNDLE_MAP foreign key to RHQ_BUNDLE_GROUP">
                    ALTER TABLE RHQ_BUNDLE_GROUP_BUNDLE_MAP
                    ADD CONSTRAINT RHQ_BGB_BUNDLE_GROUP_ID_FK
                    FOREIGN KEY (BUNDLE_GROUP_ID)
                    REFERENCES RHQ_BUNDLE_GROUP (ID)
                </statement>
              </schema-directSQL>

            </schemaSpec>

          <schemaSpec version="2.136">
            <schema-addColumn   table="RHQ_CONFIG_PD_OSRC" column="EXPRESSION_SCOPE" columnType="VARCHAR2" precision="15"/>
            <schema-directSQL>
              <statement desc="Fill in defaults">
                UPDATE RHQ_CONFIG_PD_OSRC
                SET EXPRESSION_SCOPE = 'UNLIMITED'
                WHERE EXPRESSION_SCOPE IS NULL
              </statement>
            </schema-directSQL>
            <schema-alterColumn table="RHQ_CONFIG_PD_OSRC" column="EXPRESSION_SCOPE" nullable="false" default="UNLIMITED"/>
          </schemaSpec>

          <schemaSpec version="2.137">
              <schema-addColumn table="RHQ_STORAGE_NODE" column="MAINTENANCE_PENDING" columnType="BOOLEAN"/>
              <schema-addColumn table="RHQ_STORAGE_NODE" column="ERROR_MSG" columnType="LONGVARCHAR"/>
              <schema-addColumn table="RHQ_STORAGE_NODE" column="RESOURCE_OP_HIST_ID" columnType="INTEGER"/>
              <schema-directSQL>
                <statement desc="Creating RHQ_STORAGE_NODE foreign key to RHQ_OPERATION_HISTORY">
                  ALTER TABLE RHQ_STORAGE_NODE
                  ADD CONSTRAINT RHQ_SN_OP_HIST_ID_FK
                  FOREIGN KEY (RESOURCE_OP_HIST_ID)
                  REFERENCES RHQ_OPERATION_HISTORY (ID)
              </statement>
                <statement targetDBVendor="postgresql" desc="Set maintenance_pending flag to false for existing storage nodes">
                  UPDATE RHQ_STORAGE_NODE SET MAINTENANCE_PENDING = false
                </statement>
                <statement targetDBVendor="oracle" desc="Set maintenance_pending flag to false for existing storage nodes">
                  UPDATE RHQ_STORAGE_NODE SET MAINTENANCE_PENDING = 0
                </statement>
            </schema-directSQL>
            <schema-alterColumn table="RHQ_STORAGE_NODE" column="MAINTENANCE_PENDING" nullable="false" />
          </schemaSpec>

          <schemaSpec version="2.138">
            <schema-directSQL>
                <statement desc="Adding automatic deployment system setting">
                  INSERT INTO rhq_system_config (id, property_key, property_value, default_property_value)
                  VALUES (60, 'STORAGE_AUTOMATIC_DEPLOYMENT', 'true', 'true')
                </statement>
            </schema-directSQL>
          </schemaSpec>

          <schemaSpec version="2.139">
            <schema-directSQL>
                <statement desc="Drop JMX port column from Storage Node table">
                   ALTER TABLE RHQ_STORAGE_NODE DROP COLUMN JMX_PORT
                </statement>
            </schema-directSQL>
          </schemaSpec>

          <schemaSpec version="2.140">
            <schema-directSQL>
              <statement targetDBVendor="postgresql" desc="Adding default storage cql port">
                INSERT INTO rhq_system_config (id, property_key, property_value, default_property_value, fread_only)
                VALUES (61, 'STORAGE_CQL_PORT', null, null, true)
              </statement>
              <statement targetDBVendor="oracle" desc="Adding default storage cql port">
                INSERT INTO rhq_system_config (id, property_key, property_value, default_property_value, fread_only)
                VALUES (61, 'STORAGE_CQL_PORT', null, null, 1)
              </statement>
            </schema-directSQL>

            <schema-directSQL>
              <statement targetDBVendor="postgresql" desc="Adding default storage gossip port">
                INSERT INTO rhq_system_config (id, property_key, property_value, default_property_value, fread_only)
                VALUES (62, 'STORAGE_GOSSIP_PORT', null, null, true)
              </statement>
              <statement targetDBVendor="oracle" desc="Adding default storage gossip port">
                INSERT INTO rhq_system_config (id, property_key, property_value, default_property_value, fread_only)
                VALUES (62, 'STORAGE_GOSSIP_PORT', null, null, 1)
              </statement>
            </schema-directSQL>
          </schemaSpec>

<!-- RHQ 4.9.0 uses DB Schema 2.140 -->

            <schemaSpec version="2.141">
              <schema-directSQL>
                <statement targetDBVendor="postgresql" desc="Adding storage username">
                  INSERT INTO rhq_system_config (id, property_key, property_value, default_property_value, fread_only)
                  VALUES (63, 'STORAGE_USERNAME', 'UNSET', 'UNSET', true)
                </statement>
                <statement targetDBVendor="oracle" desc="Adding storage username">
                  INSERT INTO rhq_system_config (id, property_key, property_value, default_property_value, fread_only)
                  VALUES (63, 'STORAGE_USERNAME', 'UNSET', 'UNSET', 1)
                </statement>
              </schema-directSQL>

              <schema-directSQL>
                <statement targetDBVendor="postgresql" desc="Adding storage password">
                  INSERT INTO rhq_system_config (id, property_key, property_value, default_property_value, fread_only)
                  VALUES (64, 'STORAGE_PASSWORD', 'UNSET', 'UNSET', true)
                </statement>
                <statement targetDBVendor="oracle" desc="Adding default storage password">
                  INSERT INTO rhq_system_config (id, property_key, property_value, default_property_value, fread_only)
                  VALUES (64, 'STORAGE_PASSWORD', 'UNSET', 'UNSET', 1)
                </statement>
              </schema-directSQL>
            </schemaSpec>

            <schemaSpec version="2.142">
                <schema-javaTask className="SystemSettingsPasswordObfuscationTask" />
            </schemaSpec>
            <schemaSpec version="2.143">
              <schema-alterColumn table="RHQ_RAW_CONFIG" column="config_ID" nullable="true"/>
            </schemaSpec>

            <schemaSpec version="2.144">
                <!-- RHQ_AGENT_INSTALL -->
                <schema-createSequence name="RHQ_AGENT_INSTALL_SEQ" initial="10001" />
                <schema-directSQL>
                    <statement desc="Creating table RHQ_AGENT_INSTALL">
                        CREATE TABLE RHQ_AGENT_INSTALL ( ID INTEGER PRIMARY KEY )
                    </statement>
                </schema-directSQL>
                <schema-alterColumn table="RHQ_AGENT_INSTALL" column="ID" nullable="FALSE" />
                <schema-addColumn   table="RHQ_AGENT_INSTALL" column="MTIME" columnType="LONG" />
                <schema-alterColumn table="RHQ_AGENT_INSTALL" column="MTIME" nullable="FALSE" />
                <schema-addColumn   table="RHQ_AGENT_INSTALL" column="AGENT_NAME" columnType="VARCHAR2" precision="255" />
                <schema-addColumn   table="RHQ_AGENT_INSTALL" column="INSTALL_LOCATION" columnType="VARCHAR2" precision="4000" />
                <schema-addColumn   table="RHQ_AGENT_INSTALL" column="SSH_HOST" columnType="VARCHAR2" precision="255" />
                <schema-addColumn   table="RHQ_AGENT_INSTALL" column="SSH_PORT" columnType="INTEGER" />
                <schema-addColumn   table="RHQ_AGENT_INSTALL" column="SSH_USERNAME" columnType="VARCHAR2" precision="255" />
                <schema-addColumn   table="RHQ_AGENT_INSTALL" column="SSH_PASSWORD" columnType="VARCHAR2" precision="4000" />
            </schemaSpec>

            <schemaSpec version="2.145">
              <schema-addColumn   table="RHQ_GROUP_DEF" column="CANNED_EXPRESSION" columnType="VARCHAR2" precision="100" />
              <schema-alterColumn table="RHQ_GROUP_DEF" column="CANNED_EXPRESSION" nullable="true"/>
            </schemaSpec>

            <schemaSpec version="2.146">
                <schema-directSQL>
                    <statement desc="Create new RHQ_PLUGIN_SERVER_ACK_DELETE table">
                        CREATE TABLE RHQ_PLUGIN_SERVER_ACK_DELETE (
                        PLUGIN_ID INTEGER NOT NULL REFERENCES RHQ_PLUGIN,
                        SERVER_ID INTEGER NOT NULL REFERENCES RHQ_SERVER,
                        CONSTRAINT RHQ_PLUGIN_SERVER_ACK_DELETE_PK PRIMARY KEY (PLUGIN_ID, SERVER_ID)
                        )
                    </statement>
                </schema-directSQL>
            </schemaSpec>
        </dbupgrade>
    </target>
</project>
