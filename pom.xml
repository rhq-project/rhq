<?xml version="1.0"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>org.rhq</groupId>
  <artifactId>rhq-parent</artifactId>
  <version>4.14.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>RHQ</name>
  <description>RHQ is a server management and monitoring suite primarily targeted at JBoss software.</description>
  <url>http://www.jboss.org/rhq/</url>
  <inceptionYear>2008</inceptionYear>

  <organization>
    <name>Red Hat, Inc.</name>
    <url>http://redhat.com/</url>
  </organization>

  <scm>
    <connection>scm:git:ssh://github.com/rhq-project/rhq</connection>
    <developerConnection>scm:git:ssh://github.com/rhq-project/rhq</developerConnection>
    <url>https://github.com/rhq-project/rhq</url>
  </scm>

  <issueManagement>
    <system>bugzilla</system>
    <url>https://bugzilla.redhat.com/browse.cgi?product=RHQ%20Project</url>
  </issueManagement>

  <properties>
    <!-- explicitly specify a default encoding to avoid relying on the LANG env var being set correctly -->
    <project.build.sourceEncoding>ISO-8859-1</project.build.sourceEncoding>
    <project.reporting.outputEncoding>ISO-8859-1</project.reporting.outputEncoding>

    <rhq.groupId>org.rhq</rhq.groupId>
    <rhq.product.name>RHQ</rhq.product.name>
    <rhq.earName>rhq.ear</rhq.earName>
    <!-- the below path is relative to {rhq-trunk} -->
    <rhq.defaultDevContainerPath>dev-container</rhq.defaultDevContainerPath>
    <rhq.devContainerServerPath>${rhq.defaultDevContainerPath}/rhq-server</rhq.devContainerServerPath>
    <rhq.devContainerAgentPath>${rhq.defaultDevContainerPath}/rhq-agent</rhq.devContainerAgentPath>
    <!-- path relative to under dev container path where the EAR is deployed -->
    <rhq.earDeployDir>modules/org/rhq/server-startup/main/deployments/${rhq.earName}</rhq.earDeployDir>
    <!-- path relative to under dev container path where other things are stored -->
    <rhq.agentPluginDir>${rhq.earDeployDir}/rhq-downloads/rhq-plugins</rhq.agentPluginDir>
    <rhq.serverPluginDir>${rhq.earDeployDir}/rhq-serverplugins</rhq.serverPluginDir>
    <rhq.earLibDir>${rhq.earDeployDir}/lib</rhq.earLibDir>

    <!-- set the below prop to true to enable misc extra build output -->
    <rhq.debug>false</rhq.debug>

    <!-- product info -->
    <product.shortName>RHQ</product.shortName>
    <product.name>RHQ</product.name>
    <product.fullName>RHQ</product.fullName>
    <product.url>http://www.jboss.org/rhq</product.url>
    <product.urlDomain>jboss.org</product.urlDomain>
    <product.salesEmail>rhq-users@lists.fedorahosted.org</product.salesEmail>
    <product.supportEmail>rhq-users@lists.fedorahosted.org</product.supportEmail>
    <product.version>${project.version}</product.version>
    <product.helpDocRoot>https://docs.jboss.org/author/display/RHQ/User+Documentation</product.helpDocRoot>
    <product.buildPropertiesFile>target/build.properties</product.buildPropertiesFile>

    <doUpdate>false</doUpdate>

    <!-- dependency versions -->

    <!-- Start: JBoss AS Dependency Versions
         The dependency versions below are declared together as the versions of each are dependent on the
         overall JBoss AS Server version.  Meaning, the AS provides these libs. When the Server
         version is changed the versions of each of these should be validated and updated as needed.

         the jboss.version is the version of the zip file
         the jboss.eap.version is the version of the eap inside if the directory
         inside the zip is not the same as the name of the zip
         e.g. jboss-as-dist-7.2.0.Alpha1-redhat-4.zip unzips to jboss-eap-6.1
         e.g. jboss-as-dist-7.4.0.Final-redhat-4.zip unzips to jboss-eap-6.3
    -->
    <jboss.version>7.4.0.Final-redhat-4</jboss.version>
    <jboss.eap.version>jboss-eap-6.3</jboss.eap.version>
    <jboss.javaee6.spec.version>3.0.2.Final</jboss.javaee6.spec.version>

    <!-- Provided -->
    <animal.sniffer.version>1.8</animal.sniffer.version>
    <annotations.version>7.0.2</annotations.version>
    <ant.contrib.version>1.0b3</ant.contrib.version>
    <antlr.version>3.5.2</antlr.version>
    <apache.httpcomponents.version>4.2.5</apache.httpcomponents.version>
    <arquillian.version>1.0.4.Final</arquillian.version> <!-- as of 6/25/2014 the latest version publically available is 1.1.4.Final, but we can't compile with that yet -->
    <arquillian.jboss.container.version>7.2.0.Final</arquillian.jboss.container.version> <!-- as of 6/25/2014 this is the latest version publically available -->
    <augeas.version>0.9.0-4</augeas.version>
    <augeas.classifier>el5</augeas.classifier>
    <augeas.zip.version>0.9.0-4</augeas.zip.version>
    <augeas.zip.location>${settings.localRepository}/net/augeas/augeas-native/${augeas.version}</augeas.zip.location>
    <augeas.zip.mask>*-${augeas.classifier}.zip</augeas.zip.mask>

    <cassandra.driver.netty.version>3.9.1.Final</cassandra.driver.netty.version>
    <cassandra.driver.version>1.0.8-jboss-1</cassandra.driver.version>
    <cassandra.snappy.version>1.0.4.1-rhq-p1</cassandra.snappy.version>
    <cassandra.snakeyaml.version>1.6</cassandra.snakeyaml.version>
    <cassandra.thrift.version>0.7.0</cassandra.thrift.version>
    <cassandra.version>1.2.18-jboss-2</cassandra.version>
    <clirr.version>2.6</clirr.version>
    <commons-beanutils.version>1.8.2</commons-beanutils.version>
    <commons-codec.version>1.4</commons-codec.version>
    <commons-collections.version>3.2.2</commons-collections.version>
    <commons-configuration.version>1.6</commons-configuration.version>
    <commons-httpclient.version>3.0.1</commons-httpclient.version>
    <commons-io.version>1.4</commons-io.version>
    <commons-lang.version>2.4</commons-lang.version>
    <commons-logging.version>1.1.0.jboss</commons-logging.version>
    <commons-validator.version>1.1.4</commons-validator.version>
    <concurrent.version>1.3.4-jboss-update1</concurrent.version> <!-- oswego-concurrent compatible with 4.2.3.GA -->

    <findbugs.version>2.3.2</findbugs.version>
    <freemarker.version>2.3.18</freemarker.version>

    <el.version>1.0</el.version>
    <ems.version>1.3.6-rhq</ems.version>

    <getopt.version>1.0.13.redhat-4</getopt.version>

    <h2.version>1.2.139</h2.version>
    <hibernate.version>4.2.13.Final</hibernate.version> <!-- -redhat-1 -->
    <hibernate-annotations.version>4.0.1.Final</hibernate-annotations.version> <!-- -redhat-2 -->
    <hibernate-jpa-2.0-api.version>1.0.1.Final</hibernate-jpa-2.0-api.version> <!-- -redhat-2 -->

    <i18nlog.version>1.0.10</i18nlog.version>
    <infinispan.version>5.2.10.Final</infinispan.version> <!-- -redhat-1 -->

    <jackson.version>2.0.5</jackson.version>
    <jackson-core-asl.version>1.9.13</jackson-core-asl.version>
    <jackson-mapper-asl.version>1.9.13</jackson-mapper-asl.version>
    <jacoco.version>0.6.0.201210061924</jacoco.version>
    <jacoco-arquillian-extension.version>1.0.0.Alpha5</jacoco-arquillian-extension.version>
    <javassist.version>3.18.1-GA</javassist.version> <!-- -redhat-1 -->
    <javax.annotation.api.version>1.0.1.Final</javax.annotation.api.version> <!-- -redhat-2 -->
    <javax.ejb.api.version>1.0.2.Final</javax.ejb.api.version> <!-- -redhat-2 -->
    <javax.jms.api.version>1.0.1.Final</javax.jms.api.version> <!-- -redhat-2 -->
    <javax.mail.api.version>1.4.4</javax.mail.api.version>
    <javax.servlet.api.version>1.0.2.Final</javax.servlet.api.version> <!-- -redhat-1 -->
    <jaxb-api.version>1.0.4.Final</jaxb-api.version> <!-- -redhat-2 -->
    <jaxb-impl.version>2.2.4</jaxb-impl.version>
    <jboss-annotations.version>4.2.3.GA</jboss-annotations.version>
    <jboss-cache.version>1.4.1.SP9</jboss-cache.version>
    <jboss-common-core.version>2.2.17.GA</jboss-common-core.version> <!-- -redhat-2 -->
    <jboss-common.version>1.2.1.GA</jboss-common.version> <!-- note this is the old commons we used, not the newer commons-core -->
    <jboss-jmx.version>4.2.3.GA</jboss-jmx.version>
    <jboss-dmr.version>1.2.0.Final</jboss-dmr.version> <!-- -redhat-1 -->
    <jboss-ejb3-ext-api.version>2.1.0</jboss-ejb3-ext-api.version> <!-- .redhat-1 (NOTE: "." prefix) -->
    <jboss-interceptors-api.version>1.0.1.Final</jboss-interceptors-api.version> <!-- -redhat-2 -->
    <jboss-jts.version>4.16.4.Final</jboss-jts.version>
    <jboss-logging.version>3.1.2.GA</jboss-logging.version>
    <jboss-modules.version>1.3.3.Final</jboss-modules.version> <!-- -redhat-1 -->
    <jboss-msc.version>1.1.5.Final</jboss-msc.version> <!-- -redhat-1 -->
    <jboss-remoting.version>2.5.4.SP5</jboss-remoting.version>
    <jboss-remotingjmx.version>1.0.2.Final</jboss-remotingjmx.version>
    <jboss-transaction-api.version>1.0.1.Final</jboss-transaction-api.version> <!-- -redhat-2 -->
    <jboss-serialization.version>1.0.3.GA</jboss-serialization.version>
    <jboss-staxmapper.version>1.1.0.Final</jboss-staxmapper.version> <!-- -redhat-2 -->
    <jboss-system.version>4.2.3.GA</jboss-system.version>
    <jboss-vfs.version>3.1.0.Final</jboss-vfs.version>
    <jbosssx.version>4.2.3.GA</jbosssx.version>
    <jgroups.version>3.2.13.Final</jgroups.version>
    <jbpm.version>3.1.1</jbpm.version>
    <jline.version>0.9.94</jline.version>
    <jna.version>3.2.5</jna.version>
    <jsf-api.version>1.2_14</jsf-api.version> <!-- 1.2_15-b01-redhat-11 -->
    <jsf-impl.version>1.2_14</jsf-impl.version> <!-- 1.2_15-b01-redhat-11 --> <!-- was "1.2_14" when on EAP 6.1 -->
    <jta.version>1.1</jta.version>
    <jtds.version>1.2.2</jtds.version>
    <junit.version>4.10</junit.version>

    <liquibase-core.version>2.0.3</liquibase-core.version>
    <log4j.version>1.2.16</log4j.version>

    <mockito-core.version>1.9.0</mockito-core.version>

    <ojdbc6.version>12.1.0.1.0</ojdbc6.version>
    <opencsv.version>1.8</opencsv.version>

    <picketbox.version>4.0.19.SP7</picketbox.version> 
    <commons-logging.version>1.1.0.jboss</commons-logging.version>
    <concurrent.version>1.3.4-jboss-update1</concurrent.version> <!-- oswego-concurrent compatible with 4.2.3.GA -->
    <findbugs.version>2.3.2</findbugs.version>
    <getopt.version>1.0.13</getopt.version>
    <i18nlog.version>1.0.10</i18nlog.version>
    <jsf-api.version>1.2_14</jsf-api.version>
    <jsf-impl.version>1.2_14</jsf-impl.version>
    <log4j.version>1.2.16</log4j.version>
    <postgresql.version>9.2-1002.jdbc4</postgresql.version>
    <powermock.version>1.4.12</powermock.version>

    <quartz.version>1.6.5</quartz.version>

    <resteasy.version>2.3.5.Final</resteasy.version> <!-- 2.3.8.Final-redhat-3 -->
    <richfaces.version>3.3.4.Final</richfaces.version>

    <shrinkwrap-resolver.version>2.0.0-alpha-7</shrinkwrap-resolver.version>
    <servlet-api.version>2.4</servlet-api.version>
    <sigar.version>1.6.5.132-6</sigar.version>
    <sigar.zip.version>1.6.5</sigar.zip.version>
    <swagger-annotations.version>1.2.3</swagger-annotations.version>

    <testng.version>6.5.2</testng.version>
    <twitter4j.version>2.2.4</twitter4j.version>

    <xercesImpl.version>2.9.1-jbossas-2</xercesImpl.version> <!-- see BZ-820629 and CVE-2009-2625 -->
    <xnio.version>3.0.10.GA</xnio.version> <!-- needed in jndi-access tests to talk to the managed AS --> <!-- was "3.0.7.GA" -->


    <!--
       defaults for datasource used by integration tests -
       these may be overridden in ~/.m2/settings.xml
    -->

    <rhq.db.admin.username>rhqadmin</rhq.db.admin.username>
    <rhq.db.admin.password>rhqadmin</rhq.db.admin.password>

    <rhq.test.ds.db-name>rhq</rhq.test.ds.db-name>
    <rhq.test.ds.connection-url>jdbc:postgresql://127.0.0.1:5432/${rhq.test.ds.db-name}</rhq.test.ds.connection-url>
    <rhq.test.ds.driver-class>org.postgresql.Driver</rhq.test.ds.driver-class>
    <rhq.test.ds.xa-datasource-class>org.postgresql.xa.PGXADataSource</rhq.test.ds.xa-datasource-class>
    <rhq.test.ds.user-name>rhqadmin</rhq.test.ds.user-name>
    <rhq.test.ds.password>rhqadmin</rhq.test.ds.password>
    <rhq.test.ds.type-mapping>PostgreSQL</rhq.test.ds.type-mapping>
    <rhq.test.ds.server-name>127.0.0.1</rhq.test.ds.server-name>
    <rhq.test.ds.port>5432</rhq.test.ds.port>
    <rhq.test.ds.hibernate-dialect>org.hibernate.dialect.PostgreSQLDialect</rhq.test.ds.hibernate-dialect>
    <rhq.test.quartz.driverDelegateClass>org.quartz.impl.jdbcjobstore.PostgreSQLDelegate</rhq.test.quartz.driverDelegateClass>
    <rhq.test.quartz.selectWithLockSQL>
       SELECT * FROM {0}LOCKS ROWLOCK WHERE LOCK_NAME = ? FOR UPDATE
    </rhq.test.quartz.selectWithLockSQL>
    <rhq.test.quartz.lockHandlerClass>org.quartz.impl.jdbcjobstore.StdRowLockSemaphore</rhq.test.quartz.lockHandlerClass>

    <!--
       defaults for datasource used by the dev container build (see dev docs on the 'dev' profile) -
       these may be overridden in ~/.m2/settings.xml
    -->
    <rhq.dev.ds.db-name>rhqdev</rhq.dev.ds.db-name>
    <rhq.dev.ds.connection-url>jdbc:postgresql://127.0.0.1:5432/${rhq.dev.ds.db-name}</rhq.dev.ds.connection-url>
    <rhq.dev.ds.driver-class>org.postgresql.Driver</rhq.dev.ds.driver-class>
    <rhq.dev.ds.xa-datasource-class>org.postgresql.xa.PGXADataSource</rhq.dev.ds.xa-datasource-class>
    <rhq.dev.ds.user-name>rhqadmin</rhq.dev.ds.user-name>
    <rhq.dev.ds.password>rhqadmin</rhq.dev.ds.password>
    <rhq.dev.ds.password.encrypted>1eeb2f255e832171df8592078de921bc</rhq.dev.ds.password.encrypted>
    <rhq.dev.ds.type-mapping>PostgreSQL</rhq.dev.ds.type-mapping>
    <rhq.dev.ds.server-name>127.0.0.1</rhq.dev.ds.server-name>
    <rhq.dev.ds.port>5432</rhq.dev.ds.port>
    <rhq.dev.ds.hibernate-dialect>org.hibernate.dialect.PostgreSQLDialect</rhq.dev.ds.hibernate-dialect>
    <rhq.dev.quartz.driverDelegateClass>org.quartz.impl.jdbcjobstore.PostgreSQLDelegate</rhq.dev.quartz.driverDelegateClass>
    <rhq.dev.quartz.selectWithLockSQL>
       SELECT * FROM {0}LOCKS ROWLOCK WHERE LOCK_NAME = ? FOR UPDATE
    </rhq.dev.quartz.selectWithLockSQL>
    <rhq.dev.quartz.lockHandlerClass>org.quartz.impl.jdbcjobstore.StdRowLockSemaphore</rhq.dev.quartz.lockHandlerClass>

     <!-- default port numbers for RHQ server -->
    <rhq.server.http.port>7080</rhq.server.http.port>
    <rhq.server.https.port>7443</rhq.server.https.port>

    <rhq.server.enable.ws>false</rhq.server.enable.ws>

    <!--
      When this property is set to true will compare its endpoint address
      that is stored in the database against the actual host name/IP address
      returned by the host system. If they differ, the address stored in the
      database will be updated to the value found on the host machine. While
      host name changes are/should be uncommon in a typical deployment, they
      are more common in a cloud deployment such as EC2. And in a cloud
      deployment like EC2, we want to turn this behavior on to ensure that
      the server endpoint accurately reflects the current machine address.
    -->
    <rhq.sync.endpoint-address>false</rhq.sync.endpoint-address>

    <!-- NOTE: The below line is a workaround for a Maven bug, where it does not expand settings.* properties
               used in the distributionManagement section of the POM. -->
    <localRepository>${user.home}/.m2/repository</localRepository>

    <project.json.version>20080701</project.json.version>

    <!-- Java API checking -->
    <animal.sniffer.java.signature.groupId>org.codehaus.mojo.signature</animal.sniffer.java.signature.groupId>
    <animal.sniffer.java.signature.artifactId>java16</animal.sniffer.java.signature.artifactId>
    <animal.sniffer.java.signature.version>1.0</animal.sniffer.java.signature.version>
    <!-- API checks -->
    <!-- a default value for the child modules indicating that the module is not
         part of our public API and is therefore not API-checked. -->
    <rhq.internal>true</rhq.internal>

    <jacoco.version>0.6.0.201210061924</jacoco.version>
    <jacoco-arquillian-extension.version>1.0.0.Alpha5</jacoco-arquillian-extension.version>

    <!-- Add RHQ version properties to support update versioning -->
    <!-- spinder: 2-28-14. The following rhq.pom.version value needs to be explicitly set or causes numerous 
         recursive maven version issues. See http://stackoverflow.com/questions/3684664/maven-property-substitution-not-done-for-project-version-tag-of-pom for more. http://jira.codehaus.org/browse/MNG-624  -->
    <rhq.pom.version>${project.version}</rhq.pom.version>
    <rhq-code-coverage.version>${rhq.pom.version}</rhq-code-coverage.version>
    <rhq-cli-tests.version>${rhq.pom.version}</rhq-cli-tests.version>
    <rhq-ant-bundle-common.version>${rhq.pom.version}</rhq-ant-bundle-common.version>
    <rhq-cassandra-auth.version>${rhq.pom.version}</rhq-cassandra-auth.version>
    <rhq-cassandra-ccm-arquillian.version>${rhq.pom.version}</rhq-cassandra-ccm-arquillian.version>
    <rhq-cassandra-ccm-core.version>${rhq.pom.version}</rhq-cassandra-ccm-core.version>
    <rhq-cassandra-ccm-maven-plugin.version>${rhq.pom.version}</rhq-cassandra-ccm-maven-plugin.version>
    <rhq-cassandra-ccm-testng.version>${rhq.pom.version}</rhq-cassandra-ccm-testng.version>
    <rhq-cassandra-ccm.version>${rhq.pom.version}</rhq-cassandra-ccm.version>
    <rhq-cassandra-installer.version>${rhq.pom.version}</rhq-cassandra-installer.version>
    <rhq-cassandra-schema.version>${rhq.pom.version}</rhq-cassandra-schema.version>
    <rhq-cassandra-util.version>${rhq.pom.version}</rhq-cassandra-util.version>
    <rhq-common-drift.version>${rhq.pom.version}</rhq-common-drift.version>
    <rhq-filetemplate-bundle-common.version>${rhq.pom.version}</rhq-filetemplate-bundle-common.version>
    <rhq-jboss-as-dmr-client.version>${rhq.pom.version}</rhq-jboss-as-dmr-client.version>
    <rhq-jboss-as-common.version>${rhq.pom.version}</rhq-jboss-as-common.version>
    <rhq-common-parent.version>${rhq.pom.version}</rhq-common-parent.version>
    <rhq-core-client-api.version>${rhq.pom.version}</rhq-core-client-api.version>
    <rhq-core-comm-api.version>${rhq.pom.version}</rhq-core-comm-api.version>
    <rhq-core-dbutils.version>${rhq.pom.version}</rhq-core-dbutils.version>
    <rhq-core-domain.version>${rhq.pom.version}</rhq-core-domain.version>
    <rhq-core-gui.version>${rhq.pom.version}</rhq-core-gui.version>
    <rhq-core-native-system.version>${rhq.pom.version}</rhq-core-native-system.version>
    <rhq-core-plugin-api.version>${rhq.pom.version}</rhq-core-plugin-api.version>
    <rhq-core-plugin-container.version>${rhq.pom.version}</rhq-core-plugin-container.version>
    <rhq-plugin-validator.version>${rhq.pom.version}</rhq-plugin-validator.version>
    <rhq-core-plugindoc.version>${rhq.pom.version}</rhq-core-plugindoc.version>
    <rhq-core-parent.version>${rhq.pom.version}</rhq-core-parent.version>
    <rhq-core-util.version>${rhq.pom.version}</rhq-core-util.version>
    <rhq-enterprise-agent.version>${rhq.pom.version}</rhq-enterprise-agent.version>
    <rhq-enterprise-agentupdate.version>${rhq.pom.version}</rhq-enterprise-agentupdate.version>
    <rhq-script-bindings.version>${rhq.pom.version}</rhq-script-bindings.version>
    <rhq-enterprise-comm.version>${rhq.pom.version}</rhq-enterprise-comm.version>
    <rhq-agentupdate-war.version>${rhq.pom.version}</rhq-agentupdate-war.version>
    <rhq-content_http.version>${rhq.pom.version}</rhq-content_http.version>
    <rhq-coregui.version>${rhq.pom.version}</rhq-coregui.version>
    <rhq-downloads-war.version>${rhq.pom.version}</rhq-downloads-war.version>
    <rhq-enterprise-gui-parent.version>${rhq.pom.version}</rhq-enterprise-gui-parent.version>
    <rhq-portal.version>${rhq.pom.version}</rhq-portal.version>
    <rhq-remote-client-war.version>${rhq.pom.version}</rhq-remote-client-war.version>
    <rhq-remoting-war.version>${rhq.pom.version}</rhq-remoting-war.version>
    <rhq-rest-examples.version>${rhq.pom.version}</rhq-rest-examples.version>
    <rhq-rest.version>${rhq.pom.version}</rhq-rest.version>
    <rhq-enterprise-parent.version>${rhq.pom.version}</rhq-enterprise-parent.version>
    <rhq-remoting-cli.version>${rhq.pom.version}</rhq-remoting-cli.version>
    <rhq-remoting-client-api.version>${rhq.pom.version}</rhq-remoting-client-api.version>
    <remote-client-deps.version>${rhq.pom.version}</remote-client-deps.version>
    <rhq-remoting-parent.version>${rhq.pom.version}</rhq-remoting-parent.version>
    <rhq-scripting-api.version>${rhq.pom.version}</rhq-scripting-api.version>
    <rhq-scripting-javascript.version>${rhq.pom.version}</rhq-scripting-javascript.version>
    <rhq-scripting-parent.version>${rhq.pom.version}</rhq-scripting-parent.version>
    <rhq-scripting-python.version>${rhq.pom.version}</rhq-scripting-python.version>
    <rhq-enterprise-server-appserver.version>${rhq.pom.version}</rhq-enterprise-server-appserver.version>
    <rhq-server-client-api.version>${rhq.pom.version}</rhq-server-client-api.version>
    <rhq-data-migration.version>${rhq.pom.version}</rhq-data-migration.version>
    <rhq-enterprise-server-ear.version>${rhq.pom.version}</rhq-enterprise-server-ear.version>
    <rhq-installer-util.version>${rhq.pom.version}</rhq-installer-util.version>
    <rhq-server-itests-2.version>${rhq.pom.version}</rhq-server-itests-2.version>
    <rhq-enterprise-server.version>${rhq.pom.version}</rhq-enterprise-server.version>
    <alert-cli.version>${rhq.pom.version}</alert-cli.version>
    <alert-email.version>${rhq.pom.version}</alert-email.version>
    <alert-irc.version>${rhq.pom.version}</alert-irc.version>
    <alert-log4j.version>${rhq.pom.version}</alert-log4j.version>
    <alert-microblog.version>${rhq.pom.version}</alert-microblog.version>
    <alert-mobicents.version>${rhq.pom.version}</alert-mobicents.version>
    <alert-operations.version>${rhq.pom.version}</alert-operations.version>
    <alert-roles.version>${rhq.pom.version}</alert-roles.version>
    <alert-snmp.version>${rhq.pom.version}</alert-snmp.version>
    <alert-subject.version>${rhq.pom.version}</alert-subject.version>
    <serverplugin-alertdef-rhq.version>${rhq.pom.version}</serverplugin-alertdef-rhq.version>
    <rhq-serverplugin-ant-bundle.version>${rhq.pom.version}</rhq-serverplugin-ant-bundle.version>
    <rhq-serverplugin-cobbler.version>${rhq.pom.version}</rhq-serverplugin-cobbler.version>
    <rhq-serverplugin-disk.version>${rhq.pom.version}</rhq-serverplugin-disk.version>
    <rhq-serverplugin-drift.version>${rhq.pom.version}</rhq-serverplugin-drift.version>
    <rhq-serverplugin-filetemplate-bundle.version>${rhq.pom.version}</rhq-serverplugin-filetemplate-bundle.version>
    <rhq-serverplugin-jboss-software.version>${rhq.pom.version}</rhq-serverplugin-jboss-software.version>
    <packagetype-cli.version>${rhq.pom.version}</packagetype-cli.version>
    <rhq-enterprise-server-plugins-parent.version>${rhq.pom.version}</rhq-enterprise-server-plugins-parent.version>
    <rhq-serverplugin-url.version>${rhq.pom.version}</rhq-serverplugin-url.version>
    <validate-all-serverplugins.version>${rhq.pom.version}</validate-all-serverplugins.version>
    <rhq-serverplugin-yum.version>${rhq.pom.version}</rhq-serverplugin-yum.version>
    <rhq-enterprise-server-parent.version>${rhq.pom.version}</rhq-enterprise-server-parent.version>
    <safe-invoker.version>${rhq.pom.version}</safe-invoker.version>
    <rhq-server-control.version>${rhq.pom.version}</rhq-server-control.version>
    <rhq-server-metrics.version>${rhq.pom.version}</rhq-server-metrics.version>
    <server-startup.version>${rhq.pom.version}</server-startup.version>
    <rhq-enterprise-server-xml-schemas.version>${rhq.pom.version}</rhq-enterprise-server-xml-schemas.version>
    <bundleGen.version>${rhq.pom.version}</bundleGen.version>
    <jeeGen.version>${rhq.pom.version}</jeeGen.version>
    <rhq-metrics-simulator.version>${rhq.pom.version}</rhq-metrics-simulator.version>
    <perftest-support.version>${rhq.pom.version}</perftest-support.version>
    <rhq-helpers.version>${rhq.pom.version}</rhq-helpers.version>
    <rest-docs-generator.version>${rhq.pom.version}</rest-docs-generator.version>
    <rhq-rtfilter-subsystem.version>${rhq.pom.version}</rhq-rtfilter-subsystem.version>
    <rhq-rtfilter-wfly-10-subsystem.version>${rhq.pom.version}</rhq-rtfilter-wfly-10-subsystem.version>
    <rhq-rtfilter-wfly-10-dist.version>${rhq.pom.version}</rhq-rtfilter-wfly-10-dist.version>
    <rhq-aliases-plugin.version>${rhq.pom.version}</rhq-aliases-plugin.version>
    <rhq-ant-bundle-plugin.version>${rhq.pom.version}</rhq-ant-bundle-plugin.version>
    <rhq-apache-plugin.version>${rhq.pom.version}</rhq-apache-plugin.version>
    <rhq-augeas-plugin.version>${rhq.pom.version}</rhq-augeas-plugin.version>
    <rhq-byteman-plugin.version>${rhq.pom.version}</rhq-byteman-plugin.version>
    <rhq-cassandra-plugin.version>${rhq.pom.version}</rhq-cassandra-plugin.version>
    <rhq-cobbler-plugin.version>${rhq.pom.version}</rhq-cobbler-plugin.version>
    <rhq-cron-plugin.version>${rhq.pom.version}</rhq-cron-plugin.version>
    <rhq-database-plugin.version>${rhq.pom.version}</rhq-database-plugin.version>
    <rhq-filetemplate-bundle-plugin.version>${rhq.pom.version}</rhq-filetemplate-bundle-plugin.version>
    <rhq-grub-plugin.version>${rhq.pom.version}</rhq-grub-plugin.version>
    <hadoop-plugin.version>${rhq.pom.version}</hadoop-plugin.version>
    <jopr-hibernate-plugin.version>${rhq.pom.version}</jopr-hibernate-plugin.version>
    <rhq-hosts-plugin.version>${rhq.pom.version}</rhq-hosts-plugin.version>
    <rhq-hudson-plugin.version>${rhq.pom.version}</rhq-hudson-plugin.version>
    <rhq-iis-plugin.version>${rhq.pom.version}</rhq-iis-plugin.version>
    <rhq-irc-plugin.version>${rhq.pom.version}</rhq-irc-plugin.version>
    <jopr-jboss-as-5-plugin.version>${rhq.pom.version}</jopr-jboss-as-5-plugin.version>
    <rhq-jboss-as-7-plugin.version>${rhq.pom.version}</rhq-jboss-as-7-plugin.version>
    <rhq-wfly-10-plugin.version>${rhq.pom.version}</rhq-wfly-10-plugin.version>
    <jopr-jboss-as-plugin.version>${rhq.pom.version}</jopr-jboss-as-plugin.version>
    <jopr-jboss-cache-v3-plugin.version>${rhq.pom.version}</jopr-jboss-cache-v3-plugin.version>
    <jopr-jboss-cache-plugin.version>${rhq.pom.version}</jopr-jboss-cache-plugin.version>
    <rhq-jmx-plugin.version>${rhq.pom.version}</rhq-jmx-plugin.version>
    <rhq-kickstart-plugin.version>${rhq.pom.version}</rhq-kickstart-plugin.version>
    <modcluster-plugin.version>${rhq.pom.version}</modcluster-plugin.version>
    <rhq-mysql-plugin.version>${rhq.pom.version}</rhq-mysql-plugin.version>
    <rhq-netservices-plugin.version>${rhq.pom.version}</rhq-netservices-plugin.version>
    <rhq-no-op-plugin.version>${rhq.pom.version}</rhq-no-op-plugin.version>
    <rhq-oracle-plugin.version>${rhq.pom.version}</rhq-oracle-plugin.version>
    <pattern-plugin.version>${rhq.pom.version}</pattern-plugin.version>
    <rhq-perftest-plugin.version>${rhq.pom.version}</rhq-perftest-plugin.version>
    <rhq-platform-plugin.version>${rhq.pom.version}</rhq-platform-plugin.version>
    <rhq-plugins-parent.version>${rhq.pom.version}</rhq-plugins-parent.version>
    <rhq-postfix-plugin.version>${rhq.pom.version}</rhq-postfix-plugin.version>
    <rhq-postgres-plugin.version>${rhq.pom.version}</rhq-postgres-plugin.version>
    <rhq-agent-plugin.version>${rhq.pom.version}</rhq-agent-plugin.version>
    <rhq-rhqserver-plugin.version>${rhq.pom.version}</rhq-rhqserver-plugin.version>
    <rhq-rhqstorage-plugin.version>${rhq.pom.version}</rhq-rhqstorage-plugin.version>
    <rhq-samba-plugin.version>${rhq.pom.version}</rhq-samba-plugin.version>
    <rhq-script-plugin.version>${rhq.pom.version}</rhq-script-plugin.version>
    <rhq-script2-plugin.version>${rhq.pom.version}</rhq-script2-plugin.version>
    <rhq-snmptrapd-plugin.version>${rhq.pom.version}</rhq-snmptrapd-plugin.version>
    <rhq-sonarqube-plugin.version>${rhq.pom.version}</rhq-sonarqube-plugin.version>
    <rhq-sshd-plugin.version>${rhq.pom.version}</rhq-sshd-plugin.version>
    <rhq-sudoers-plugin.version>${rhq.pom.version}</rhq-sudoers-plugin.version>
    <jopr-tomcat-plugin.version>${rhq.pom.version}</jopr-tomcat-plugin.version>
    <rhq-twitter-plugin.version>${rhq.pom.version}</rhq-twitter-plugin.version>
    <validate-all-plugins.version>${rhq.pom.version}</validate-all-plugins.version>
    <rhq-virt-plugin.version>${rhq.pom.version}</rhq-virt-plugin.version>
    <test-utils.version>${rhq.pom.version}</test-utils.version>
    <rhq-modules-parent.version>${rhq.pom.version}</rhq-modules-parent.version>
    <rhq-arquillian-agent-plugin-container-embedded.version>${rhq.pom.version}</rhq-arquillian-agent-plugin-container-embedded.version>
    <rhq-shrinkwrap-agent-plugin-archive.version>${rhq.pom.version}</rhq-shrinkwrap-agent-plugin-archive.version>
    <rhq-arquillian-container-test-plugin.version>${rhq.pom.version}</rhq-arquillian-container-test-plugin.version>
  </properties>


  <dependencyManagement>

    <dependencies>

      <!-- Start: JBoss AS Dependencies
           The dependencies below are declared together as the versions of each are dependent on the
           overall JBoss AS Server version.  Meaning, the AS provides these libs. When the Server
           version is changed the versions of each of these should be validated and updated as needed. -->

      <dependency>
        <groupId>org.jboss.as</groupId>
        <artifactId>jboss-as-dist</artifactId>
        <version>${jboss.version}</version>
        <type>zip</type>
      </dependency>

      <dependency>
        <groupId>jboss</groupId>
        <artifactId>jboss-cache</artifactId>
        <version>${jboss-cache.version}</version>
      </dependency>

      <dependency>
        <groupId>jboss</groupId>
        <artifactId>jboss-annotations-ejb3</artifactId>
        <version>${jboss-annotations.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss</groupId>
        <artifactId>jboss-common-core</artifactId>
        <version>${jboss-common-core.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.spec.javax.annotation</groupId>
        <artifactId>jboss-annotations-api_1.1_spec</artifactId>
        <version>${javax.annotation.api.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.spec.javax.ejb</groupId>
        <artifactId>jboss-ejb-api_3.1_spec</artifactId>
        <version>${javax.ejb.api.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.spec.javax.jms</groupId>
        <artifactId>jboss-jms-api_1.1_spec</artifactId>
        <version>${javax.jms.api.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.spec.javax.servlet</groupId>
        <artifactId>jboss-servlet-api_3.0_spec</artifactId>
        <version>${javax.servlet.api.version}</version>
      </dependency>

      <dependency>
        <groupId>org.javassist</groupId>
        <artifactId>javassist</artifactId>
        <version>${javassist.version}</version>
      </dependency>

      <dependency>
        <groupId>jboss</groupId>
        <artifactId>jboss-jmx</artifactId>
        <version>${jboss-jmx.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.remoting</groupId>
        <artifactId>jboss-remoting</artifactId>
        <version>${jboss-remoting.version}</version>
      </dependency>

      <dependency>
        <groupId>jboss</groupId>
        <artifactId>jboss-serialization</artifactId>
        <version>${jboss-serialization.version}</version>
      </dependency>

      <dependency>
        <groupId>jboss</groupId>
        <artifactId>jbosssx</artifactId>
        <version>${jbosssx.version}</version>
      </dependency>

      <dependency>
        <groupId>jboss</groupId>
        <artifactId>jboss-system</artifactId>
        <version>${jboss-system.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.jbossts</groupId>
        <artifactId>jbossjts</artifactId>
        <version>${jboss-jts.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.transaction</groupId>
        <artifactId>jboss-jta</artifactId>
        <version>${jboss-jts.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.modules</groupId>
        <artifactId>jboss-modules</artifactId>
        <version>${jboss-modules.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss</groupId>
        <artifactId>jboss-dmr</artifactId>
        <version>${jboss-dmr.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.as</groupId>
        <artifactId>jboss-as-controller</artifactId>
        <version>${jboss.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.as</groupId>
        <artifactId>jboss-as-server</artifactId>
        <version>${jboss.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.as</groupId>
        <artifactId>jboss-as-ee</artifactId>
        <version>${jboss.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.as</groupId>
        <artifactId>jboss-as-ejb3</artifactId>
        <version>${jboss.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.as</groupId>
        <artifactId>jboss-as-jdr</artifactId>
        <version>${jboss.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.as</groupId>
        <artifactId>jboss-as-naming</artifactId>
        <version>${jboss.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.msc</groupId>
        <artifactId>jboss-msc</artifactId>
        <version>${jboss-msc.version}</version>
      </dependency>

      <dependency>
         <groupId>jboss</groupId>
         <artifactId>jbpm</artifactId>
         <version>${jbpm.version}</version>
      </dependency>

      <!-- see BZ-820629 and CVE-2009-2625 for why this is needed -->
      <dependency>
        <groupId>xerces</groupId>
        <artifactId>xercesImpl</artifactId>
        <version>${xercesImpl.version}</version>
      </dependency>

      <!-- xnio versions needed for Arquillian (and really its remoting3 under the covers) to connect to app server -->
      <dependency>
        <groupId>org.jboss.xnio</groupId>
        <artifactId>xnio-api</artifactId>
        <version>${xnio.version}</version>
      </dependency>
      <dependency>
        <groupId>org.jboss.xnio</groupId>
        <artifactId>xnio-nio</artifactId>
        <version>${xnio.version}</version>
      </dependency>

      <!-- End: JBoss AS Dependencies -->

      <dependency>
        <groupId>commons-logging</groupId>
        <artifactId>commons-logging</artifactId>
        <version>${commons-logging.version}</version>
      </dependency>

      <dependency>
         <groupId>commons-lang</groupId>
         <artifactId>commons-lang</artifactId>
         <version>${commons-lang.version}</version>
      </dependency>

      <dependency>
         <groupId>commons-io</groupId>
         <artifactId>commons-io</artifactId>
         <version>${commons-io.version}</version>
      </dependency>

      <dependency>
         <groupId>commons-codec</groupId>
         <artifactId>commons-codec</artifactId>
         <version>${commons-codec.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-validator</groupId>
        <artifactId>commons-validator</artifactId>
        <version>${commons-validator.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-collections</groupId>
        <artifactId>commons-collections</artifactId>
        <version>${commons-collections.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-configuration</groupId>
        <artifactId>commons-configuration</artifactId>
        <version>${commons-configuration.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-httpclient</groupId>
        <artifactId>commons-httpclient</artifactId>
        <version>${commons-httpclient.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-beanutils</groupId>
        <artifactId>commons-beanutils</artifactId>
        <version>${commons-beanutils.version}</version>
      </dependency>

      <!-- Apache HC HTTP Client 4+ -->

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpcore</artifactId>
        <version>${apache.httpcomponents.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>${apache.httpcomponents.version}</version>
        <exclusions>
          <exclusion>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
          </exclusion>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpmime</artifactId>
        <version>${apache.httpcomponents.version}</version>
      </dependency>

      <!-- GNU GetOpt (any modules that need to do command-line argument parsing should use this) -->
      <dependency>
        <groupId>gnu.getopt</groupId>
        <artifactId>java-getopt</artifactId>
        <version>${getopt.version}</version>
      </dependency>

      <dependency>
        <groupId>i18nlog</groupId>
        <artifactId>i18nlog</artifactId>
        <version>${i18nlog.version}</version>
      </dependency>

      <dependency>
         <groupId>org.jboss.spec.javax.xml.bind</groupId>
         <artifactId>jboss-jaxb-api_2.2_spec</artifactId>
         <version>${jaxb-api.version}</version>
      </dependency>

      <dependency>
         <groupId>javax.faces</groupId>
         <artifactId>jsf-api</artifactId>
         <version>${jsf-api.version}</version>
         <scope>provided</scope> <!-- by JBossAS -->
      </dependency>

      <dependency>
         <groupId>javax.faces</groupId>
         <artifactId>jsf-impl</artifactId>
         <version>${jsf-impl.version}</version>
         <scope>provided</scope> <!-- by JBossAS -->
      </dependency>

      <dependency>
         <groupId>com.sun.xml.bind</groupId>
         <artifactId>jaxb-impl</artifactId>
         <version>${jaxb-impl.version}</version>
      </dependency>

      <dependency>
        <groupId>mc4j</groupId>
        <artifactId>org-mc4j-ems</artifactId>
        <version>${ems.version}</version>
      </dependency>

      <dependency>
         <groupId>org.hibernate.common</groupId>
         <artifactId>hibernate-commons-annotations</artifactId>
         <version>${hibernate-annotations.version}</version>
      </dependency>

      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-core</artifactId>
        <version>${hibernate.version}</version>
      </dependency>

      <dependency>
         <groupId>org.hibernate</groupId>
         <artifactId>hibernate-entitymanager</artifactId>
         <version>${hibernate.version}</version>
      </dependency>

      <dependency>
         <groupId>org.hibernate.javax.persistence</groupId>
         <artifactId>hibernate-jpa-2.0-api</artifactId>
         <version>${hibernate-jpa-2.0-api.version}</version>
      </dependency>

      <dependency>
         <groupId>org.antlr</groupId>
         <artifactId>antlr-complete</artifactId>
         <version>${antlr.version}</version>
      </dependency>

      <dependency>
         <groupId>org.infinispan</groupId>
         <artifactId>infinispan-core</artifactId>
         <version>${infinispan.version}</version>
      </dependency>

      <dependency>
        <groupId>net.sf.opencsv</groupId>
        <artifactId>opencsv</artifactId>
        <version>${opencsv.version}</version>
      </dependency>

      <dependency>
        <groupId>org.hyperic</groupId>
        <artifactId>sigar</artifactId>
        <version>${sigar.version}</version>
      </dependency>

      <dependency>
        <groupId>org.hyperic</groupId>
        <artifactId>sigar-dist</artifactId>
        <version>${sigar.version}</version>
        <type>zip</type>
      </dependency>

      <dependency>
        <groupId>org.richfaces.framework</groupId>
        <artifactId>richfaces-api</artifactId>
        <version>${richfaces.version}</version>
      </dependency>

      <dependency>
        <groupId>org.richfaces.framework</groupId>
        <artifactId>richfaces-impl</artifactId>
        <version>${richfaces.version}</version>
      </dependency>

      <dependency>
        <groupId>org.richfaces.ui</groupId>
        <artifactId>richfaces-ui</artifactId>
        <version>${richfaces.version}</version>
      </dependency>

      <dependency>
        <groupId>oswego-concurrent</groupId>
        <artifactId>concurrent</artifactId>
        <version>${concurrent.version}</version>
      </dependency>

      <dependency>
        <groupId>org.opensymphony.quartz</groupId>
        <artifactId>quartz</artifactId>
        <version>${quartz.version}</version>
      </dependency>

      <dependency>
        <groupId>org.opensymphony.quartz</groupId>
        <artifactId>quartz-oracle</artifactId>
        <version>${quartz.version}</version>
      </dependency>

      <!-- Postgres JDBC driver -->
      <dependency>
        <groupId>postgresql</groupId>
        <artifactId>postgresql</artifactId>
        <version>${postgresql.version}</version>
      </dependency>

      <dependency>
        <groupId>com.h2database</groupId>
        <artifactId>h2</artifactId>
        <version>${h2.version}</version>
      </dependency>

      <dependency>
        <groupId>net.sourceforge.jtds</groupId>
        <artifactId>jtds</artifactId>
        <version>${jtds.version}</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.groovy</groupId>
        <artifactId>groovy-all</artifactId>
        <version>1.7.5</version>
      </dependency>

      <dependency>
         <groupId>net.java.dev.jna</groupId>
         <artifactId>jna</artifactId>
         <version>${jna.version}</version>
      </dependency>

      <dependency>
         <groupId>ant-contrib</groupId>
         <artifactId>ant-contrib</artifactId>
         <version>${ant.contrib.version}</version>
         <scope>provided</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.resteasy</groupId>
         <artifactId>resteasy-jaxrs-all</artifactId>
         <version>${resteasy.version}</version>
      </dependency>
      <dependency>
         <groupId>org.jboss.resteasy</groupId>
         <artifactId>resteasy-jettison-provider</artifactId>
         <version>${resteasy.version}</version>
      </dependency>

      <dependency>
         <groupId>org.jboss.spec.javax.interceptor</groupId>
         <artifactId>jboss-interceptors-api_1.1_spec</artifactId>
         <version>${jboss-interceptors-api.version}</version>
      </dependency>

      <dependency>
         <groupId>org.jboss.spec.javax.transaction</groupId>
         <artifactId>jboss-transaction-api_1.1_spec</artifactId>
         <version>${jboss-transaction-api.version}</version>
      </dependency>

      <dependency>
         <groupId>org.jboss.ejb3</groupId>
         <artifactId>jboss-ejb3-ext-api</artifactId>
         <version>${jboss-ejb3-ext-api.version}</version>
      </dependency>

      <dependency>
         <groupId>org.jboss</groupId>
         <artifactId>staxmapper</artifactId>
         <version>${jboss-staxmapper.version}</version>
      </dependency>

      <dependency>
         <groupId>org.picketbox</groupId>
         <artifactId>picketbox</artifactId>
         <version>${picketbox.version}</version>
      </dependency>

      <dependency>
         <groupId>org.jboss.spec</groupId>
         <artifactId>jboss-javaee-6.0</artifactId>
         <version>${jboss.javaee6.spec.version}</version>
         <type>pom</type>
      </dependency>

      <!-- We want the shrinkwrap dependency resolver to be newer than that included in the Arquillian BOM.
           This must go *BEFORE* the Arquillian BOM. -->
      <dependency>
          <groupId>org.jboss.shrinkwrap.resolver</groupId>
          <artifactId>shrinkwrap-resolver-bom</artifactId>
          <version>${shrinkwrap-resolver.version}</version>
          <scope>import</scope>
          <type>pom</type>
      </dependency>
      <dependency>
          <groupId>org.jboss.shrinkwrap.resolver</groupId>
          <artifactId>shrinkwrap-resolver-depchain</artifactId>
          <version>${shrinkwrap-resolver.version}</version>
      </dependency>
      <!-- This will pull in the compatible versions of shrinkwrap deps too. Note that we want to use an explicit
           version for the shrinkwrap resolver, which revs more often and has bugfixes. -->
      <dependency>
         <groupId>org.jboss.arquillian</groupId>
         <artifactId>arquillian-bom</artifactId>
         <version>${arquillian.version}</version>
         <type>pom</type>
         <scope>import</scope>
      </dependency>

      <dependency>
         <groupId>org.jboss.arquillian.testng</groupId>
         <artifactId>arquillian-testng-container</artifactId>
         <version>${arquillian.version}</version>
      </dependency>

      <dependency>
         <groupId>org.jboss.arquillian.extension</groupId>
         <artifactId>arquillian-jacoco</artifactId>
         <version>${jacoco-arquillian-extension.version}</version>
      </dependency>

      <dependency>
         <groupId>org.jboss.as</groupId>
         <artifactId>jboss-as-arquillian-container-managed</artifactId>
         <version>${arquillian.jboss.container.version}</version>
      </dependency>

      <dependency>
         <groupId>org.jboss.as</groupId>
         <artifactId>jboss-as-arquillian-container-remote</artifactId>
         <version>${arquillian.jboss.container.version}</version>
      </dependency>

      <dependency>
         <groupId>org.jacoco</groupId>
         <artifactId>org.jacoco.core</artifactId>
         <version>${jacoco.version}</version>
      </dependency>

      <dependency>
         <groupId>org.liquibase</groupId>
         <artifactId>liquibase-core</artifactId>
         <version>${liquibase-core.version}</version>
      </dependency>

      <dependency>
         <groupId>org.jetbrains</groupId>
         <artifactId>annotations</artifactId>
         <version>${annotations.version}</version>
      </dependency>

      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-core</artifactId>
         <version>${mockito-core.version}</version>
      </dependency>

      <dependency>
         <groupId>org.powermock</groupId>
         <artifactId>powermock-module-testng</artifactId>
         <version>${powermock.version}</version>
      </dependency>

      <dependency>
         <groupId>org.powermock</groupId>
         <artifactId>powermock-api-mockito</artifactId>
         <version>${powermock.version}</version>
      </dependency>

      <dependency>
         <groupId>junit</groupId>
         <artifactId>junit</artifactId>
         <version>${junit.version}</version>
      </dependency>

      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>servlet-api</artifactId>
         <version>${servlet-api.version}</version>
      </dependency>

      <dependency>
        <groupId>org.testng</groupId>
        <artifactId>testng</artifactId>
        <version>${testng.version}</version>
      </dependency>

      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jacoco</groupId>
        <artifactId>org.jacoco.ant</artifactId>
        <version>${jacoco.version}</version>
      </dependency>

      <dependency>
        <groupId>commons-jxpath</groupId>
        <artifactId>commons-jxpath</artifactId>
        <version>1.3</version>
      </dependency>
      <dependency>
        <groupId>javax.persistence</groupId>
        <artifactId>persistence-api</artifactId>
        <version>1.0</version>
        <scope>provided</scope>
      </dependency>

      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jsp-api</artifactId>
        <version>2.0</version>
      </dependency>

      <dependency>
        <groupId>commons-fileupload</groupId>
        <artifactId>commons-fileupload</artifactId>
        <version>1.3.1</version>
      </dependency>

      <dependency>
        <groupId>jline</groupId>
        <artifactId>jline</artifactId>
        <version>${jline.version}</version>
      </dependency>

      <dependency>
        <groupId>jboss.jboss-embeddable-ejb3</groupId>
        <artifactId>jboss-ejb3-all</artifactId>
        <version>1.0.0.Alpha9</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.logging</groupId>
        <artifactId>jboss-logging</artifactId>
        <version>${jboss-logging.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.ant</groupId>
        <artifactId>ant</artifactId>
        <version>1.8.0</version>
      </dependency>

      <dependency>
        <groupId>org.apache.ant</groupId>
        <artifactId>ant-launcher</artifactId>
        <version>1.8.0</version>
      </dependency>

      <dependency>
        <groupId>org.apache.ant</groupId>
        <artifactId>ant-nodeps</artifactId>
        <version>1.8.0</version>
      </dependency>

      <dependency>
        <groupId>dom4j</groupId>
        <artifactId>dom4j</artifactId>
        <version>1.6.1</version>
      </dependency>

      <dependency>
         <groupId>commons-dbcp</groupId>
         <artifactId>commons-dbcp</artifactId>
         <version>1.2.2</version>
      </dependency>

      <dependency>
         <groupId>commons-el</groupId>
         <artifactId>commons-el</artifactId>
         <version>1.0</version>
      </dependency>

      <dependency>
         <groupId>javax.el</groupId>
         <artifactId>el-api</artifactId>
         <version>${el.version}</version>
      </dependency>

      <dependency>
         <groupId>javax.servlet</groupId>
         <artifactId>javax.servlet-api</artifactId>
         <version>3.0.1</version>
      </dependency>

       <dependency>
         <groupId>org.apache.maven</groupId>
         <artifactId>maven-plugin-api</artifactId>
         <version>2.0.8</version>
      </dependency>

      <dependency>
         <groupId>org.apache.maven</groupId>
         <artifactId>maven-project</artifactId>
         <version>2.0.8</version>
      </dependency>

      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>jsr311-api</artifactId>
        <version>1.1.1</version>
      </dependency>

      <dependency>
        <groupId>javax.ejb</groupId>
        <artifactId>ejb-api</artifactId>
        <version>3.0</version>
      </dependency>

	  <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-core-asl</artifactId>
        <version>${jackson-core-asl.version}</version>
      </dependency>

      <dependency>
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-mapper-asl</artifactId>
        <version>${jackson-mapper-asl.version}</version>
      </dependency>

      <dependency>
        <groupId>org.freemarker</groupId>
        <artifactId>freemarker</artifactId>
        <version>${freemarker.version}</version>
      </dependency>

      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib-nodep</artifactId>
        <version>2.1_3</version>
      </dependency>

      <dependency>
        <groupId>jdom</groupId>
        <artifactId>jdom</artifactId>
        <version>1.0</version>
      </dependency>

	  <dependency>
         <groupId>org.mozilla</groupId>
         <artifactId>rhino</artifactId>
         <version>1.7R4</version>
      </dependency>

      <dependency>
        <groupId>org.python</groupId>
        <artifactId>jython-standalone</artifactId>
        <version>2.5.2</version>
      </dependency>

      <dependency>
        <groupId>org.snmp4j</groupId>
        <artifactId>snmp4j</artifactId>
        <version>1.8.2</version>
      </dependency>

      <dependency>
        <groupId>rss4j</groupId>
        <artifactId>rss4j</artifactId>
        <version>0.92-on.2</version>
      </dependency>

      <dependency>
         <groupId>org.yaml</groupId>
         <artifactId>snakeyaml</artifactId>
         <version>${cassandra.snakeyaml.version}</version>
      </dependency>

     <dependency>
        <groupId>net.sf.trove4j</groupId>
        <artifactId>trove4j</artifactId>
        <version>3.0.3</version>
     </dependency>

     <!-- Try to use EAP versions when possible -->
     <dependency>
       <groupId>org.jgroups</groupId>
       <artifactId>jgroups</artifactId>
       <version>${jgroups.version}</version>
       <scope>provided</scope>
     </dependency>

      <!-- RHQ specific versioning for components -->
      <dependency>
         <groupId>org.rhq</groupId>
         <artifactId>rhq-jboss-as-dmr-client</artifactId>
         <version>${rhq-jboss-as-dmr-client.version}</version>
      </dependency>

  </dependencies>

  </dependencyManagement>


  <dependencies>

    <dependency>
      <groupId>commons-logging</groupId>
      <artifactId>commons-logging</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.testng</groupId>
      <artifactId>testng</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- for the Nullable/NotNull annotations -->
    <dependency>
      <groupId>org.jetbrains</groupId>
      <artifactId>annotations</artifactId>
      <scope>provided</scope>
    </dependency>

  </dependencies>


  <build>

     <defaultGoal>install</defaultGoal>

     <pluginManagement>
       <plugins>

         <plugin>
           <artifactId>maven-antrun-plugin</artifactId>
           <version>1.7</version>
           <dependencies>
             <!-- Standard ANT dist (no more "nodeps" since 1.8.2) -->
             <dependency>
                <groupId>org.apache.ant</groupId>
                <artifactId>ant</artifactId>
                <version>1.8.4</version>
             </dependency>

             <!-- This includes the <if> task, and a bunch of other handy tasks. -->
             <dependency>
               <groupId>ant-contrib</groupId>
               <artifactId>ant-contrib</artifactId>
               <version>${ant.contrib.version}</version>
               <exclusions>
                 <exclusion>
                   <groupId>org.apache.ant</groupId>
                   <artifactId>ant</artifactId>
                 </exclusion>
               </exclusions>
             </dependency>
           </dependencies>

           <executions>
              <execution>
                 <id>pre-create target/classes</id>
                 <phase>process-resources</phase>
                 <goals>
                    <goal>run</goal>
                 </goals>
                 <configuration>
                    <target>
                       <echo>Pre-creating target/classes so that Jacoco can see it even if there are no source files in the module.</echo>
                       <mkdir dir="${project.build.directory}/classes" />
                    </target>
                 </configuration>
              </execution>
           </executions>
        </plugin>

         <plugin>
           <artifactId>maven-assembly-plugin</artifactId>
           <version>2.2</version>
         </plugin>
         <plugin>
           <artifactId>maven-clean-plugin</artifactId>
           <version>2.4.1</version>
         </plugin>
         <plugin>
           <artifactId>maven-compiler-plugin</artifactId>
           <version>3.0</version>
         </plugin>
         <plugin>
           <artifactId>maven-dependency-plugin</artifactId>
           <version>2.4</version>
         </plugin>
         <plugin>
           <artifactId>maven-deploy-plugin</artifactId>
           <version>2.5</version>
         </plugin>
         <plugin>
           <artifactId>maven-ear-plugin</artifactId>
           <version>2.8</version>
         </plugin>
         <plugin>
           <artifactId>maven-enforcer-plugin</artifactId>
           <version>1.1</version>
         </plugin>
         <plugin>
           <artifactId>maven-ejb-plugin</artifactId>
           <version>2.3</version>
         </plugin>
         <plugin>
           <artifactId>maven-failsafe-plugin</artifactId>
           <version>2.12.4</version>
           <configuration>
              <argLine>${jacoco.integration-test.args} -Xms32M -Xmx512M</argLine>
           </configuration>
         </plugin>
         <plugin>
           <artifactId>maven-idea-plugin</artifactId>
           <version>2.2</version>
         </plugin>
         <plugin>
           <artifactId>maven-install-plugin</artifactId>
           <version>2.3.1</version>
         </plugin>
         <plugin>
           <artifactId>maven-jar-plugin</artifactId>
           <version>2.4</version>
         </plugin>
         <plugin>
           <artifactId>maven-javadoc-plugin</artifactId>
           <version>2.8</version>
           <configuration>
             <!-- this is needed by jdk 8 not to fail the build because of jdoc issues -->
             <additionalparam>${javadoc.doclint.none}</additionalparam>
           </configuration>
         </plugin>
         <plugin>
           <artifactId>maven-plugin-plugin</artifactId>
           <version>2.6</version>
         </plugin>
         <plugin>
           <artifactId>maven-rar-plugin</artifactId>
           <version>2.2</version>
         </plugin>
         <plugin>
           <artifactId>maven-release-plugin</artifactId>
           <version>2.1</version>
         </plugin>
         <plugin>
           <artifactId>maven-resources-plugin</artifactId>
           <version>2.4.3</version>
         </plugin>
         <plugin>
           <artifactId>maven-site-plugin</artifactId>
           <version>3.0</version>
         </plugin>
         <plugin>
           <artifactId>maven-source-plugin</artifactId>
           <version>2.1.2</version>
         </plugin>
         <plugin>
           <artifactId>maven-surefire-plugin</artifactId>
           <version>2.12.4</version>
           <configuration>
              <argLine>${jacoco.unit-test.args} -Xms32M -Xmx512M</argLine>
           </configuration>
         </plugin>
         <plugin>
           <groupId>org.sonatype.plugins</groupId>
           <artifactId>jarjar-maven-plugin</artifactId>
           <version>1.5</version>
         </plugin>
         <plugin>
           <artifactId>maven-war-plugin</artifactId>
           <version>2.1</version>
         </plugin>
         <plugin>
            <artifactId>maven-surefire-report-plugin</artifactId>
            <version>2.6</version>
         </plugin>

         <!-- === Codehaus Mojo Plugins === -->
         <plugin>
           <groupId>org.codehaus.mojo</groupId>
           <artifactId>build-helper-maven-plugin</artifactId>
           <version>1.7</version>
         </plugin>
         <plugin>
           <groupId>org.codehaus.mojo</groupId>
           <artifactId>buildnumber-maven-plugin</artifactId>
           <version>1.0</version>
         </plugin>
         <plugin>
           <groupId>org.codehaus.mojo</groupId>
           <artifactId>exec-maven-plugin</artifactId>
           <version>1.2.1.jbossorg-3</version>
         </plugin>
         <plugin>
           <groupId>org.codehaus.mojo</groupId>
           <artifactId>properties-maven-plugin</artifactId>
           <version>1.0-alpha-2</version>
         </plugin>
         <plugin>
           <groupId>org.codehaus.mojo</groupId>
           <artifactId>versions-maven-plugin</artifactId>
           <version>1.3.1</version>
         </plugin>
         <plugin>
           <groupId>org.codehaus.mojo</groupId>
           <artifactId>findbugs-maven-plugin</artifactId>
           <version>${findbugs.version}</version>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>animal-sniffer-maven-plugin</artifactId>
            <version>${animal.sniffer.version}</version>
            <dependencies>
               <!-- Upgrade ASM and support Java 8 bytecode -->
               <dependency>
                  <groupId>org.ow2.asm</groupId>
                  <artifactId>asm-all</artifactId>
                  <version>5.0.3</version>
               </dependency>
            </dependencies>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>clirr-maven-plugin</artifactId>
            <version>${clirr.version}</version>
         </plugin>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
           <artifactId>xml-maven-plugin</artifactId>
           <version>1.0</version>
         </plugin>

         <plugin>
           <groupId>org.codehaus.groovy.maven</groupId>
           <artifactId>gmaven-plugin</artifactId>
           <version>1.0</version>
         </plugin>

      	 <plugin>
            <groupId>com.googlecode.maven-overview-plugin</groupId>
            <artifactId>maven-overview-plugin</artifactId>
            <version>RELEASE</version>
            <configuration>
               <width>4096</width>
               <height>4096</height>
               <maxDepth>0</maxDepth>
               <suppressedScopes>provided, test</suppressedScopes>
               <includes>${rhq.groupId}</includes>
               <exclusions>
                  <exclusion>
                     <scope>test</scope>
                  </exclusion>
                  <!--<exclusion>
                     <scope>provided</scope>
                  </exclusion>-->
               </exclusions>
            </configuration>
         </plugin>

         <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco.version}</version>
         </plugin>

         <plugin>
           <groupId>com.sun.tools.xjc.maven2</groupId>
           <artifactId>maven-jaxb-plugin</artifactId>
           <version>1.1</version>
         </plugin>

         <plugin>
           <groupId>org.antlr</groupId>
           <artifactId>antlr3-maven-plugin</artifactId>
           <version>${antlr.version}</version>
         </plugin>
       </plugins>
     </pluginManagement>


    <plugins>

      <!-- Set the 'maven.version' property to the version of Maven being used,
           so we can include the Maven version in the MANIFEST.MF files of all
           build artifacts. -->
      <plugin>
         <groupId>org.codehaus.mojo</groupId>
         <artifactId>build-helper-maven-plugin</artifactId>
         <executions>
           <execution>
             <phase>initialize</phase>
             <goals>
               <goal>maven-version</goal>
             </goals>
           </execution>
         </executions>
      </plugin>

      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
            <!-- As of v2.4 of this plugin, the default delimiters are @*@ -
                 we want the old default of ${*} instead. -->
            <useDefaultDelimiters>false</useDefaultDelimiters>
            <delimiters>
                <delimiter>${*}</delimiter>
            </delimiters>
        </configuration>
      </plugin>

      <!-- Ensure all code compiles and runs on Java 6 or later. -->
      <!-- In addition to this, we also perform the API checks to make sure that
           not only the syntax of the language conforms to Java 6 and the bytecode
           has the correct magic numbers but also that only APIs that are available
           in Java 6 are used in the codebase.
           See the animal-sniffer-maven-plugin build instructions further below. -->
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.6</source>
          <target>1.6</target>
          <proc>none</proc> <!-- disable annotation processing -->
          <showWarnings>true</showWarnings>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
               <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
               <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
               <Maven-Version>${maven.version}</Maven-Version>
               <Java-Version>${java.version}</Java-Version>
               <Java-Vendor>${java.vendor}</Java-Vendor>
               <Os-Name>${os.name}</Os-Name>
               <Os-Arch>${os.arch}</Os-Arch>
               <Os-Version>${os.version}</Os-Version>
               <Build-Number>${buildNumber}</Build-Number>
               <Build-Time>${buildTime}</Build-Time>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-ejb-plugin</artifactId>
        <configuration>
          <ejbVersion>3.0</ejbVersion>
          <archive>
            <manifest>
               <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
               <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
               <addClasspath>true</addClasspath>
               <classpathPrefix>lib/</classpathPrefix>
            </manifest>
            <manifestEntries>
               <Maven-Version>${maven.version}</Maven-Version>
               <Java-Version>${java.version}</Java-Version>
               <Java-Vendor>${java.vendor}</Java-Vendor>
               <Os-Name>${os.name}</Os-Name>
               <Os-Arch>${os.arch}</Os-Arch>
               <Os-Version>${os.version}</Os-Version>
               <Build-Number>${buildNumber}</Build-Number>
               <Build-Time>${buildTime}</Build-Time>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-war-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
               <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
               <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
               <Maven-Version>${maven.version}</Maven-Version>
               <Java-Version>${java.version}</Java-Version>
               <Java-Vendor>${java.vendor}</Java-Vendor>
               <Os-Name>${os.name}</Os-Name>
               <Os-Arch>${os.arch}</Os-Arch>
               <Os-Version>${os.version}</Os-Version>
               <Build-Number>${buildNumber}</Build-Number>
               <Build-Time>${buildTime}</Build-Time>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-ear-plugin</artifactId>
        <configuration>
          <version>1.4</version>  <!-- JEE version -->
          <archive>
            <manifest>
               <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
               <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
            <manifestEntries>
               <Maven-Version>${maven.version}</Maven-Version>
               <Java-Version>${java.version}</Java-Version>
               <Java-Vendor>${java.vendor}</Java-Vendor>
               <Os-Name>${os.name}</Os-Name>
               <Os-Arch>${os.arch}</Os-Arch>
               <Os-Version>${os.version}</Os-Version>
               <Build-Number>${buildNumber}</Build-Number>
               <Build-Time>${buildTime}</Build-Time>
            </manifestEntries>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-versions</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.0</version>
                </requireMavenVersion>
                <requireJavaVersion>
                  <version>[1.7,)</version> <!-- 1.7.x and up -->
                </requireJavaVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
          <systemPropertyVariables>
            <java.util.prefs.userRoot>${java.io.tmpdir}/${user.name}</java.util.prefs.userRoot>
          </systemPropertyVariables>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
          <systemPropertyVariables>
            <java.util.prefs.userRoot>${java.io.tmpdir}/${user.name}</java.util.prefs.userRoot>
          </systemPropertyVariables>
          <testFailureIgnore>true</testFailureIgnore>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-idea-plugin</artifactId>
        <configuration>
          <ideaVersion>6.x</ideaVersion>
          <downloadJavadocs>true</downloadJavadocs>
          <downloadSources>true</downloadSources>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <configuration>
          <appendAssemblyId>false</appendAssemblyId>
        </configuration>
      </plugin>

       <!-- As of v1.0 of the buildnumber plugin, the create goal doesn't work,
            and the create-timestamp goal doesn't provide a way to specify
            a locale or a timezone, so comment this out for now and instead use
            our own homemade mix of antrun and properties-file plugin executions
            (just below this commented out block). (ips, 06/28/11)
       -->
       <!--
       <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <executions>

             <execution>
                <id>setBuildNumber</id>
                <phase>validate</phase>
                <goals>
                   <goal>create</goal>
                </goals>
                <configuration>
                   <useLastCommittedRevision>true</useLastCommittedRevision>
                   <getRevisionOnlyOnce>true</getRevisionOnlyOnce>
                   <revisionOnScmFailure></revisionOnScmFailure>
                   <doCheck>false</doCheck>
                   <doUpdate>false</doUpdate>
                </configuration>
             </execution>

             <execution>
                <id>setBuildTime</id>
                <phase>validate</phase>
                <goals>
                   <goal>create-timestamp</goal>
                </goals>
                <configuration>
                   <timestampFormat>MM/dd/yy hh:mm aa z</timestampFormat>
                   <timestampPropertyName>buildTime</timestampPropertyName>
                </configuration>
             </execution>

          </executions>
       </plugin>
       -->

        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <executions>
              <execution>
                  <id>write-build-properties-file</id>
                  <goals>
                      <goal>run</goal>
                  </goals>
                  <phase>generate-sources</phase>
                  <configuration>
                      <target>
                          <mkdir dir="target" />

                          <tstamp>
                              <format property="buildTime" pattern="MM/dd/yy hh:mm aa z" locale="en,US" timezone="GMT" />
                          </tstamp>
                          <echo file="target/build.properties">buildTime = ${buildTime}${line.separator}</echo>

                          <exec executable="git" outputproperty="buildNumber" failonerror="false" failifexecutionfails="false">
                             <arg value="log"/>
                             <arg value="--pretty=format:%h"/>
                             <arg value="-n1"/>
                          </exec>
                          <echo file="target/build.properties" append="true">buildNumber = ${buildNumber}${line.separator}</echo>
                      </target>
                  </configuration>
              </execution>

              <execution>
                  <id>echo-build-properties</id>
                  <phase>compile</phase>
                  <goals>
                      <goal>run</goal>
                  </goals>
                  <configuration>
                      <target>
                          <echo level="debug">buildTime = ${buildTime}</echo>
                          <echo level="debug">buildNumber = ${buildNumber}</echo>
                      </target>
                  </configuration>
              </execution>

              <execution>
                <id>javadoc-dist</id>
                <phase>site</phase>
                <inherited>false</inherited>
                <configuration>
                   <target>
                      <property name="apidocs.dir" value="target/apidocs" />

                      <copy todir="${apidocs.dir}/domain">
                         <fileset dir="modules/core/domain/target/site/apidocs" erroronmissingdir="false"/>
                      </copy>
                   </target>
                </configuration>
                <goals>
                   <goal>run</goal>
                </goals>
             </execution>
          </executions>
      </plugin>

      <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <executions>
              <execution>
                  <id>read-build-properties-file</id>
                  <phase>process-sources</phase>
                  <goals>
                      <goal>read-project-properties</goal>
                  </goals>
                  <configuration>
                      <files>
                          <file>${project.build.directory}/build.properties</file>
                      </files>
                      <quiet>true</quiet>
                  </configuration>
              </execution>
          </executions>
      </plugin>

      <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>animal-sniffer-maven-plugin</artifactId>
          <executions>
              <execution>
                  <id>java-api-check</id>
                  <configuration>
                      <signature>
                         <groupId>${animal.sniffer.java.signature.groupId}</groupId>
                         <artifactId>${animal.sniffer.java.signature.artifactId}</artifactId>
                         <version>${animal.sniffer.java.signature.version}</version>
                      </signature>
                  </configuration>
                  <phase>verify</phase>
                  <goals>
                      <goal>check</goal>
                  </goals>
              </execution>
          </executions>
      </plugin>
    </plugins>

  </build>

  <repositories>

    <!-- spinder 3-4-15: removing this repo until invalid artifacts are removed.
    <repository>
       <id>eap</id>
       <name>EAP Repository</name>
       <url>http://maven.repository.redhat.com/techpreview/eap6/6.3.0.Alpha/maven-repository/</url>
       <snapshots>
         <enabled>false</enabled>
       </snapshots>
    </repository>-->

<!--
    <repository>
       <id>jboss-deprecated-repository</id>
       <name>JBoss Deprecated</name>
       <url>https://repository.jboss.org/maven2/</url>
       <releases>
         <enabled>true</enabled>
         <updatePolicy>never</updatePolicy>
       </releases>
       <snapshots>
         <enabled>false</enabled>
       </snapshots>
    </repository>
-->
    <repository>
       <id>jboss-public-repo-group</id>
       <name>JBoss Public Repository Group</name>
       <url>http://repository.jboss.org/nexus/content/groups/public/</url>
       <!-- Explicitly disable snapshots, so Maven won't try to
            check for updates for snapshot internal (rhq-*) deps. -->
       <snapshots>
         <enabled>false</enabled>
       </snapshots>
    </repository>

      <!-- jboss-deprecated-repo above is only available inside Red Hat, so we need this as fallback: -->
      <repository>
          <id>jboss-deprecated-items-group</id>
          <name>JBoss Public Repository Group</name>
          <url>https://repository.jboss.org/nexus/content/repositories/deprecated/</url>
          <snapshots>
              <enabled>false</enabled>
          </snapshots>
      </repository>

      <repository>
        <id>redhat-maven-repository</id>
        <name>Red Hat maven repository</name>
        <url>http://maven.repository.redhat.com/earlyaccess/all</url>
        <snapshots>
            <enabled>false</enabled>
        </snapshots>

      </repository>

      <!-- this is needed for swagger-annotations_2.9.1 in modules/enterprise/server/jar -->
      <repository>
          <id>sonatype-snapshots</id>
          <name>Sonatype Snapshots</name>
          <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
          <snapshots>
             <enabled>true</enabled>
          </snapshots>
      </repository>

  </repositories>

  <pluginRepositories>

    <pluginRepository>
       <id>jboss-public-repo-group</id>
       <name>JBoss Public Repository Group</name>
       <url>http://repository.jboss.org/nexus/content/groups/public/</url>
    </pluginRepository>

    <pluginRepository>
       <id>jboss-central-mirror-repo-group</id>
       <name>JBoss Public Repository Group</name>
       <url>https://repository.jboss.org/nexus/content/groups/developer/</url>
    </pluginRepository>

  </pluginRepositories>

  <distributionManagement>

    <snapshotRepository>
      <id>jboss-snapshots-repository</id>
      <name>JBoss Snapshots Repository</name>
      <url>https://repository.jboss.org/nexus/content/repositories/snapshots/</url>
    </snapshotRepository>

    <repository>
      <id>jboss-releases-repository</id>
      <name>JBoss Releases Repository</name>
      <url>https://repository.jboss.org/nexus/service/local/staging/deploy/maven2/</url>
    </repository>

  </distributionManagement>


  <modules>
    <module>modules</module>
    <module>code-coverage</module>
  </modules>


  <profiles>

    <!-- This profile is the "opposite" of the code coverage profile and provides
       default values for properties that are set in the code-coverage profile
       to kick of jacoco java agent. -->
    <profile>
       <id>no-code-coverage</id>
       <activation>
          <property>
             <name>!code-coverage</name>
          </property>
       </activation>

       <properties>
          <jacoco.unit-test.args></jacoco.unit-test.args>
          <jacoco.integration-test.args></jacoco.integration-test.args>
       </properties>
    </profile>

    <profile>
       <id>code-coverage</id>
       <activation>
          <property>
             <name>code-coverage</name>
          </property>
       </activation>

       <dependencies>
          <dependency>
             <groupId>org.jboss.arquillian.extension</groupId>
             <artifactId>arquillian-jacoco</artifactId>
             <scope>test</scope>
          </dependency>

          <dependency>
             <groupId>org.jacoco</groupId>
             <artifactId>org.jacoco.core</artifactId>
             <scope>test</scope>
          </dependency>
       </dependencies>

       <build>
          <plugins>
             <!-- This definition creates the 2 independent coverage reports -
                separately for unit tests and integration tests -->
             <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <executions>
                   <execution>
                      <id>prepare-agent-for-unit-tests</id>
                      <phase>process-resources</phase>
                      <goals>
                         <goal>prepare-agent</goal>
                      </goals>
                      <configuration>
                         <destFile>${project.build.directory}/jacoco-unit-test.exec</destFile>
                         <propertyName>jacoco.unit-test.args</propertyName>
                         <includes>
                            <include>org.rhq.*</include>
                         </includes>
                      </configuration>
                   </execution>
                   <execution>
                      <id>prepare-agent-for-integration-tests</id>
                      <phase>pre-integration-test</phase>
                      <goals>
                         <goal>prepare-agent</goal>
                      </goals>
                      <configuration>
                         <destFile>${project.build.directory}/jacoco-integration-test.exec</destFile>
                         <propertyName>jacoco.integration-test.args</propertyName>
                      </configuration>
                   </execution>
                   <execution>
                      <id>report-unit-tests</id>
                      <phase>prepare-package</phase>
                      <goals>
                         <goal>report</goal>
                      </goals>
                      <configuration>
                         <dataFile>${project.build.directory}/jacoco-unit-test.exec</dataFile>
                         <outputDirectory>${project.reporting.outputDirectory}/coverage-report/unit-tests</outputDirectory>
                         <includes>
                            <include>org/rhq/**</include>
                         </includes>
                      </configuration>
                   </execution>
                   <execution>
                      <id>report-integration-tests</id>
                      <!-- Run this very late so that test, integration-test
                         have already been completed -->
                      <phase>verify</phase>
                      <goals>
                         <goal>report</goal>
                      </goals>
                      <configuration>
                         <dataFile>${project.build.directory}/jacoco-integration-test.exec</dataFile>
                         <outputDirectory>${project.reporting.outputDirectory}/coverage-report/integration-tests</outputDirectory>
                         <includes>
                            <include>org/rhq/**</include>
                         </includes>
                      </configuration>
                   </execution>
                </executions>
             </plugin>

             <!-- The following insanity merges the two separate coverage reports
                and produces an overall report - the total test coverage including
                both unit and integration tests (defined in the same module).
                If the integration test resides in a separate module, it is only
                possible to deduce the coverage from report generated by the
                top-level code-coverage module that merges all the coverage
                reports in the whole build. -->
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-dependency-plugin</artifactId>
               <executions>
                  <!-- Copy the ant tasks jar. Needed for org.jacoco.ant.ReportTask . -->
                  <execution>
                     <id>jacoco-dependency-ant</id>
                     <goals>
                        <goal>copy</goal>
                     </goals>
                     <phase>process-test-resources</phase>
                     <inherited>false</inherited>
                     <configuration>
                        <artifactItems>
                           <artifactItem>
                              <groupId>org.jacoco</groupId>
                              <artifactId>org.jacoco.ant</artifactId>
                           </artifactItem>
                        </artifactItems>
                        <stripVersion>true</stripVersion>
                        <outputDirectory>${project.build.directory}/jacoco-jars</outputDirectory>
                     </configuration>
                  </execution>
               </executions>
            </plugin>
            <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-antrun-plugin</artifactId>
               <executions>
                  <execution>
                     <id>overall-chart-creation</id>
                     <phase>verify</phase>
                     <goals>
                        <goal>run</goal>
                     </goals>
                     <configuration>
                        <target>
                           <!-- Execute an ant task within maven -->
                           <echo message="Generating Overall JaCoCo Report" />
                           <taskdef name="report" classname="org.jacoco.ant.ReportTask">
                              <classpath path="${project.build.directory}/jacoco-jars/org.jacoco.ant.jar" />
                           </taskdef>
                           <mkdir dir="${project.reporting.outputDirectory}/coverage-report/overall" />
                           <report>
                              <executiondata>
                                 <fileset dir="${project.build.directory}">
                                    <include name="jacoco-unit-test.exec" />
                                    <include name="jacoco-integration-test.exec" />
                                 </fileset>
                              </executiondata>
                              <structure name="Overall Code Coverage Report (including unit and integration tests)">
                                 <classfiles>
                                    <fileset dir="${project.build.directory}">
                                       <include name="classes/org/rhq/**" />
                                       <include name="generated-classes/*/org/rhq/**" />
                                    </fileset>
                                 </classfiles>
                                 <sourcefiles>
                                    <dirset dir="${basedir}">
                                       <include name="src/main/java" />
                                       <include name="target/generated-sources/*" />
                                    </dirset>
                                 </sourcefiles>
                              </structure>
                              <html destdir="${project.reporting.outputDirectory}/coverage-report/overall" />
                              <xml destfile="${project.reporting.outputDirectory}/coverage-report/overall/jacoco.xml" />
                              <csv destfile="${project.reporting.outputDirectory}/coverage-report/overall/jacoco.csv" />
                           </report>
                        </target>
                     </configuration>
                  </execution>
               </executions>
               <dependencies>
                  <dependency>
                     <groupId>org.jacoco</groupId>
                     <artifactId>org.jacoco.ant</artifactId>
                      <!-- For some strange reason this needs to be here even though the version is specified
                           in the dependency management of the root pom. -->
                     <version>${jacoco.version}</version>
                  </dependency>
               </dependencies>
            </plugin>
          </plugins>
       </build>
    </profile>

    <!-- NOTE: This profile is extended upon in several other submodules.
         If you need to change its activation policy, make sure to do that in
         *ALL* the modules that define this profile. -->
    <profile>
        <id>bundle-additional-script-languages</id>
        <activation>
           <property>
              <!-- we want this always active but activeByDefault doesn't work -->
              <!-- see http://maven.apache.org/guides/introduction/introduction-to-profiles.html -->
              <name>java.home</name>
           </property>
        </activation>

        <!-- Can be used to pass a flag down to deployment composing ANT scripts and somesuch -->
        <properties>
           <rhq.bundle-additional-script-languages>true</rhq.bundle-additional-script-languages>
        </properties>
    </profile>

    <profile>
        <id>ojdbc-driver</id>
        <activation>
            <property>
                <name>rhq.m2.repo.url.oracle</name>
            </property>
        </activation>

        <dependencies>
            <!-- Oracle JDBC driver - required only if you want to run the tests, or dbsetup, against Oracle.
                 Add a top level dependency if this profile is active to allow for db-required tests in any module.
                 The driver can not be packaged for OpenSource distributions due to licensing issues, and as such,
                 this profile should not be active by default. -->
            <dependency>
                <groupId>com.oracle</groupId>
                <artifactId>ojdbc6</artifactId>
                <version>${ojdbc6.version}</version>
                <scope>provided</scope>
            </dependency>
        </dependencies>
    </profile>

    <profile>
     <id>dev</id>

     <properties>
        <!-- The below prop can be used by antrun scripts to check if the dev profile is enabled. -->
        <dev.profile.active>true</dev.profile.active>
        <!-- This tells dbsetup (in the dbutils module) to use the dev DB conn props
             (rhq.dev.ds.*), rather than the test DB conn props (rhq.test.ds.*). -->
        <db>dev</db>
     </properties>

     <build>
      <plugins>

       <plugin>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>validate</phase>
            <inherited>false</inherited>
            <configuration>
              <target>
                <echo>.                            !!!!!!! dev profile is active !!!!!!!</echo>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
       </plugin>

       <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <useFile>false</useFile>
        </configuration>
       </plugin>

       <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <configuration>
          <useFile>false</useFile>
        </configuration>
       </plugin>

      </plugins>
     </build>

    </profile>

      <profile>
         <id>test.debug</id>
         <activation>
            <property>
               <name>test.debug</name>
            </property>
         </activation>

         <properties>
            <!-- See: http://maven.apache.org/plugins/maven-surefire-plugin/test-mojo.html#debugForkedProcess -->
            <maven.surefire.debug>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=8797,server=y,suspend=y</maven.surefire.debug>
         </properties>
      </profile>

      <profile>
         <id>itest.debug</id>
         <activation>
            <property>
               <name>itest.debug</name>
            </property>
         </activation>

         <properties>
            <!-- See: http://maven.apache.org/plugins/maven-failsafe-plugin/integration-test-mojo.html#debugForkedProcess -->
            <maven.failsafe.debug>-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=8797,server=y,suspend=y</maven.failsafe.debug>
         </properties>
      </profile>

      <!-- This profile should be enabled when a release is being published.
           It will ensure that sources and javadoc jars are built and published
           for each source module. -->
      <profile>
         <id>publish</id>

         <build>
            <plugins>

                <plugin>
                  <artifactId>maven-source-plugin</artifactId>
                  <executions>
                    <execution>
                      <id>attach-sources</id>
                      <goals>
                        <goal>jar</goal>
                      </goals>
                    </execution>
                  </executions>
                </plugin>

                <plugin>
                  <artifactId>maven-javadoc-plugin</artifactId>
                  <executions>
                    <execution>
                      <id>attach-javadocs</id>
                      <goals>
                        <goal>jar</goal>
                      </goals>
                    </execution>
                  </executions>
                </plugin>

            </plugins>
         </build>
      </profile>

  <profile>
     <id>signature-check</id>
     <build>
        <plugins>
           <plugin>
               <groupId>org.codehaus.mojo</groupId>
               <artifactId>build-helper-maven-plugin</artifactId>
               <executions>
                   <execution>
                       <id>version-resolver</id>
                       <goals>
                           <goal>released-version</goal>
                       </goals>
                       <configuration>
                           <propertyPrefix>signature-check-base</propertyPrefix>
                       </configuration>
                   </execution>
               </executions>
           </plugin>
           <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>clirr-maven-plugin</artifactId>
              <executions>
                 <execution>
                    <id>signature-check</id>
                    <goals>
                       <goal>check</goal>
                    </goals>
                    <configuration>
                       <comparisonArtifacts>
                          <comparisonArtifact>
                             <groupId>${project.groupId}</groupId>
                             <artifactId>${project.artifactId}</artifactId>
                             <version>${signature-check-base.version}</version>
                          </comparisonArtifact>
                       </comparisonArtifacts>
                       <logResults>true</logResults>
                       <xmlOutputFile>${project.build.directory}/${project.build.finalName}.signature-check.xml</xmlOutputFile>
                       <failOnError>true</failOnError>
                       <failOnWarning>true</failOnWarning>
                       <skip>${rhq.internal}</skip>
                       <ignoredDifferencesFile>intentional-api-changes-since-${signature-check-base.version}.xml</ignoredDifferencesFile>
                    </configuration>
                 </execution>
              </executions>
           </plugin>
        </plugins>
     </build>

     <reporting>
        <plugins>
           <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>clirr-maven-plugin</artifactId>
              <version>${clirr.version}</version>
              <configuration>
                 <comparisonVersion>${signature-check-base-version}</comparisonVersion>
                 <comparisonArtifacts>
                    <comparisonArtifact>
                       <groupId>${project.groupId}</groupId>
                       <artifactId>${project.artifactId}</artifactId>
                       <version>${signature-check-base-version}</version>
                    </comparisonArtifact>
                 </comparisonArtifacts>
                 <skip>${rhq.internal}</skip>
                 <minSeverity>info</minSeverity>
              </configuration>
           </plugin>
        </plugins>
     </reporting>
  </profile>

  <profile>
     <activation>
        <property>
           <name>generate-dependency-graph</name>
           <value>true</value>
        </property>
     </activation>

     <reporting>
        <plugins>
           <plugin>
              <groupId>com.googlecode.maven-overview-plugin</groupId>
              <artifactId>maven-overview-plugin</artifactId>
              <configuration>
                 <skip>${skip.overview}</skip>
              </configuration>
           </plugin>
        </plugins>
     </reporting>
   </profile>
   <profile>
      <id>java8-disable-strict-javadoc</id>
      <activation>
         <jdk>[1.8,)</jdk>
      </activation>
      <properties>
         <javadoc.doclint.none>-Xdoclint:none</javadoc.doclint.none>
      </properties>
   </profile>
  </profiles>

    <reporting>
        <plugins>
           <plugin>
              <artifactId>maven-project-info-reports-plugin</artifactId>
              <version>2.0.1</version>
              <reportSets>
              <reportSet>
              </reportSet>
              </reportSets>
           </plugin>

           <plugin>
             <artifactId>maven-surefire-report-plugin</artifactId>
             <version>2.6</version>
           </plugin>

           <plugin>
             <groupId>org.codehaus.mojo</groupId>
             <artifactId>clirr-maven-plugin</artifactId>
             <version>${clirr.version}</version>
           </plugin>

<!--
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>

                <configuration>
                   <author>false</author>
                   <breakiterator>true</breakiterator>
                   <verbose>true</verbose>
                </configuration>

                <reportSets>

                  <reportSet>
                    <id>agent-plugin</id>
                    <configuration>
                      <doctitle>RHQ ${rhq.pom.version} Agent Plugin API</doctitle>
                      <destDir>agentPlugin-apidocs</destDir>
                      <subpackages>org.rhq.core.domain:org.rhq.core.util:org.rhq.core.system:org.rhq.core.pluginapi</subpackages>
                    </configuration>
                    <reports>
                      <report>aggregate</report>
                    </reports>
                  </reportSet>

                  <reportSet>
                    <id>remote</id>
                    <configuration>
                      <doctitle>RHQ ${rhq.pom.version} Remote API</doctitle>
                      <windowtitle>RHQ ${rhq.pom.version} Remote API</windowtitle>
                      <destDir>remote-apidocs</destDir>
                      <subpackages>org.rhq.core.domain:org.rhq.enterprise.server:org.rhq.enterprise.client</subpackages>
                      <links>
                         <link>http://java.sun.com/javaee/5/docs/api/</link>
                      </links>
                    </configuration>
                    <reports>
                      <report>aggregate</report>
                    </reports>
                  </reportSet>

                </reportSets>
            </plugin>
-->
<!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>
                <inherited>true</inherited>
            </plugin>
-->
<!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <xmlOutput>true</xmlOutput>
                    <effort>Max</effort>
                    <threshold>Default</threshold>
                </configuration>
                <inherited>true</inherited>
            </plugin>
-->
<!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jdepend-maven-plugin</artifactId>
                <version>2.0-beta-2</version>
            </plugin>
-->
<!--
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>2.9</version>
            </plugin>
-->
<!--
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>emma-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <inherited>true</inherited>
            </plugin>
-->
<!--
            <plugin>
                <!- - must be last plugin in the list - ->
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>dashboard-maven-plugin</artifactId>
                <version>1.0.0-beta-1</version>
            </plugin>
-->
        </plugins>
    </reporting>

    <!-- more properties related to mvn site -->
    <licenses>
        <license>
            <name>GPL</name>
            <url>http://www.gnu.org/licenses/gpl.html</url>
        </license>
    </licenses>

    <developers>
        <developer>
            <name>Robert Buck</name>
            <timezone>-5</timezone>
            <roles>
               <role>retired</role>
            </roles>
        </developer>
        <developer>
          <name>Michael Burman</name>
          <timezone>+2</timezone>
        </developer>
        <developer>
            <name>Charles Crouch</name>
            <timezone>-6</timezone>
            <roles>
                 <role>retired</role>
            </roles>
        </developer>
        <developer>
            <name>Jason Dobies</name>
            <timezone>-5</timezone>
            <roles>
                <role>retired</role>
            </roles>
        </developer>
        <developer>
            <name>Filip Drabek</name>
            <timezone>+1</timezone>
            <roles>
                <role>retired</role>
            </roles>
        </developer>
        <developer>
            <name>Greg Hinkle</name>
            <timezone>-5</timezone>
            <url>http://www.jroller.com/ghinkle/</url>
            <roles>
                <role>retired</role>
            </roles>
        </developer>
        <developer>
            <name>Lukas Krejci</name>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <name>Jirka Kremser</name>
            <email>jkremser@redhat.com</email>
            <timezone>+1</timezone>
            <url>http://serviceasaservice.wordpress.com/</url>
        </developer>
        <developer>
            <name>Joseph Marques</name>
            <url>http://josephmarques.wordpress.com/</url>
            <timezone>-5</timezone>
            <roles>
                <role>retired</role>
            </roles>
        </developer>
        <developer>
            <name>Fady Matar</name>
            <timezone>+2</timezone>
            <roles>
                <role>retired</role>
            </roles>
        </developer>
        <developer>
            <name>John 'Mazz' Mazzitelli</name>
            <timezone>-5</timezone>
            <url>http://management-platform.blogspot.com/</url>
        </developer>
        <developer>
            <name>Stefan Negrea</name>
            <timezone>-6</timezone>
        </developer>
        <developer>
            <name>Simeon Pinder</name>
            <timezone>-5</timezone>
        </developer>
        <developer>
            <name>Heiko W. Rupp</name>
            <email>hrupp@redhat.com</email>
            <url>http://pilhuhn.blogspot.com/</url>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <name>John Sanda</name>
            <url>http://johnsanda.blogspot.com/</url>
            <timezone>-5</timezone>
        </developer>
        <developer>
            <name>Jessica Sant</name>
            <timezone>-5</timezone>
            <roles>
                <role>retired</role>
            </roles>
        </developer>
        <developer>
            <name>Thomas Segismont</name>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <name>Jay Shaughnessy</name>
            <timezone>-5</timezone>
        </developer>
        <developer>
            <name>Ian Springer</name>
            <timezone>-5</timezone>
            <url>http://freshjava.blogspot.com/</url>
          <roles>
              <role>retired</role>
          </roles>
        </developer>
        <developer>
            <name>Mike Thompson</name>
            <timezone>-8</timezone>
        </developer>
        <developer>
            <name>Libor Zoubek</name>
            <timezone>+1</timezone>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>Steve Millidge</name>
            <timezone>0</timezone>
        </contributor>
        <contributor>
            <name>Alex Kiefer</name>
            <timezone>+1</timezone>
            <roles>
                <role>retired</role>
            </roles>
        </contributor>
        <contributor>
            <name>Rafael Torres Coelho Soares</name>
            <timezone>-7</timezone>
        </contributor>
        <contributor>
            <name>Elias Ross</name>
            <timezone>-8</timezone>
        </contributor>
        <contributor>
            <name>Fusayuki Minamoto</name>
            <timezone>+6</timezone>
        </contributor>
        <contributor>
            <name>Liju Jijun</name>
            <timezone>+6</timezone>
        </contributor>
        <contributor>
            <name>Zhongqianglee</name>
            <timezone>+6</timezone>
        </contributor>
        <contributor>
            <name>Frank Brüseke</name>
            <timezone>+1</timezone>
        </contributor>
        <contributor>
            <name>Michael Burman</name>
            <timezone>+2</timezone>
        </contributor>
        <contributor>
            <name>Torben Jäger</name>
            <timezone>+1</timezone>
        </contributor>
        <contributor>
            <name>Richard Hensman</name>
            <timezone>0</timezone>
        </contributor>
        <contributor>
            <name>Rafael Chies</name>
            <timezone>-7</timezone>
            <url>http://blogdorafaelchies.wordpress.com/</url>
        </contributor>
        <contributor>
            <name>Jérémie Lagarde</name>
            <timezone>+1</timezone>
            <url>http://printstacktrace.org/blog/</url>
        </contributor>
    </contributors>

    <mailingLists>
        <mailingList>
            <name>User List</name>
            <subscribe>https://fedorahosted.org/mailman/listinfo/rhq-users</subscribe>
            <unsubscribe>https://fedorahosted.org/mailman/listinfo/rhq-users</unsubscribe>
            <post>rhq-users@lists.fedorahosted.org</post>
            <archive>https://fedorahosted.org/pipermail/rhq-users/</archive>
        </mailingList>
        <mailingList>
            <name>Developer List</name>
            <subscribe>https://fedorahosted.org/mailman/listinfo/rhq-devel</subscribe>
            <unsubscribe>https://fedorahosted.org/mailman/listinfo/rhq-devel</unsubscribe>
            <post>rhq-devel@lists.fedorahosted.org</post>
            <archive>https://fedorahosted.org/pipermail/rhq-devel/</archive>
        </mailingList>
    </mailingLists>

</project>
